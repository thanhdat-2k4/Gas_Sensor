
CAM_BIEN_KHI_GAS.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000048a0  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000458  08004a40  08004a40  00005a40  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004e98  08004e98  000061d0  2**0
                  CONTENTS
  4 .ARM          00000008  08004e98  08004e98  00005e98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08004ea0  08004ea0  000061d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004ea0  08004ea0  00005ea0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08004ea4  08004ea4  00005ea4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001d0  20000000  08004ea8  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000017c  200001d0  08005078  000061d0  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000034c  08005078  0000634c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000061d0  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001e58  00000000  00000000  00006200  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000072b  00000000  00000000  00008058  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000250  00000000  00000000  00008788  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000001a7  00000000  00000000  000089d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001587c  00000000  00000000  00008b7f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00002f6f  00000000  00000000  0001e3fb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00085d32  00000000  00000000  0002136a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000a709c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001960  00000000  00000000  000a70e0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000077  00000000  00000000  000a8a40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200001d0 	.word	0x200001d0
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08004a28 	.word	0x08004a28

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200001d4 	.word	0x200001d4
 80001dc:	08004a28 	.word	0x08004a28

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <strlen>:
 8000280:	4603      	mov	r3, r0
 8000282:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000286:	2a00      	cmp	r2, #0
 8000288:	d1fb      	bne.n	8000282 <strlen+0x2>
 800028a:	1a18      	subs	r0, r3, r0
 800028c:	3801      	subs	r0, #1
 800028e:	4770      	bx	lr

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	@ 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000bb8:	b480      	push	{r7}
 8000bba:	b083      	sub	sp, #12
 8000bbc:	af00      	add	r7, sp, #0
 8000bbe:	4603      	mov	r3, r0
 8000bc0:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000bc2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000bc6:	2b00      	cmp	r3, #0
 8000bc8:	db0b      	blt.n	8000be2 <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000bca:	79fb      	ldrb	r3, [r7, #7]
 8000bcc:	f003 021f 	and.w	r2, r3, #31
 8000bd0:	4907      	ldr	r1, [pc, #28]	@ (8000bf0 <__NVIC_EnableIRQ+0x38>)
 8000bd2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000bd6:	095b      	lsrs	r3, r3, #5
 8000bd8:	2001      	movs	r0, #1
 8000bda:	fa00 f202 	lsl.w	r2, r0, r2
 8000bde:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 8000be2:	bf00      	nop
 8000be4:	370c      	adds	r7, #12
 8000be6:	46bd      	mov	sp, r7
 8000be8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bec:	4770      	bx	lr
 8000bee:	bf00      	nop
 8000bf0:	e000e100 	.word	0xe000e100

08000bf4 <delay_ms>:
volatile uint8_t tim2_blink_state = 0;
volatile uint8_t relay_blink_state = 0;

void SystemClock_Config(void);
void UART_Transmit(const char *data);
void delay_ms(uint32_t ms) {
 8000bf4:	b480      	push	{r7}
 8000bf6:	b085      	sub	sp, #20
 8000bf8:	af00      	add	r7, sp, #0
 8000bfa:	6078      	str	r0, [r7, #4]
    uint32_t start = tick_count;
 8000bfc:	4b09      	ldr	r3, [pc, #36]	@ (8000c24 <delay_ms+0x30>)
 8000bfe:	681b      	ldr	r3, [r3, #0]
 8000c00:	60fb      	str	r3, [r7, #12]
    while (tick_count - start < ms) __NOP();
 8000c02:	e000      	b.n	8000c06 <delay_ms+0x12>
 8000c04:	bf00      	nop
 8000c06:	4b07      	ldr	r3, [pc, #28]	@ (8000c24 <delay_ms+0x30>)
 8000c08:	681a      	ldr	r2, [r3, #0]
 8000c0a:	68fb      	ldr	r3, [r7, #12]
 8000c0c:	1ad3      	subs	r3, r2, r3
 8000c0e:	687a      	ldr	r2, [r7, #4]
 8000c10:	429a      	cmp	r2, r3
 8000c12:	d8f7      	bhi.n	8000c04 <delay_ms+0x10>
}
 8000c14:	bf00      	nop
 8000c16:	bf00      	nop
 8000c18:	3714      	adds	r7, #20
 8000c1a:	46bd      	mov	sp, r7
 8000c1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c20:	4770      	bx	lr
 8000c22:	bf00      	nop
 8000c24:	200001f0 	.word	0x200001f0

08000c28 <delay_us>:
void delay_us(uint32_t us) {
 8000c28:	b480      	push	{r7}
 8000c2a:	b085      	sub	sp, #20
 8000c2c:	af00      	add	r7, sp, #0
 8000c2e:	6078      	str	r0, [r7, #4]
    for (uint32_t i = 0; i < us * 8; i++) __NOP();
 8000c30:	2300      	movs	r3, #0
 8000c32:	60fb      	str	r3, [r7, #12]
 8000c34:	e003      	b.n	8000c3e <delay_us+0x16>
 8000c36:	bf00      	nop
 8000c38:	68fb      	ldr	r3, [r7, #12]
 8000c3a:	3301      	adds	r3, #1
 8000c3c:	60fb      	str	r3, [r7, #12]
 8000c3e:	687b      	ldr	r3, [r7, #4]
 8000c40:	00db      	lsls	r3, r3, #3
 8000c42:	68fa      	ldr	r2, [r7, #12]
 8000c44:	429a      	cmp	r2, r3
 8000c46:	d3f6      	bcc.n	8000c36 <delay_us+0xe>
}
 8000c48:	bf00      	nop
 8000c4a:	bf00      	nop
 8000c4c:	3714      	adds	r7, #20
 8000c4e:	46bd      	mov	sp, r7
 8000c50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c54:	4770      	bx	lr
	...

08000c58 <SystemClock_Config>:

void SystemClock_Config(void) {
 8000c58:	b480      	push	{r7}
 8000c5a:	af00      	add	r7, sp, #0
    RCC->CR |= RCC_CR_HSEON;
 8000c5c:	4b1a      	ldr	r3, [pc, #104]	@ (8000cc8 <SystemClock_Config+0x70>)
 8000c5e:	681b      	ldr	r3, [r3, #0]
 8000c60:	4a19      	ldr	r2, [pc, #100]	@ (8000cc8 <SystemClock_Config+0x70>)
 8000c62:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8000c66:	6013      	str	r3, [r2, #0]
    while (!(RCC->CR & RCC_CR_HSERDY));
 8000c68:	bf00      	nop
 8000c6a:	4b17      	ldr	r3, [pc, #92]	@ (8000cc8 <SystemClock_Config+0x70>)
 8000c6c:	681b      	ldr	r3, [r3, #0]
 8000c6e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8000c72:	2b00      	cmp	r3, #0
 8000c74:	d0f9      	beq.n	8000c6a <SystemClock_Config+0x12>
    RCC->PLLCFGR = (8 << 0) | (336 << 6) | (1 << 16);
 8000c76:	4b14      	ldr	r3, [pc, #80]	@ (8000cc8 <SystemClock_Config+0x70>)
 8000c78:	4a14      	ldr	r2, [pc, #80]	@ (8000ccc <SystemClock_Config+0x74>)
 8000c7a:	605a      	str	r2, [r3, #4]
    RCC->CR |= RCC_CR_PLLON;
 8000c7c:	4b12      	ldr	r3, [pc, #72]	@ (8000cc8 <SystemClock_Config+0x70>)
 8000c7e:	681b      	ldr	r3, [r3, #0]
 8000c80:	4a11      	ldr	r2, [pc, #68]	@ (8000cc8 <SystemClock_Config+0x70>)
 8000c82:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8000c86:	6013      	str	r3, [r2, #0]
    while (!(RCC->CR & RCC_CR_PLLRDY));
 8000c88:	bf00      	nop
 8000c8a:	4b0f      	ldr	r3, [pc, #60]	@ (8000cc8 <SystemClock_Config+0x70>)
 8000c8c:	681b      	ldr	r3, [r3, #0]
 8000c8e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8000c92:	2b00      	cmp	r3, #0
 8000c94:	d0f9      	beq.n	8000c8a <SystemClock_Config+0x32>
    RCC->CFGR |= RCC_CFGR_SW_PLL;
 8000c96:	4b0c      	ldr	r3, [pc, #48]	@ (8000cc8 <SystemClock_Config+0x70>)
 8000c98:	689b      	ldr	r3, [r3, #8]
 8000c9a:	4a0b      	ldr	r2, [pc, #44]	@ (8000cc8 <SystemClock_Config+0x70>)
 8000c9c:	f043 0302 	orr.w	r3, r3, #2
 8000ca0:	6093      	str	r3, [r2, #8]
    while ((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);
 8000ca2:	bf00      	nop
 8000ca4:	4b08      	ldr	r3, [pc, #32]	@ (8000cc8 <SystemClock_Config+0x70>)
 8000ca6:	689b      	ldr	r3, [r3, #8]
 8000ca8:	f003 030c 	and.w	r3, r3, #12
 8000cac:	2b08      	cmp	r3, #8
 8000cae:	d1f9      	bne.n	8000ca4 <SystemClock_Config+0x4c>
    RCC->CFGR |= RCC_CFGR_HPRE_DIV1 | RCC_CFGR_PPRE1_DIV2 | RCC_CFGR_PPRE2_DIV1;
 8000cb0:	4b05      	ldr	r3, [pc, #20]	@ (8000cc8 <SystemClock_Config+0x70>)
 8000cb2:	689b      	ldr	r3, [r3, #8]
 8000cb4:	4a04      	ldr	r2, [pc, #16]	@ (8000cc8 <SystemClock_Config+0x70>)
 8000cb6:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8000cba:	6093      	str	r3, [r2, #8]
}
 8000cbc:	bf00      	nop
 8000cbe:	46bd      	mov	sp, r7
 8000cc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cc4:	4770      	bx	lr
 8000cc6:	bf00      	nop
 8000cc8:	40023800 	.word	0x40023800
 8000ccc:	00015408 	.word	0x00015408

08000cd0 <GPIO_Config>:

void GPIO_Config(void) {
 8000cd0:	b480      	push	{r7}
 8000cd2:	af00      	add	r7, sp, #0
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN | RCC_AHB1ENR_GPIOBEN | RCC_AHB1ENR_GPIOCEN;
 8000cd4:	4b26      	ldr	r3, [pc, #152]	@ (8000d70 <GPIO_Config+0xa0>)
 8000cd6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000cd8:	4a25      	ldr	r2, [pc, #148]	@ (8000d70 <GPIO_Config+0xa0>)
 8000cda:	f043 0307 	orr.w	r3, r3, #7
 8000cde:	6313      	str	r3, [r2, #48]	@ 0x30
    GPIOA->MODER |= (3 << (MQ2_CHANNEL * 2));
 8000ce0:	4b24      	ldr	r3, [pc, #144]	@ (8000d74 <GPIO_Config+0xa4>)
 8000ce2:	681b      	ldr	r3, [r3, #0]
 8000ce4:	4a23      	ldr	r2, [pc, #140]	@ (8000d74 <GPIO_Config+0xa4>)
 8000ce6:	f043 0303 	orr.w	r3, r3, #3
 8000cea:	6013      	str	r3, [r2, #0]
    GPIOA->MODER &= ~((3 << (RELAY_PIN * 2)) | (3 << (BUZZER_PIN * 2)) | (3 << (LED_BLUE_PIN * 2)));
 8000cec:	4b21      	ldr	r3, [pc, #132]	@ (8000d74 <GPIO_Config+0xa4>)
 8000cee:	681b      	ldr	r3, [r3, #0]
 8000cf0:	4a20      	ldr	r2, [pc, #128]	@ (8000d74 <GPIO_Config+0xa4>)
 8000cf2:	f423 437c 	bic.w	r3, r3, #64512	@ 0xfc00
 8000cf6:	6013      	str	r3, [r2, #0]
    GPIOA->MODER |= ((1 << (RELAY_PIN * 2)) | (1 << (BUZZER_PIN * 2)) | (1 << (LED_BLUE_PIN * 2)));
 8000cf8:	4b1e      	ldr	r3, [pc, #120]	@ (8000d74 <GPIO_Config+0xa4>)
 8000cfa:	681b      	ldr	r3, [r3, #0]
 8000cfc:	4a1d      	ldr	r2, [pc, #116]	@ (8000d74 <GPIO_Config+0xa4>)
 8000cfe:	f443 43a8 	orr.w	r3, r3, #21504	@ 0x5400
 8000d02:	6013      	str	r3, [r2, #0]
    GPIOA->ODR &= ~(1 << RELAY_PIN | 1 << BUZZER_PIN | 1 << LED_BLUE_PIN);
 8000d04:	4b1b      	ldr	r3, [pc, #108]	@ (8000d74 <GPIO_Config+0xa4>)
 8000d06:	695b      	ldr	r3, [r3, #20]
 8000d08:	4a1a      	ldr	r2, [pc, #104]	@ (8000d74 <GPIO_Config+0xa4>)
 8000d0a:	f023 03e0 	bic.w	r3, r3, #224	@ 0xe0
 8000d0e:	6153      	str	r3, [r2, #20]
    GPIOB->MODER &= ~((3 << (LED_YELLOW_PIN * 2)) | (3 << (LED_RED_PIN * 2)) | (3 << (LED_GREEN_PIN * 2)));
 8000d10:	4b19      	ldr	r3, [pc, #100]	@ (8000d78 <GPIO_Config+0xa8>)
 8000d12:	681b      	ldr	r3, [r3, #0]
 8000d14:	4a18      	ldr	r2, [pc, #96]	@ (8000d78 <GPIO_Config+0xa8>)
 8000d16:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 8000d1a:	f023 030f 	bic.w	r3, r3, #15
 8000d1e:	6013      	str	r3, [r2, #0]
    GPIOB->MODER |= ((1 << (LED_YELLOW_PIN * 2)) | (1 << (LED_RED_PIN * 2)) | (1 << (LED_GREEN_PIN * 2)));
 8000d20:	4b15      	ldr	r3, [pc, #84]	@ (8000d78 <GPIO_Config+0xa8>)
 8000d22:	681b      	ldr	r3, [r3, #0]
 8000d24:	4a14      	ldr	r2, [pc, #80]	@ (8000d78 <GPIO_Config+0xa8>)
 8000d26:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000d2a:	f043 0305 	orr.w	r3, r3, #5
 8000d2e:	6013      	str	r3, [r2, #0]
    GPIOB->ODR &= ~(1 << LED_YELLOW_PIN | 1 << LED_RED_PIN | 1 << LED_GREEN_PIN);
 8000d30:	4b11      	ldr	r3, [pc, #68]	@ (8000d78 <GPIO_Config+0xa8>)
 8000d32:	695b      	ldr	r3, [r3, #20]
 8000d34:	4a10      	ldr	r2, [pc, #64]	@ (8000d78 <GPIO_Config+0xa8>)
 8000d36:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8000d3a:	f023 0303 	bic.w	r3, r3, #3
 8000d3e:	6153      	str	r3, [r2, #20]
    GPIOC->MODER &= ~((3 << (SW1_PIN * 2)) | (3 << (SW2_PIN * 2)));
 8000d40:	4b0e      	ldr	r3, [pc, #56]	@ (8000d7c <GPIO_Config+0xac>)
 8000d42:	681b      	ldr	r3, [r3, #0]
 8000d44:	4a0d      	ldr	r2, [pc, #52]	@ (8000d7c <GPIO_Config+0xac>)
 8000d46:	f023 6370 	bic.w	r3, r3, #251658240	@ 0xf000000
 8000d4a:	6013      	str	r3, [r2, #0]
    GPIOC->PUPDR &= ~((3 << (SW1_PIN * 2)) | (3 << (SW2_PIN * 2)));
 8000d4c:	4b0b      	ldr	r3, [pc, #44]	@ (8000d7c <GPIO_Config+0xac>)
 8000d4e:	68db      	ldr	r3, [r3, #12]
 8000d50:	4a0a      	ldr	r2, [pc, #40]	@ (8000d7c <GPIO_Config+0xac>)
 8000d52:	f023 6370 	bic.w	r3, r3, #251658240	@ 0xf000000
 8000d56:	60d3      	str	r3, [r2, #12]
    GPIOC->PUPDR |= ((1 << (SW1_PIN * 2)) | (1 << (SW2_PIN * 2)));
 8000d58:	4b08      	ldr	r3, [pc, #32]	@ (8000d7c <GPIO_Config+0xac>)
 8000d5a:	68db      	ldr	r3, [r3, #12]
 8000d5c:	4a07      	ldr	r2, [pc, #28]	@ (8000d7c <GPIO_Config+0xac>)
 8000d5e:	f043 63a0 	orr.w	r3, r3, #83886080	@ 0x5000000
 8000d62:	60d3      	str	r3, [r2, #12]
}
 8000d64:	bf00      	nop
 8000d66:	46bd      	mov	sp, r7
 8000d68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d6c:	4770      	bx	lr
 8000d6e:	bf00      	nop
 8000d70:	40023800 	.word	0x40023800
 8000d74:	40020000 	.word	0x40020000
 8000d78:	40020400 	.word	0x40020400
 8000d7c:	40020800 	.word	0x40020800

08000d80 <I2C_Config>:

void I2C_Config(void) {
 8000d80:	b480      	push	{r7}
 8000d82:	af00      	add	r7, sp, #0
    RCC->APB1ENR |= RCC_APB1ENR_I2C1EN;
 8000d84:	4b20      	ldr	r3, [pc, #128]	@ (8000e08 <I2C_Config+0x88>)
 8000d86:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000d88:	4a1f      	ldr	r2, [pc, #124]	@ (8000e08 <I2C_Config+0x88>)
 8000d8a:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8000d8e:	6413      	str	r3, [r2, #64]	@ 0x40
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN;
 8000d90:	4b1d      	ldr	r3, [pc, #116]	@ (8000e08 <I2C_Config+0x88>)
 8000d92:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d94:	4a1c      	ldr	r2, [pc, #112]	@ (8000e08 <I2C_Config+0x88>)
 8000d96:	f043 0302 	orr.w	r3, r3, #2
 8000d9a:	6313      	str	r3, [r2, #48]	@ 0x30
    GPIOB->MODER &= ~((3 << (8 * 2)) | (3 << (9 * 2)));
 8000d9c:	4b1b      	ldr	r3, [pc, #108]	@ (8000e0c <I2C_Config+0x8c>)
 8000d9e:	681b      	ldr	r3, [r3, #0]
 8000da0:	4a1a      	ldr	r2, [pc, #104]	@ (8000e0c <I2C_Config+0x8c>)
 8000da2:	f423 2370 	bic.w	r3, r3, #983040	@ 0xf0000
 8000da6:	6013      	str	r3, [r2, #0]
    GPIOB->MODER |= ((2 << (8 * 2)) | (2 << (9 * 2)));
 8000da8:	4b18      	ldr	r3, [pc, #96]	@ (8000e0c <I2C_Config+0x8c>)
 8000daa:	681b      	ldr	r3, [r3, #0]
 8000dac:	4a17      	ldr	r2, [pc, #92]	@ (8000e0c <I2C_Config+0x8c>)
 8000dae:	f443 2320 	orr.w	r3, r3, #655360	@ 0xa0000
 8000db2:	6013      	str	r3, [r2, #0]
    GPIOB->OTYPER |= (1 << 8) | (1 << 9);
 8000db4:	4b15      	ldr	r3, [pc, #84]	@ (8000e0c <I2C_Config+0x8c>)
 8000db6:	685b      	ldr	r3, [r3, #4]
 8000db8:	4a14      	ldr	r2, [pc, #80]	@ (8000e0c <I2C_Config+0x8c>)
 8000dba:	f443 7340 	orr.w	r3, r3, #768	@ 0x300
 8000dbe:	6053      	str	r3, [r2, #4]
    GPIOB->PUPDR |= ((1 << (8 * 2)) | (1 << (9 * 2)));
 8000dc0:	4b12      	ldr	r3, [pc, #72]	@ (8000e0c <I2C_Config+0x8c>)
 8000dc2:	68db      	ldr	r3, [r3, #12]
 8000dc4:	4a11      	ldr	r2, [pc, #68]	@ (8000e0c <I2C_Config+0x8c>)
 8000dc6:	f443 23a0 	orr.w	r3, r3, #327680	@ 0x50000
 8000dca:	60d3      	str	r3, [r2, #12]
    GPIOB->AFR[1] |= ((4 << ((8 - 8) * 4)) | (4 << ((9 - 8) * 4)));
 8000dcc:	4b0f      	ldr	r3, [pc, #60]	@ (8000e0c <I2C_Config+0x8c>)
 8000dce:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000dd0:	4a0e      	ldr	r2, [pc, #56]	@ (8000e0c <I2C_Config+0x8c>)
 8000dd2:	f043 0344 	orr.w	r3, r3, #68	@ 0x44
 8000dd6:	6253      	str	r3, [r2, #36]	@ 0x24
    I2C1->CR1 = 0;
 8000dd8:	4b0d      	ldr	r3, [pc, #52]	@ (8000e10 <I2C_Config+0x90>)
 8000dda:	2200      	movs	r2, #0
 8000ddc:	601a      	str	r2, [r3, #0]
    I2C1->CR2 = 42;
 8000dde:	4b0c      	ldr	r3, [pc, #48]	@ (8000e10 <I2C_Config+0x90>)
 8000de0:	222a      	movs	r2, #42	@ 0x2a
 8000de2:	605a      	str	r2, [r3, #4]
    I2C1->CCR = 210;
 8000de4:	4b0a      	ldr	r3, [pc, #40]	@ (8000e10 <I2C_Config+0x90>)
 8000de6:	22d2      	movs	r2, #210	@ 0xd2
 8000de8:	61da      	str	r2, [r3, #28]
    I2C1->TRISE = 43;
 8000dea:	4b09      	ldr	r3, [pc, #36]	@ (8000e10 <I2C_Config+0x90>)
 8000dec:	222b      	movs	r2, #43	@ 0x2b
 8000dee:	621a      	str	r2, [r3, #32]
    I2C1->CR1 |= I2C_CR1_PE;
 8000df0:	4b07      	ldr	r3, [pc, #28]	@ (8000e10 <I2C_Config+0x90>)
 8000df2:	681b      	ldr	r3, [r3, #0]
 8000df4:	4a06      	ldr	r2, [pc, #24]	@ (8000e10 <I2C_Config+0x90>)
 8000df6:	f043 0301 	orr.w	r3, r3, #1
 8000dfa:	6013      	str	r3, [r2, #0]
}
 8000dfc:	bf00      	nop
 8000dfe:	46bd      	mov	sp, r7
 8000e00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e04:	4770      	bx	lr
 8000e06:	bf00      	nop
 8000e08:	40023800 	.word	0x40023800
 8000e0c:	40020400 	.word	0x40020400
 8000e10:	40005400 	.word	0x40005400

08000e14 <I2C_WriteByte>:

uint8_t I2C_WriteByte(uint8_t addr, uint8_t data, const char *context) {
 8000e14:	b480      	push	{r7}
 8000e16:	b085      	sub	sp, #20
 8000e18:	af00      	add	r7, sp, #0
 8000e1a:	4603      	mov	r3, r0
 8000e1c:	603a      	str	r2, [r7, #0]
 8000e1e:	71fb      	strb	r3, [r7, #7]
 8000e20:	460b      	mov	r3, r1
 8000e22:	71bb      	strb	r3, [r7, #6]
    uint32_t timeout = 100000;
 8000e24:	4b39      	ldr	r3, [pc, #228]	@ (8000f0c <I2C_WriteByte+0xf8>)
 8000e26:	60fb      	str	r3, [r7, #12]
    while (I2C1->SR2 & I2C_SR2_BUSY && timeout--);
 8000e28:	bf00      	nop
 8000e2a:	4b39      	ldr	r3, [pc, #228]	@ (8000f10 <I2C_WriteByte+0xfc>)
 8000e2c:	699b      	ldr	r3, [r3, #24]
 8000e2e:	f003 0302 	and.w	r3, r3, #2
 8000e32:	2b00      	cmp	r3, #0
 8000e34:	d004      	beq.n	8000e40 <I2C_WriteByte+0x2c>
 8000e36:	68fb      	ldr	r3, [r7, #12]
 8000e38:	1e5a      	subs	r2, r3, #1
 8000e3a:	60fa      	str	r2, [r7, #12]
 8000e3c:	2b00      	cmp	r3, #0
 8000e3e:	d1f4      	bne.n	8000e2a <I2C_WriteByte+0x16>
    if (!timeout) return 1;
 8000e40:	68fb      	ldr	r3, [r7, #12]
 8000e42:	2b00      	cmp	r3, #0
 8000e44:	d101      	bne.n	8000e4a <I2C_WriteByte+0x36>
 8000e46:	2301      	movs	r3, #1
 8000e48:	e059      	b.n	8000efe <I2C_WriteByte+0xea>
    I2C1->CR1 |= I2C_CR1_START;
 8000e4a:	4b31      	ldr	r3, [pc, #196]	@ (8000f10 <I2C_WriteByte+0xfc>)
 8000e4c:	681b      	ldr	r3, [r3, #0]
 8000e4e:	4a30      	ldr	r2, [pc, #192]	@ (8000f10 <I2C_WriteByte+0xfc>)
 8000e50:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000e54:	6013      	str	r3, [r2, #0]
    while (!(I2C1->SR1 & I2C_SR1_SB) && timeout--);
 8000e56:	bf00      	nop
 8000e58:	4b2d      	ldr	r3, [pc, #180]	@ (8000f10 <I2C_WriteByte+0xfc>)
 8000e5a:	695b      	ldr	r3, [r3, #20]
 8000e5c:	f003 0301 	and.w	r3, r3, #1
 8000e60:	2b00      	cmp	r3, #0
 8000e62:	d104      	bne.n	8000e6e <I2C_WriteByte+0x5a>
 8000e64:	68fb      	ldr	r3, [r7, #12]
 8000e66:	1e5a      	subs	r2, r3, #1
 8000e68:	60fa      	str	r2, [r7, #12]
 8000e6a:	2b00      	cmp	r3, #0
 8000e6c:	d1f4      	bne.n	8000e58 <I2C_WriteByte+0x44>
    if (!timeout) return 2;
 8000e6e:	68fb      	ldr	r3, [r7, #12]
 8000e70:	2b00      	cmp	r3, #0
 8000e72:	d101      	bne.n	8000e78 <I2C_WriteByte+0x64>
 8000e74:	2302      	movs	r3, #2
 8000e76:	e042      	b.n	8000efe <I2C_WriteByte+0xea>
    I2C1->DR = (addr << 1);
 8000e78:	79fb      	ldrb	r3, [r7, #7]
 8000e7a:	4a25      	ldr	r2, [pc, #148]	@ (8000f10 <I2C_WriteByte+0xfc>)
 8000e7c:	005b      	lsls	r3, r3, #1
 8000e7e:	6113      	str	r3, [r2, #16]
    while (!(I2C1->SR1 & I2C_SR1_ADDR) && timeout--);
 8000e80:	bf00      	nop
 8000e82:	4b23      	ldr	r3, [pc, #140]	@ (8000f10 <I2C_WriteByte+0xfc>)
 8000e84:	695b      	ldr	r3, [r3, #20]
 8000e86:	f003 0302 	and.w	r3, r3, #2
 8000e8a:	2b00      	cmp	r3, #0
 8000e8c:	d104      	bne.n	8000e98 <I2C_WriteByte+0x84>
 8000e8e:	68fb      	ldr	r3, [r7, #12]
 8000e90:	1e5a      	subs	r2, r3, #1
 8000e92:	60fa      	str	r2, [r7, #12]
 8000e94:	2b00      	cmp	r3, #0
 8000e96:	d1f4      	bne.n	8000e82 <I2C_WriteByte+0x6e>
    if (!timeout) return 3;
 8000e98:	68fb      	ldr	r3, [r7, #12]
 8000e9a:	2b00      	cmp	r3, #0
 8000e9c:	d101      	bne.n	8000ea2 <I2C_WriteByte+0x8e>
 8000e9e:	2303      	movs	r3, #3
 8000ea0:	e02d      	b.n	8000efe <I2C_WriteByte+0xea>
    (void)I2C1->SR2;
 8000ea2:	4b1b      	ldr	r3, [pc, #108]	@ (8000f10 <I2C_WriteByte+0xfc>)
 8000ea4:	699b      	ldr	r3, [r3, #24]
    while (!(I2C1->SR1 & I2C_SR1_TXE) && timeout--);
 8000ea6:	bf00      	nop
 8000ea8:	4b19      	ldr	r3, [pc, #100]	@ (8000f10 <I2C_WriteByte+0xfc>)
 8000eaa:	695b      	ldr	r3, [r3, #20]
 8000eac:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000eb0:	2b00      	cmp	r3, #0
 8000eb2:	d104      	bne.n	8000ebe <I2C_WriteByte+0xaa>
 8000eb4:	68fb      	ldr	r3, [r7, #12]
 8000eb6:	1e5a      	subs	r2, r3, #1
 8000eb8:	60fa      	str	r2, [r7, #12]
 8000eba:	2b00      	cmp	r3, #0
 8000ebc:	d1f4      	bne.n	8000ea8 <I2C_WriteByte+0x94>
    if (!timeout) return 4;
 8000ebe:	68fb      	ldr	r3, [r7, #12]
 8000ec0:	2b00      	cmp	r3, #0
 8000ec2:	d101      	bne.n	8000ec8 <I2C_WriteByte+0xb4>
 8000ec4:	2304      	movs	r3, #4
 8000ec6:	e01a      	b.n	8000efe <I2C_WriteByte+0xea>
    I2C1->DR = data;
 8000ec8:	4a11      	ldr	r2, [pc, #68]	@ (8000f10 <I2C_WriteByte+0xfc>)
 8000eca:	79bb      	ldrb	r3, [r7, #6]
 8000ecc:	6113      	str	r3, [r2, #16]
    while (!(I2C1->SR1 & I2C_SR1_BTF) && timeout--);
 8000ece:	bf00      	nop
 8000ed0:	4b0f      	ldr	r3, [pc, #60]	@ (8000f10 <I2C_WriteByte+0xfc>)
 8000ed2:	695b      	ldr	r3, [r3, #20]
 8000ed4:	f003 0304 	and.w	r3, r3, #4
 8000ed8:	2b00      	cmp	r3, #0
 8000eda:	d104      	bne.n	8000ee6 <I2C_WriteByte+0xd2>
 8000edc:	68fb      	ldr	r3, [r7, #12]
 8000ede:	1e5a      	subs	r2, r3, #1
 8000ee0:	60fa      	str	r2, [r7, #12]
 8000ee2:	2b00      	cmp	r3, #0
 8000ee4:	d1f4      	bne.n	8000ed0 <I2C_WriteByte+0xbc>
    if (!timeout) return 5;
 8000ee6:	68fb      	ldr	r3, [r7, #12]
 8000ee8:	2b00      	cmp	r3, #0
 8000eea:	d101      	bne.n	8000ef0 <I2C_WriteByte+0xdc>
 8000eec:	2305      	movs	r3, #5
 8000eee:	e006      	b.n	8000efe <I2C_WriteByte+0xea>
    I2C1->CR1 |= I2C_CR1_STOP;
 8000ef0:	4b07      	ldr	r3, [pc, #28]	@ (8000f10 <I2C_WriteByte+0xfc>)
 8000ef2:	681b      	ldr	r3, [r3, #0]
 8000ef4:	4a06      	ldr	r2, [pc, #24]	@ (8000f10 <I2C_WriteByte+0xfc>)
 8000ef6:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000efa:	6013      	str	r3, [r2, #0]
    return 0;
 8000efc:	2300      	movs	r3, #0
}
 8000efe:	4618      	mov	r0, r3
 8000f00:	3714      	adds	r7, #20
 8000f02:	46bd      	mov	sp, r7
 8000f04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f08:	4770      	bx	lr
 8000f0a:	bf00      	nop
 8000f0c:	000186a0 	.word	0x000186a0
 8000f10:	40005400 	.word	0x40005400

08000f14 <LCD_SendCommand>:

void LCD_SendCommand(uint8_t cmd) {
 8000f14:	b580      	push	{r7, lr}
 8000f16:	b086      	sub	sp, #24
 8000f18:	af00      	add	r7, sp, #0
 8000f1a:	4603      	mov	r3, r0
 8000f1c:	71fb      	strb	r3, [r7, #7]
    uint8_t data_u = (cmd & 0xF0);
 8000f1e:	79fb      	ldrb	r3, [r7, #7]
 8000f20:	f023 030f 	bic.w	r3, r3, #15
 8000f24:	74fb      	strb	r3, [r7, #19]
    uint8_t data_l = ((cmd << 4) & 0xF0);
 8000f26:	79fb      	ldrb	r3, [r7, #7]
 8000f28:	011b      	lsls	r3, r3, #4
 8000f2a:	74bb      	strb	r3, [r7, #18]
    uint8_t data_t[4] = { data_u | 0x0C, data_u | 0x08, data_l | 0x0C, data_l | 0x08 };
 8000f2c:	7cfb      	ldrb	r3, [r7, #19]
 8000f2e:	f043 030c 	orr.w	r3, r3, #12
 8000f32:	b2db      	uxtb	r3, r3
 8000f34:	733b      	strb	r3, [r7, #12]
 8000f36:	7cfb      	ldrb	r3, [r7, #19]
 8000f38:	f043 0308 	orr.w	r3, r3, #8
 8000f3c:	b2db      	uxtb	r3, r3
 8000f3e:	737b      	strb	r3, [r7, #13]
 8000f40:	7cbb      	ldrb	r3, [r7, #18]
 8000f42:	f043 030c 	orr.w	r3, r3, #12
 8000f46:	b2db      	uxtb	r3, r3
 8000f48:	73bb      	strb	r3, [r7, #14]
 8000f4a:	7cbb      	ldrb	r3, [r7, #18]
 8000f4c:	f043 0308 	orr.w	r3, r3, #8
 8000f50:	b2db      	uxtb	r3, r3
 8000f52:	73fb      	strb	r3, [r7, #15]
    for (int i = 0; i < 4; i++) {
 8000f54:	2300      	movs	r3, #0
 8000f56:	617b      	str	r3, [r7, #20]
 8000f58:	e00f      	b.n	8000f7a <LCD_SendCommand+0x66>
        I2C_WriteByte(LCD_I2C_ADDR, data_t[i], "CMD");
 8000f5a:	f107 020c 	add.w	r2, r7, #12
 8000f5e:	697b      	ldr	r3, [r7, #20]
 8000f60:	4413      	add	r3, r2
 8000f62:	781b      	ldrb	r3, [r3, #0]
 8000f64:	4a09      	ldr	r2, [pc, #36]	@ (8000f8c <LCD_SendCommand+0x78>)
 8000f66:	4619      	mov	r1, r3
 8000f68:	2027      	movs	r0, #39	@ 0x27
 8000f6a:	f7ff ff53 	bl	8000e14 <I2C_WriteByte>
        delay_us(50);
 8000f6e:	2032      	movs	r0, #50	@ 0x32
 8000f70:	f7ff fe5a 	bl	8000c28 <delay_us>
    for (int i = 0; i < 4; i++) {
 8000f74:	697b      	ldr	r3, [r7, #20]
 8000f76:	3301      	adds	r3, #1
 8000f78:	617b      	str	r3, [r7, #20]
 8000f7a:	697b      	ldr	r3, [r7, #20]
 8000f7c:	2b03      	cmp	r3, #3
 8000f7e:	ddec      	ble.n	8000f5a <LCD_SendCommand+0x46>
    }
}
 8000f80:	bf00      	nop
 8000f82:	bf00      	nop
 8000f84:	3718      	adds	r7, #24
 8000f86:	46bd      	mov	sp, r7
 8000f88:	bd80      	pop	{r7, pc}
 8000f8a:	bf00      	nop
 8000f8c:	08004a40 	.word	0x08004a40

08000f90 <LCD_SendData>:

void LCD_SendData(uint8_t data) {
 8000f90:	b580      	push	{r7, lr}
 8000f92:	b086      	sub	sp, #24
 8000f94:	af00      	add	r7, sp, #0
 8000f96:	4603      	mov	r3, r0
 8000f98:	71fb      	strb	r3, [r7, #7]
    uint8_t data_u = (data & 0xF0);
 8000f9a:	79fb      	ldrb	r3, [r7, #7]
 8000f9c:	f023 030f 	bic.w	r3, r3, #15
 8000fa0:	74fb      	strb	r3, [r7, #19]
    uint8_t data_l = ((data << 4) & 0xF0);
 8000fa2:	79fb      	ldrb	r3, [r7, #7]
 8000fa4:	011b      	lsls	r3, r3, #4
 8000fa6:	74bb      	strb	r3, [r7, #18]
    uint8_t data_t[4] = { data_u | 0x0D, data_u | 0x09, data_l | 0x0D, data_l | 0x09 };
 8000fa8:	7cfb      	ldrb	r3, [r7, #19]
 8000faa:	f043 030d 	orr.w	r3, r3, #13
 8000fae:	b2db      	uxtb	r3, r3
 8000fb0:	733b      	strb	r3, [r7, #12]
 8000fb2:	7cfb      	ldrb	r3, [r7, #19]
 8000fb4:	f043 0309 	orr.w	r3, r3, #9
 8000fb8:	b2db      	uxtb	r3, r3
 8000fba:	737b      	strb	r3, [r7, #13]
 8000fbc:	7cbb      	ldrb	r3, [r7, #18]
 8000fbe:	f043 030d 	orr.w	r3, r3, #13
 8000fc2:	b2db      	uxtb	r3, r3
 8000fc4:	73bb      	strb	r3, [r7, #14]
 8000fc6:	7cbb      	ldrb	r3, [r7, #18]
 8000fc8:	f043 0309 	orr.w	r3, r3, #9
 8000fcc:	b2db      	uxtb	r3, r3
 8000fce:	73fb      	strb	r3, [r7, #15]
    for (int i = 0; i < 4; i++) {
 8000fd0:	2300      	movs	r3, #0
 8000fd2:	617b      	str	r3, [r7, #20]
 8000fd4:	e00f      	b.n	8000ff6 <LCD_SendData+0x66>
        I2C_WriteByte(LCD_I2C_ADDR, data_t[i], "DATA");
 8000fd6:	f107 020c 	add.w	r2, r7, #12
 8000fda:	697b      	ldr	r3, [r7, #20]
 8000fdc:	4413      	add	r3, r2
 8000fde:	781b      	ldrb	r3, [r3, #0]
 8000fe0:	4a09      	ldr	r2, [pc, #36]	@ (8001008 <LCD_SendData+0x78>)
 8000fe2:	4619      	mov	r1, r3
 8000fe4:	2027      	movs	r0, #39	@ 0x27
 8000fe6:	f7ff ff15 	bl	8000e14 <I2C_WriteByte>
        delay_us(50);
 8000fea:	2032      	movs	r0, #50	@ 0x32
 8000fec:	f7ff fe1c 	bl	8000c28 <delay_us>
    for (int i = 0; i < 4; i++) {
 8000ff0:	697b      	ldr	r3, [r7, #20]
 8000ff2:	3301      	adds	r3, #1
 8000ff4:	617b      	str	r3, [r7, #20]
 8000ff6:	697b      	ldr	r3, [r7, #20]
 8000ff8:	2b03      	cmp	r3, #3
 8000ffa:	ddec      	ble.n	8000fd6 <LCD_SendData+0x46>
    }
}
 8000ffc:	bf00      	nop
 8000ffe:	bf00      	nop
 8001000:	3718      	adds	r7, #24
 8001002:	46bd      	mov	sp, r7
 8001004:	bd80      	pop	{r7, pc}
 8001006:	bf00      	nop
 8001008:	08004a44 	.word	0x08004a44

0800100c <LCD_Init>:

uint8_t LCD_Init(void) {
 800100c:	b580      	push	{r7, lr}
 800100e:	b082      	sub	sp, #8
 8001010:	af00      	add	r7, sp, #0
    uint8_t retry = 3;
 8001012:	2303      	movs	r3, #3
 8001014:	71fb      	strb	r3, [r7, #7]
    while (retry--) {
 8001016:	e033      	b.n	8001080 <LCD_Init+0x74>
        delay_ms(50);
 8001018:	2032      	movs	r0, #50	@ 0x32
 800101a:	f7ff fdeb 	bl	8000bf4 <delay_ms>
        if (I2C_WriteByte(LCD_I2C_ADDR, 0x00, "INIT") == 0) {
 800101e:	4a1d      	ldr	r2, [pc, #116]	@ (8001094 <LCD_Init+0x88>)
 8001020:	2100      	movs	r1, #0
 8001022:	2027      	movs	r0, #39	@ 0x27
 8001024:	f7ff fef6 	bl	8000e14 <I2C_WriteByte>
 8001028:	4603      	mov	r3, r0
 800102a:	2b00      	cmp	r3, #0
 800102c:	d125      	bne.n	800107a <LCD_Init+0x6e>
            LCD_SendCommand(0x33);
 800102e:	2033      	movs	r0, #51	@ 0x33
 8001030:	f7ff ff70 	bl	8000f14 <LCD_SendCommand>
            delay_ms(5);
 8001034:	2005      	movs	r0, #5
 8001036:	f7ff fddd 	bl	8000bf4 <delay_ms>
            LCD_SendCommand(0x32);
 800103a:	2032      	movs	r0, #50	@ 0x32
 800103c:	f7ff ff6a 	bl	8000f14 <LCD_SendCommand>
            delay_us(50);
 8001040:	2032      	movs	r0, #50	@ 0x32
 8001042:	f7ff fdf1 	bl	8000c28 <delay_us>
            LCD_SendCommand(0x28);
 8001046:	2028      	movs	r0, #40	@ 0x28
 8001048:	f7ff ff64 	bl	8000f14 <LCD_SendCommand>
            delay_us(50);
 800104c:	2032      	movs	r0, #50	@ 0x32
 800104e:	f7ff fdeb 	bl	8000c28 <delay_us>
            LCD_SendCommand(0x0C);
 8001052:	200c      	movs	r0, #12
 8001054:	f7ff ff5e 	bl	8000f14 <LCD_SendCommand>
            delay_us(50);
 8001058:	2032      	movs	r0, #50	@ 0x32
 800105a:	f7ff fde5 	bl	8000c28 <delay_us>
            LCD_SendCommand(0x06);
 800105e:	2006      	movs	r0, #6
 8001060:	f7ff ff58 	bl	8000f14 <LCD_SendCommand>
            delay_us(50);
 8001064:	2032      	movs	r0, #50	@ 0x32
 8001066:	f7ff fddf 	bl	8000c28 <delay_us>
            LCD_SendCommand(0x01);
 800106a:	2001      	movs	r0, #1
 800106c:	f7ff ff52 	bl	8000f14 <LCD_SendCommand>
            delay_ms(2);
 8001070:	2002      	movs	r0, #2
 8001072:	f7ff fdbf 	bl	8000bf4 <delay_ms>
            return 0;
 8001076:	2300      	movs	r3, #0
 8001078:	e008      	b.n	800108c <LCD_Init+0x80>
        }
        delay_ms(50);
 800107a:	2032      	movs	r0, #50	@ 0x32
 800107c:	f7ff fdba 	bl	8000bf4 <delay_ms>
    while (retry--) {
 8001080:	79fb      	ldrb	r3, [r7, #7]
 8001082:	1e5a      	subs	r2, r3, #1
 8001084:	71fa      	strb	r2, [r7, #7]
 8001086:	2b00      	cmp	r3, #0
 8001088:	d1c6      	bne.n	8001018 <LCD_Init+0xc>
    }
    return 1;
 800108a:	2301      	movs	r3, #1
}
 800108c:	4618      	mov	r0, r3
 800108e:	3708      	adds	r7, #8
 8001090:	46bd      	mov	sp, r7
 8001092:	bd80      	pop	{r7, pc}
 8001094:	08004a4c 	.word	0x08004a4c

08001098 <LCD_SendString>:

void LCD_SendString(const char *str) {
 8001098:	b580      	push	{r7, lr}
 800109a:	b082      	sub	sp, #8
 800109c:	af00      	add	r7, sp, #0
 800109e:	6078      	str	r0, [r7, #4]
    while (*str && *str != '\0') LCD_SendData(*str++);
 80010a0:	e006      	b.n	80010b0 <LCD_SendString+0x18>
 80010a2:	687b      	ldr	r3, [r7, #4]
 80010a4:	1c5a      	adds	r2, r3, #1
 80010a6:	607a      	str	r2, [r7, #4]
 80010a8:	781b      	ldrb	r3, [r3, #0]
 80010aa:	4618      	mov	r0, r3
 80010ac:	f7ff ff70 	bl	8000f90 <LCD_SendData>
 80010b0:	687b      	ldr	r3, [r7, #4]
 80010b2:	781b      	ldrb	r3, [r3, #0]
 80010b4:	2b00      	cmp	r3, #0
 80010b6:	d003      	beq.n	80010c0 <LCD_SendString+0x28>
 80010b8:	687b      	ldr	r3, [r7, #4]
 80010ba:	781b      	ldrb	r3, [r3, #0]
 80010bc:	2b00      	cmp	r3, #0
 80010be:	d1f0      	bne.n	80010a2 <LCD_SendString+0xa>
}
 80010c0:	bf00      	nop
 80010c2:	3708      	adds	r7, #8
 80010c4:	46bd      	mov	sp, r7
 80010c6:	bd80      	pop	{r7, pc}

080010c8 <ADC_Config>:

void ADC_Config(void) {
 80010c8:	b580      	push	{r7, lr}
 80010ca:	af00      	add	r7, sp, #0
    RCC->APB2ENR |= RCC_APB2ENR_ADC1EN;
 80010cc:	4b0e      	ldr	r3, [pc, #56]	@ (8001108 <ADC_Config+0x40>)
 80010ce:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80010d0:	4a0d      	ldr	r2, [pc, #52]	@ (8001108 <ADC_Config+0x40>)
 80010d2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80010d6:	6453      	str	r3, [r2, #68]	@ 0x44
    ADC1->CR2 = 0;
 80010d8:	4b0c      	ldr	r3, [pc, #48]	@ (800110c <ADC_Config+0x44>)
 80010da:	2200      	movs	r2, #0
 80010dc:	609a      	str	r2, [r3, #8]
    ADC1->SQR3 = MQ2_CHANNEL;
 80010de:	4b0b      	ldr	r3, [pc, #44]	@ (800110c <ADC_Config+0x44>)
 80010e0:	2200      	movs	r2, #0
 80010e2:	635a      	str	r2, [r3, #52]	@ 0x34
    ADC1->SMPR2 |= (7 << (MQ2_CHANNEL * 3));
 80010e4:	4b09      	ldr	r3, [pc, #36]	@ (800110c <ADC_Config+0x44>)
 80010e6:	691b      	ldr	r3, [r3, #16]
 80010e8:	4a08      	ldr	r2, [pc, #32]	@ (800110c <ADC_Config+0x44>)
 80010ea:	f043 0307 	orr.w	r3, r3, #7
 80010ee:	6113      	str	r3, [r2, #16]
    ADC1->CR2 |= ADC_CR2_ADON;
 80010f0:	4b06      	ldr	r3, [pc, #24]	@ (800110c <ADC_Config+0x44>)
 80010f2:	689b      	ldr	r3, [r3, #8]
 80010f4:	4a05      	ldr	r2, [pc, #20]	@ (800110c <ADC_Config+0x44>)
 80010f6:	f043 0301 	orr.w	r3, r3, #1
 80010fa:	6093      	str	r3, [r2, #8]
    delay_us(10);
 80010fc:	200a      	movs	r0, #10
 80010fe:	f7ff fd93 	bl	8000c28 <delay_us>
}
 8001102:	bf00      	nop
 8001104:	bd80      	pop	{r7, pc}
 8001106:	bf00      	nop
 8001108:	40023800 	.word	0x40023800
 800110c:	40012000 	.word	0x40012000

08001110 <ADC_Read>:

uint16_t ADC_Read(void) {
 8001110:	b480      	push	{r7}
 8001112:	af00      	add	r7, sp, #0
    ADC1->CR2 |= ADC_CR2_SWSTART;
 8001114:	4b0a      	ldr	r3, [pc, #40]	@ (8001140 <ADC_Read+0x30>)
 8001116:	689b      	ldr	r3, [r3, #8]
 8001118:	4a09      	ldr	r2, [pc, #36]	@ (8001140 <ADC_Read+0x30>)
 800111a:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 800111e:	6093      	str	r3, [r2, #8]
    while (!(ADC1->SR & ADC_SR_EOC));
 8001120:	bf00      	nop
 8001122:	4b07      	ldr	r3, [pc, #28]	@ (8001140 <ADC_Read+0x30>)
 8001124:	681b      	ldr	r3, [r3, #0]
 8001126:	f003 0302 	and.w	r3, r3, #2
 800112a:	2b00      	cmp	r3, #0
 800112c:	d0f9      	beq.n	8001122 <ADC_Read+0x12>
    return ADC1->DR;
 800112e:	4b04      	ldr	r3, [pc, #16]	@ (8001140 <ADC_Read+0x30>)
 8001130:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001132:	b29b      	uxth	r3, r3
}
 8001134:	4618      	mov	r0, r3
 8001136:	46bd      	mov	sp, r7
 8001138:	f85d 7b04 	ldr.w	r7, [sp], #4
 800113c:	4770      	bx	lr
 800113e:	bf00      	nop
 8001140:	40012000 	.word	0x40012000

08001144 <UART_Config>:

void UART_Config(void) {
 8001144:	b480      	push	{r7}
 8001146:	af00      	add	r7, sp, #0
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
 8001148:	4b20      	ldr	r3, [pc, #128]	@ (80011cc <UART_Config+0x88>)
 800114a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800114c:	4a1f      	ldr	r2, [pc, #124]	@ (80011cc <UART_Config+0x88>)
 800114e:	f043 0301 	orr.w	r3, r3, #1
 8001152:	6313      	str	r3, [r2, #48]	@ 0x30
    RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 8001154:	4b1d      	ldr	r3, [pc, #116]	@ (80011cc <UART_Config+0x88>)
 8001156:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001158:	4a1c      	ldr	r2, [pc, #112]	@ (80011cc <UART_Config+0x88>)
 800115a:	f043 0310 	orr.w	r3, r3, #16
 800115e:	6453      	str	r3, [r2, #68]	@ 0x44
    // Cấu hình PA9 (TX) và PA10 (RX)
    GPIOA->MODER &= ~((3U << (UART1_TX_PIN * 2)) | (3U << (UART1_RX_PIN * 2)));
 8001160:	4b1b      	ldr	r3, [pc, #108]	@ (80011d0 <UART_Config+0x8c>)
 8001162:	681b      	ldr	r3, [r3, #0]
 8001164:	4a1a      	ldr	r2, [pc, #104]	@ (80011d0 <UART_Config+0x8c>)
 8001166:	f423 1370 	bic.w	r3, r3, #3932160	@ 0x3c0000
 800116a:	6013      	str	r3, [r2, #0]
    GPIOA->MODER |= ((2U << (UART1_TX_PIN * 2)) | (2U << (UART1_RX_PIN * 2)));
 800116c:	4b18      	ldr	r3, [pc, #96]	@ (80011d0 <UART_Config+0x8c>)
 800116e:	681b      	ldr	r3, [r3, #0]
 8001170:	4a17      	ldr	r2, [pc, #92]	@ (80011d0 <UART_Config+0x8c>)
 8001172:	f443 1320 	orr.w	r3, r3, #2621440	@ 0x280000
 8001176:	6013      	str	r3, [r2, #0]
    GPIOA->OTYPER &= ~((1U << UART1_TX_PIN) | (1U << UART1_RX_PIN));
 8001178:	4b15      	ldr	r3, [pc, #84]	@ (80011d0 <UART_Config+0x8c>)
 800117a:	685b      	ldr	r3, [r3, #4]
 800117c:	4a14      	ldr	r2, [pc, #80]	@ (80011d0 <UART_Config+0x8c>)
 800117e:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8001182:	6053      	str	r3, [r2, #4]
    GPIOA->OSPEEDR |= ((3U << (UART1_TX_PIN * 2)) | (3U << (UART1_RX_PIN * 2)));
 8001184:	4b12      	ldr	r3, [pc, #72]	@ (80011d0 <UART_Config+0x8c>)
 8001186:	689b      	ldr	r3, [r3, #8]
 8001188:	4a11      	ldr	r2, [pc, #68]	@ (80011d0 <UART_Config+0x8c>)
 800118a:	f443 1370 	orr.w	r3, r3, #3932160	@ 0x3c0000
 800118e:	6093      	str	r3, [r2, #8]
    GPIOA->AFR[1] |= ((7U << ((UART1_TX_PIN - 8) * 4)) | (7U << ((UART1_RX_PIN - 8) * 4)));
 8001190:	4b0f      	ldr	r3, [pc, #60]	@ (80011d0 <UART_Config+0x8c>)
 8001192:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001194:	4a0e      	ldr	r2, [pc, #56]	@ (80011d0 <UART_Config+0x8c>)
 8001196:	f443 63ee 	orr.w	r3, r3, #1904	@ 0x770
 800119a:	6253      	str	r3, [r2, #36]	@ 0x24
    // Cấu hình USART1
    USART1->CR1 = 0;
 800119c:	4b0d      	ldr	r3, [pc, #52]	@ (80011d4 <UART_Config+0x90>)
 800119e:	2200      	movs	r2, #0
 80011a0:	60da      	str	r2, [r3, #12]
    USART1->BRR = SystemCoreClock / UART1_BAUDRATE; // SystemCoreClock = 84MHz
 80011a2:	4b0d      	ldr	r3, [pc, #52]	@ (80011d8 <UART_Config+0x94>)
 80011a4:	681b      	ldr	r3, [r3, #0]
 80011a6:	4a0b      	ldr	r2, [pc, #44]	@ (80011d4 <UART_Config+0x90>)
 80011a8:	490c      	ldr	r1, [pc, #48]	@ (80011dc <UART_Config+0x98>)
 80011aa:	fba1 1303 	umull	r1, r3, r1, r3
 80011ae:	0a9b      	lsrs	r3, r3, #10
 80011b0:	6093      	str	r3, [r2, #8]
    USART1->CR1 |= USART_CR1_TE | USART_CR1_RE | USART_CR1_UE;
 80011b2:	4b08      	ldr	r3, [pc, #32]	@ (80011d4 <UART_Config+0x90>)
 80011b4:	68db      	ldr	r3, [r3, #12]
 80011b6:	4a07      	ldr	r2, [pc, #28]	@ (80011d4 <UART_Config+0x90>)
 80011b8:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80011bc:	f043 030c 	orr.w	r3, r3, #12
 80011c0:	60d3      	str	r3, [r2, #12]
}
 80011c2:	bf00      	nop
 80011c4:	46bd      	mov	sp, r7
 80011c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011ca:	4770      	bx	lr
 80011cc:	40023800 	.word	0x40023800
 80011d0:	40020000 	.word	0x40020000
 80011d4:	40011000 	.word	0x40011000
 80011d8:	20000004 	.word	0x20000004
 80011dc:	1b4e81b5 	.word	0x1b4e81b5

080011e0 <UART_Transmit>:

void UART_Transmit(const char *data) {
 80011e0:	b480      	push	{r7}
 80011e2:	b083      	sub	sp, #12
 80011e4:	af00      	add	r7, sp, #0
 80011e6:	6078      	str	r0, [r7, #4]
    while (*data && *data != '\0') {
 80011e8:	e00c      	b.n	8001204 <UART_Transmit+0x24>
        while (!(USART1->SR & USART_SR_TXE));
 80011ea:	bf00      	nop
 80011ec:	4b10      	ldr	r3, [pc, #64]	@ (8001230 <UART_Transmit+0x50>)
 80011ee:	681b      	ldr	r3, [r3, #0]
 80011f0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80011f4:	2b00      	cmp	r3, #0
 80011f6:	d0f9      	beq.n	80011ec <UART_Transmit+0xc>
        USART1->DR = *data++;
 80011f8:	687b      	ldr	r3, [r7, #4]
 80011fa:	1c5a      	adds	r2, r3, #1
 80011fc:	607a      	str	r2, [r7, #4]
 80011fe:	781a      	ldrb	r2, [r3, #0]
 8001200:	4b0b      	ldr	r3, [pc, #44]	@ (8001230 <UART_Transmit+0x50>)
 8001202:	605a      	str	r2, [r3, #4]
    while (*data && *data != '\0') {
 8001204:	687b      	ldr	r3, [r7, #4]
 8001206:	781b      	ldrb	r3, [r3, #0]
 8001208:	2b00      	cmp	r3, #0
 800120a:	d003      	beq.n	8001214 <UART_Transmit+0x34>
 800120c:	687b      	ldr	r3, [r7, #4]
 800120e:	781b      	ldrb	r3, [r3, #0]
 8001210:	2b00      	cmp	r3, #0
 8001212:	d1ea      	bne.n	80011ea <UART_Transmit+0xa>
    }
    while (!(USART1->SR & USART_SR_TC)); // Đợi truyền xong
 8001214:	bf00      	nop
 8001216:	4b06      	ldr	r3, [pc, #24]	@ (8001230 <UART_Transmit+0x50>)
 8001218:	681b      	ldr	r3, [r3, #0]
 800121a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800121e:	2b00      	cmp	r3, #0
 8001220:	d0f9      	beq.n	8001216 <UART_Transmit+0x36>
}
 8001222:	bf00      	nop
 8001224:	bf00      	nop
 8001226:	370c      	adds	r7, #12
 8001228:	46bd      	mov	sp, r7
 800122a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800122e:	4770      	bx	lr
 8001230:	40011000 	.word	0x40011000

08001234 <LED_Set>:

void LED_Set(uint8_t r, uint8_t y, uint8_t b, uint8_t g) {
 8001234:	b490      	push	{r4, r7}
 8001236:	b082      	sub	sp, #8
 8001238:	af00      	add	r7, sp, #0
 800123a:	4604      	mov	r4, r0
 800123c:	4608      	mov	r0, r1
 800123e:	4611      	mov	r1, r2
 8001240:	461a      	mov	r2, r3
 8001242:	4623      	mov	r3, r4
 8001244:	71fb      	strb	r3, [r7, #7]
 8001246:	4603      	mov	r3, r0
 8001248:	71bb      	strb	r3, [r7, #6]
 800124a:	460b      	mov	r3, r1
 800124c:	717b      	strb	r3, [r7, #5]
 800124e:	4613      	mov	r3, r2
 8001250:	713b      	strb	r3, [r7, #4]
    if (LED_CATHODE_COMMON) {
        GPIOA->ODR = (GPIOA->ODR & ~(1 << LED_BLUE_PIN)) | (b << LED_BLUE_PIN);
 8001252:	4b0f      	ldr	r3, [pc, #60]	@ (8001290 <LED_Set+0x5c>)
 8001254:	695b      	ldr	r3, [r3, #20]
 8001256:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800125a:	797b      	ldrb	r3, [r7, #5]
 800125c:	01db      	lsls	r3, r3, #7
 800125e:	490c      	ldr	r1, [pc, #48]	@ (8001290 <LED_Set+0x5c>)
 8001260:	4313      	orrs	r3, r2
 8001262:	614b      	str	r3, [r1, #20]
        GPIOB->ODR = (GPIOB->ODR & ~((1 << LED_RED_PIN) | (1 << LED_YELLOW_PIN) | (1 << LED_GREEN_PIN))) |
 8001264:	4b0b      	ldr	r3, [pc, #44]	@ (8001294 <LED_Set+0x60>)
 8001266:	695b      	ldr	r3, [r3, #20]
 8001268:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800126c:	f023 0303 	bic.w	r3, r3, #3
                     (r << LED_RED_PIN) | (y << LED_YELLOW_PIN) | (g << LED_GREEN_PIN);
 8001270:	79fa      	ldrb	r2, [r7, #7]
 8001272:	0052      	lsls	r2, r2, #1
        GPIOB->ODR = (GPIOB->ODR & ~((1 << LED_RED_PIN) | (1 << LED_YELLOW_PIN) | (1 << LED_GREEN_PIN))) |
 8001274:	431a      	orrs	r2, r3
                     (r << LED_RED_PIN) | (y << LED_YELLOW_PIN) | (g << LED_GREEN_PIN);
 8001276:	79bb      	ldrb	r3, [r7, #6]
 8001278:	431a      	orrs	r2, r3
 800127a:	793b      	ldrb	r3, [r7, #4]
 800127c:	029b      	lsls	r3, r3, #10
        GPIOB->ODR = (GPIOB->ODR & ~((1 << LED_RED_PIN) | (1 << LED_YELLOW_PIN) | (1 << LED_GREEN_PIN))) |
 800127e:	4905      	ldr	r1, [pc, #20]	@ (8001294 <LED_Set+0x60>)
                     (r << LED_RED_PIN) | (y << LED_YELLOW_PIN) | (g << LED_GREEN_PIN);
 8001280:	4313      	orrs	r3, r2
        GPIOB->ODR = (GPIOB->ODR & ~((1 << LED_RED_PIN) | (1 << LED_YELLOW_PIN) | (1 << LED_GREEN_PIN))) |
 8001282:	614b      	str	r3, [r1, #20]
    } else {
        GPIOA->ODR = (GPIOA->ODR & ~(1 << LED_BLUE_PIN)) | ((b ? 0 : 1) << LED_BLUE_PIN);
        GPIOB->ODR = (GPIOB->ODR & ~((1 << LED_RED_PIN) | (1 << LED_YELLOW_PIN) | (1 << LED_GREEN_PIN))) |
                     ((r ? 0 : 1) << LED_RED_PIN) | ((y ? 0 : 1) << LED_YELLOW_PIN) | ((g ? 0 : 1) << LED_GREEN_PIN);
    }
}
 8001284:	bf00      	nop
 8001286:	3708      	adds	r7, #8
 8001288:	46bd      	mov	sp, r7
 800128a:	bc90      	pop	{r4, r7}
 800128c:	4770      	bx	lr
 800128e:	bf00      	nop
 8001290:	40020000 	.word	0x40020000
 8001294:	40020400 	.word	0x40020400

08001298 <Buzzer_Set>:

void Buzzer_Set(uint8_t state) {
 8001298:	b480      	push	{r7}
 800129a:	b083      	sub	sp, #12
 800129c:	af00      	add	r7, sp, #0
 800129e:	4603      	mov	r3, r0
 80012a0:	71fb      	strb	r3, [r7, #7]
    if (BUZZER_ACTIVE_HIGH) {
        GPIOA->ODR = (GPIOA->ODR & ~(1 << BUZZER_PIN)) | (state << BUZZER_PIN);
 80012a2:	4b07      	ldr	r3, [pc, #28]	@ (80012c0 <Buzzer_Set+0x28>)
 80012a4:	695b      	ldr	r3, [r3, #20]
 80012a6:	f023 0240 	bic.w	r2, r3, #64	@ 0x40
 80012aa:	79fb      	ldrb	r3, [r7, #7]
 80012ac:	019b      	lsls	r3, r3, #6
 80012ae:	4904      	ldr	r1, [pc, #16]	@ (80012c0 <Buzzer_Set+0x28>)
 80012b0:	4313      	orrs	r3, r2
 80012b2:	614b      	str	r3, [r1, #20]
    } else {
        GPIOA->ODR = (GPIOA->ODR & ~(1 << BUZZER_PIN)) | ((state ? 0 : 1) << BUZZER_PIN);
    }
}
 80012b4:	bf00      	nop
 80012b6:	370c      	adds	r7, #12
 80012b8:	46bd      	mov	sp, r7
 80012ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012be:	4770      	bx	lr
 80012c0:	40020000 	.word	0x40020000

080012c4 <TIM2_Reconfig>:

static uint32_t last_arr = 0;
void TIM2_Reconfig(uint32_t arr) {
 80012c4:	b480      	push	{r7}
 80012c6:	b083      	sub	sp, #12
 80012c8:	af00      	add	r7, sp, #0
 80012ca:	6078      	str	r0, [r7, #4]
    if (arr != last_arr) {
 80012cc:	4b1d      	ldr	r3, [pc, #116]	@ (8001344 <TIM2_Reconfig+0x80>)
 80012ce:	681b      	ldr	r3, [r3, #0]
 80012d0:	687a      	ldr	r2, [r7, #4]
 80012d2:	429a      	cmp	r2, r3
 80012d4:	d02f      	beq.n	8001336 <TIM2_Reconfig+0x72>
        TIM2->CR1 &= ~TIM_CR1_CEN;
 80012d6:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80012da:	681b      	ldr	r3, [r3, #0]
 80012dc:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80012e0:	f023 0301 	bic.w	r3, r3, #1
 80012e4:	6013      	str	r3, [r2, #0]
        TIM2->PSC = 4199;
 80012e6:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80012ea:	f241 0267 	movw	r2, #4199	@ 0x1067
 80012ee:	629a      	str	r2, [r3, #40]	@ 0x28
        TIM2->ARR = arr;
 80012f0:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80012f4:	687b      	ldr	r3, [r7, #4]
 80012f6:	62d3      	str	r3, [r2, #44]	@ 0x2c
        TIM2->CNT = 0;
 80012f8:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80012fc:	2200      	movs	r2, #0
 80012fe:	625a      	str	r2, [r3, #36]	@ 0x24
        TIM2->DIER |= TIM_DIER_UIE;
 8001300:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001304:	68db      	ldr	r3, [r3, #12]
 8001306:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800130a:	f043 0301 	orr.w	r3, r3, #1
 800130e:	60d3      	str	r3, [r2, #12]
        TIM2->SR &= ~TIM_SR_UIF;
 8001310:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001314:	691b      	ldr	r3, [r3, #16]
 8001316:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800131a:	f023 0301 	bic.w	r3, r3, #1
 800131e:	6113      	str	r3, [r2, #16]
        TIM2->CR1 |= TIM_CR1_CEN;
 8001320:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001324:	681b      	ldr	r3, [r3, #0]
 8001326:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800132a:	f043 0301 	orr.w	r3, r3, #1
 800132e:	6013      	str	r3, [r2, #0]
        last_arr = arr;
 8001330:	4a04      	ldr	r2, [pc, #16]	@ (8001344 <TIM2_Reconfig+0x80>)
 8001332:	687b      	ldr	r3, [r7, #4]
 8001334:	6013      	str	r3, [r2, #0]
    }
}
 8001336:	bf00      	nop
 8001338:	370c      	adds	r7, #12
 800133a:	46bd      	mov	sp, r7
 800133c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001340:	4770      	bx	lr
 8001342:	bf00      	nop
 8001344:	200001f8 	.word	0x200001f8

08001348 <TIM2_Config>:

void TIM2_Config(void) {
 8001348:	b580      	push	{r7, lr}
 800134a:	af00      	add	r7, sp, #0
    RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;
 800134c:	4b05      	ldr	r3, [pc, #20]	@ (8001364 <TIM2_Config+0x1c>)
 800134e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001350:	4a04      	ldr	r2, [pc, #16]	@ (8001364 <TIM2_Config+0x1c>)
 8001352:	f043 0301 	orr.w	r3, r3, #1
 8001356:	6413      	str	r3, [r2, #64]	@ 0x40
    NVIC_EnableIRQ(TIM2_IRQn);
 8001358:	201c      	movs	r0, #28
 800135a:	f7ff fc2d 	bl	8000bb8 <__NVIC_EnableIRQ>
}
 800135e:	bf00      	nop
 8001360:	bd80      	pop	{r7, pc}
 8001362:	bf00      	nop
 8001364:	40023800 	.word	0x40023800

08001368 <TIM2_IRQHandler>:

void TIM2_IRQHandler(void) {
 8001368:	b580      	push	{r7, lr}
 800136a:	af00      	add	r7, sp, #0
	if (TIM2->SR & TIM_SR_UIF) {
 800136c:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001370:	691b      	ldr	r3, [r3, #16]
 8001372:	f003 0301 	and.w	r3, r3, #1
 8001376:	2b00      	cmp	r3, #0
 8001378:	d024      	beq.n	80013c4 <TIM2_IRQHandler+0x5c>
	        TIM2->SR &= ~TIM_SR_UIF;
 800137a:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800137e:	691b      	ldr	r3, [r3, #16]
 8001380:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001384:	f023 0301 	bic.w	r3, r3, #1
 8001388:	6113      	str	r3, [r2, #16]
	        if (TIM2->CR1 & TIM_CR1_CEN) {
 800138a:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800138e:	681b      	ldr	r3, [r3, #0]
 8001390:	f003 0301 	and.w	r3, r3, #1
 8001394:	2b00      	cmp	r3, #0
 8001396:	d015      	beq.n	80013c4 <TIM2_IRQHandler+0x5c>
	            tim2_blink_state = !tim2_blink_state;
 8001398:	4b0b      	ldr	r3, [pc, #44]	@ (80013c8 <TIM2_IRQHandler+0x60>)
 800139a:	781b      	ldrb	r3, [r3, #0]
 800139c:	b2db      	uxtb	r3, r3
 800139e:	2b00      	cmp	r3, #0
 80013a0:	bf0c      	ite	eq
 80013a2:	2301      	moveq	r3, #1
 80013a4:	2300      	movne	r3, #0
 80013a6:	b2db      	uxtb	r3, r3
 80013a8:	461a      	mov	r2, r3
 80013aa:	4b07      	ldr	r3, [pc, #28]	@ (80013c8 <TIM2_IRQHandler+0x60>)
 80013ac:	701a      	strb	r2, [r3, #0]
	            relay_blink_state = tim2_blink_state; // Đồng bộ trạng thái relay
 80013ae:	4b06      	ldr	r3, [pc, #24]	@ (80013c8 <TIM2_IRQHandler+0x60>)
 80013b0:	781b      	ldrb	r3, [r3, #0]
 80013b2:	b2da      	uxtb	r2, r3
 80013b4:	4b05      	ldr	r3, [pc, #20]	@ (80013cc <TIM2_IRQHandler+0x64>)
 80013b6:	701a      	strb	r2, [r3, #0]
	            Relay_Set(relay_blink_state); // Bật/tắt relay
 80013b8:	4b04      	ldr	r3, [pc, #16]	@ (80013cc <TIM2_IRQHandler+0x64>)
 80013ba:	781b      	ldrb	r3, [r3, #0]
 80013bc:	b2db      	uxtb	r3, r3
 80013be:	4618      	mov	r0, r3
 80013c0:	f000 f86c 	bl	800149c <Relay_Set>
	        }
	}
}
 80013c4:	bf00      	nop
 80013c6:	bd80      	pop	{r7, pc}
 80013c8:	200001f4 	.word	0x200001f4
 80013cc:	200001f5 	.word	0x200001f5

080013d0 <MQ2_GetPPM>:

float MQ2_GetPPM(uint16_t adc_value) {
 80013d0:	b480      	push	{r7}
 80013d2:	b087      	sub	sp, #28
 80013d4:	af00      	add	r7, sp, #0
 80013d6:	4603      	mov	r3, r0
 80013d8:	80fb      	strh	r3, [r7, #6]
    float voltage = (adc_value / 4096.0f) * 3.3f;
 80013da:	88fb      	ldrh	r3, [r7, #6]
 80013dc:	ee07 3a90 	vmov	s15, r3
 80013e0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80013e4:	eddf 6a17 	vldr	s13, [pc, #92]	@ 8001444 <MQ2_GetPPM+0x74>
 80013e8:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80013ec:	ed9f 7a16 	vldr	s14, [pc, #88]	@ 8001448 <MQ2_GetPPM+0x78>
 80013f0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80013f4:	edc7 7a04 	vstr	s15, [r7, #16]
    float k = 500.0f;
 80013f8:	4b14      	ldr	r3, [pc, #80]	@ (800144c <MQ2_GetPPM+0x7c>)
 80013fa:	60fb      	str	r3, [r7, #12]
    float c = 0.0f;
 80013fc:	f04f 0300 	mov.w	r3, #0
 8001400:	60bb      	str	r3, [r7, #8]
    float ppm = k * voltage + c;
 8001402:	ed97 7a03 	vldr	s14, [r7, #12]
 8001406:	edd7 7a04 	vldr	s15, [r7, #16]
 800140a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800140e:	ed97 7a02 	vldr	s14, [r7, #8]
 8001412:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001416:	edc7 7a05 	vstr	s15, [r7, #20]
    if (ppm < 0) ppm = 0;
 800141a:	edd7 7a05 	vldr	s15, [r7, #20]
 800141e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001422:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001426:	d502      	bpl.n	800142e <MQ2_GetPPM+0x5e>
 8001428:	f04f 0300 	mov.w	r3, #0
 800142c:	617b      	str	r3, [r7, #20]
    return ppm;
 800142e:	697b      	ldr	r3, [r7, #20]
 8001430:	ee07 3a90 	vmov	s15, r3
}
 8001434:	eeb0 0a67 	vmov.f32	s0, s15
 8001438:	371c      	adds	r7, #28
 800143a:	46bd      	mov	sp, r7
 800143c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001440:	4770      	bx	lr
 8001442:	bf00      	nop
 8001444:	45800000 	.word	0x45800000
 8001448:	40533333 	.word	0x40533333
 800144c:	43fa0000 	.word	0x43fa0000

08001450 <SysTick_Initialize>:

void SysTick_Initialize(void) {
 8001450:	b580      	push	{r7, lr}
 8001452:	af00      	add	r7, sp, #0
    SysTick->LOAD = 84000000 / 1000 - 1;
 8001454:	4b08      	ldr	r3, [pc, #32]	@ (8001478 <SysTick_Initialize+0x28>)
 8001456:	4a09      	ldr	r2, [pc, #36]	@ (800147c <SysTick_Initialize+0x2c>)
 8001458:	605a      	str	r2, [r3, #4]
    SysTick->VAL = 0;
 800145a:	4b07      	ldr	r3, [pc, #28]	@ (8001478 <SysTick_Initialize+0x28>)
 800145c:	2200      	movs	r2, #0
 800145e:	609a      	str	r2, [r3, #8]
    SysTick->CTRL |= SysTick_CTRL_CLKSOURCE_Msk | SysTick_CTRL_TICKINT_Msk | SysTick_CTRL_ENABLE_Msk;
 8001460:	4b05      	ldr	r3, [pc, #20]	@ (8001478 <SysTick_Initialize+0x28>)
 8001462:	681b      	ldr	r3, [r3, #0]
 8001464:	4a04      	ldr	r2, [pc, #16]	@ (8001478 <SysTick_Initialize+0x28>)
 8001466:	f043 0307 	orr.w	r3, r3, #7
 800146a:	6013      	str	r3, [r2, #0]
    NVIC_EnableIRQ(SysTick_IRQn);
 800146c:	f04f 30ff 	mov.w	r0, #4294967295
 8001470:	f7ff fba2 	bl	8000bb8 <__NVIC_EnableIRQ>
}
 8001474:	bf00      	nop
 8001476:	bd80      	pop	{r7, pc}
 8001478:	e000e010 	.word	0xe000e010
 800147c:	0001481f 	.word	0x0001481f

08001480 <SysTick_Handler>:

void SysTick_Handler(void) {
 8001480:	b480      	push	{r7}
 8001482:	af00      	add	r7, sp, #0
    tick_count++;
 8001484:	4b04      	ldr	r3, [pc, #16]	@ (8001498 <SysTick_Handler+0x18>)
 8001486:	681b      	ldr	r3, [r3, #0]
 8001488:	3301      	adds	r3, #1
 800148a:	4a03      	ldr	r2, [pc, #12]	@ (8001498 <SysTick_Handler+0x18>)
 800148c:	6013      	str	r3, [r2, #0]
}
 800148e:	bf00      	nop
 8001490:	46bd      	mov	sp, r7
 8001492:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001496:	4770      	bx	lr
 8001498:	200001f0 	.word	0x200001f0

0800149c <Relay_Set>:

void Relay_Set(uint8_t state) {
 800149c:	b480      	push	{r7}
 800149e:	b083      	sub	sp, #12
 80014a0:	af00      	add	r7, sp, #0
 80014a2:	4603      	mov	r3, r0
 80014a4:	71fb      	strb	r3, [r7, #7]
    GPIOA->ODR = (GPIOA->ODR & ~(1 << RELAY_PIN)) | (state << RELAY_PIN);
 80014a6:	4b07      	ldr	r3, [pc, #28]	@ (80014c4 <Relay_Set+0x28>)
 80014a8:	695b      	ldr	r3, [r3, #20]
 80014aa:	f023 0220 	bic.w	r2, r3, #32
 80014ae:	79fb      	ldrb	r3, [r7, #7]
 80014b0:	015b      	lsls	r3, r3, #5
 80014b2:	4904      	ldr	r1, [pc, #16]	@ (80014c4 <Relay_Set+0x28>)
 80014b4:	4313      	orrs	r3, r2
 80014b6:	614b      	str	r3, [r1, #20]
}
 80014b8:	bf00      	nop
 80014ba:	370c      	adds	r7, #12
 80014bc:	46bd      	mov	sp, r7
 80014be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014c2:	4770      	bx	lr
 80014c4:	40020000 	.word	0x40020000

080014c8 <main>:

int main(void) {
 80014c8:	b580      	push	{r7, lr}
 80014ca:	b0a6      	sub	sp, #152	@ 0x98
 80014cc:	af02      	add	r7, sp, #8
    SystemClock_Config();
 80014ce:	f7ff fbc3 	bl	8000c58 <SystemClock_Config>
    GPIO_Config();
 80014d2:	f7ff fbfd 	bl	8000cd0 <GPIO_Config>
    ADC_Config();
 80014d6:	f7ff fdf7 	bl	80010c8 <ADC_Config>
    I2C_Config();
 80014da:	f7ff fc51 	bl	8000d80 <I2C_Config>
    UART_Config();
 80014de:	f7ff fe31 	bl	8001144 <UART_Config>
    TIM2_Config();
 80014e2:	f7ff ff31 	bl	8001348 <TIM2_Config>
    SysTick_Initialize();
 80014e6:	f7ff ffb3 	bl	8001450 <SysTick_Initialize>

    if (LCD_Init()) {
 80014ea:	f7ff fd8f 	bl	800100c <LCD_Init>
 80014ee:	4603      	mov	r3, r0
 80014f0:	2b00      	cmp	r3, #0
 80014f2:	d002      	beq.n	80014fa <main+0x32>
        UART_Transmit("Try LCD_I2C_ADDR 0x3F\r\n");
 80014f4:	48a3      	ldr	r0, [pc, #652]	@ (8001784 <main+0x2bc>)
 80014f6:	f7ff fe73 	bl	80011e0 <UART_Transmit>
    }

    LED_Set(1, 0, 0, 0); delay_ms(100);
 80014fa:	2300      	movs	r3, #0
 80014fc:	2200      	movs	r2, #0
 80014fe:	2100      	movs	r1, #0
 8001500:	2001      	movs	r0, #1
 8001502:	f7ff fe97 	bl	8001234 <LED_Set>
 8001506:	2064      	movs	r0, #100	@ 0x64
 8001508:	f7ff fb74 	bl	8000bf4 <delay_ms>
    LED_Set(0, 0, 0, 1); delay_ms(100);
 800150c:	2301      	movs	r3, #1
 800150e:	2200      	movs	r2, #0
 8001510:	2100      	movs	r1, #0
 8001512:	2000      	movs	r0, #0
 8001514:	f7ff fe8e 	bl	8001234 <LED_Set>
 8001518:	2064      	movs	r0, #100	@ 0x64
 800151a:	f7ff fb6b 	bl	8000bf4 <delay_ms>
    LED_Set(0, 1, 0, 0); delay_ms(100);
 800151e:	2300      	movs	r3, #0
 8001520:	2200      	movs	r2, #0
 8001522:	2101      	movs	r1, #1
 8001524:	2000      	movs	r0, #0
 8001526:	f7ff fe85 	bl	8001234 <LED_Set>
 800152a:	2064      	movs	r0, #100	@ 0x64
 800152c:	f7ff fb62 	bl	8000bf4 <delay_ms>
    LED_Set(0, 0, 1, 0); delay_ms(100);
 8001530:	2300      	movs	r3, #0
 8001532:	2201      	movs	r2, #1
 8001534:	2100      	movs	r1, #0
 8001536:	2000      	movs	r0, #0
 8001538:	f7ff fe7c 	bl	8001234 <LED_Set>
 800153c:	2064      	movs	r0, #100	@ 0x64
 800153e:	f7ff fb59 	bl	8000bf4 <delay_ms>
    LED_Set(0, 0, 0, 0);
 8001542:	2300      	movs	r3, #0
 8001544:	2200      	movs	r2, #0
 8001546:	2100      	movs	r1, #0
 8001548:	2000      	movs	r0, #0
 800154a:	f7ff fe73 	bl	8001234 <LED_Set>

    LCD_SendCommand(0x01);
 800154e:	2001      	movs	r0, #1
 8001550:	f7ff fce0 	bl	8000f14 <LCD_SendCommand>
    LCD_SendCommand(0x80);
 8001554:	2080      	movs	r0, #128	@ 0x80
 8001556:	f7ff fcdd 	bl	8000f14 <LCD_SendCommand>
    LCD_SendString("Gas Detector");
 800155a:	488b      	ldr	r0, [pc, #556]	@ (8001788 <main+0x2c0>)
 800155c:	f7ff fd9c 	bl	8001098 <LCD_SendString>
    LCD_SendCommand(0xC0);
 8001560:	20c0      	movs	r0, #192	@ 0xc0
 8001562:	f7ff fcd7 	bl	8000f14 <LCD_SendCommand>
    LCD_SendString("Starting...");
 8001566:	4889      	ldr	r0, [pc, #548]	@ (800178c <main+0x2c4>)
 8001568:	f7ff fd96 	bl	8001098 <LCD_SendString>
    delay_ms(1000);
 800156c:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8001570:	f7ff fb40 	bl	8000bf4 <delay_ms>

    LCD_SendCommand(0x01);
 8001574:	2001      	movs	r0, #1
 8001576:	f7ff fccd 	bl	8000f14 <LCD_SendCommand>
    LCD_SendCommand(0x80);
 800157a:	2080      	movs	r0, #128	@ 0x80
 800157c:	f7ff fcca 	bl	8000f14 <LCD_SendCommand>
    LCD_SendString("PPM:----");
 8001580:	4883      	ldr	r0, [pc, #524]	@ (8001790 <main+0x2c8>)
 8001582:	f7ff fd89 	bl	8001098 <LCD_SendString>
    LCD_SendCommand(0xC0);
 8001586:	20c0      	movs	r0, #192	@ 0xc0
 8001588:	f7ff fcc4 	bl	8000f14 <LCD_SendCommand>
    LCD_SendString("SYS:ON Alert:-");
 800158c:	4881      	ldr	r0, [pc, #516]	@ (8001794 <main+0x2cc>)
 800158e:	f7ff fd83 	bl	8001098 <LCD_SendString>
    delay_ms(50);
 8001592:	2032      	movs	r0, #50	@ 0x32
 8001594:	f7ff fb2e 	bl	8000bf4 <delay_ms>

    char lcd_buf[17];
    char debug_buf[80];
    uint8_t last_system_state = system_state;
 8001598:	4b7f      	ldr	r3, [pc, #508]	@ (8001798 <main+0x2d0>)
 800159a:	781b      	ldrb	r3, [r3, #0]
 800159c:	f887 308f 	strb.w	r3, [r7, #143]	@ 0x8f
    uint8_t last_alert_state = 255;
 80015a0:	23ff      	movs	r3, #255	@ 0xff
 80015a2:	f887 308e 	strb.w	r3, [r7, #142]	@ 0x8e
    uint32_t last_ppm = 0xFFFFFFFF;
 80015a6:	f04f 33ff 	mov.w	r3, #4294967295
 80015aa:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
    uint32_t last_transmit = 0;
 80015ae:	2300      	movs	r3, #0
 80015b0:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
    uint32_t last_lcd_update = 0;
 80015b4:	2300      	movs	r3, #0
 80015b6:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
    float last_ppm_for_freq = 0;
 80015ba:	f04f 0300 	mov.w	r3, #0
 80015be:	67fb      	str	r3, [r7, #124]	@ 0x7c

    while (1) {
        static uint8_t last_sw1 = 1, last_sw2 = 1;
        uint8_t sw1 = (GPIOC->IDR & (1 << SW1_PIN)) ? 1 : 0;
 80015c0:	4b76      	ldr	r3, [pc, #472]	@ (800179c <main+0x2d4>)
 80015c2:	691b      	ldr	r3, [r3, #16]
 80015c4:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 80015c8:	2b00      	cmp	r3, #0
 80015ca:	bf14      	ite	ne
 80015cc:	2301      	movne	r3, #1
 80015ce:	2300      	moveq	r3, #0
 80015d0:	b2db      	uxtb	r3, r3
 80015d2:	f887 307b 	strb.w	r3, [r7, #123]	@ 0x7b
        uint8_t sw2 = (GPIOC->IDR & (1 << SW2_PIN)) ? 1 : 0;
 80015d6:	4b71      	ldr	r3, [pc, #452]	@ (800179c <main+0x2d4>)
 80015d8:	691b      	ldr	r3, [r3, #16]
 80015da:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80015de:	2b00      	cmp	r3, #0
 80015e0:	bf14      	ite	ne
 80015e2:	2301      	movne	r3, #1
 80015e4:	2300      	moveq	r3, #0
 80015e6:	b2db      	uxtb	r3, r3
 80015e8:	f887 307a 	strb.w	r3, [r7, #122]	@ 0x7a

        if (last_sw1 && !sw1) {
 80015ec:	4b6c      	ldr	r3, [pc, #432]	@ (80017a0 <main+0x2d8>)
 80015ee:	781b      	ldrb	r3, [r3, #0]
 80015f0:	2b00      	cmp	r3, #0
 80015f2:	d01b      	beq.n	800162c <main+0x164>
 80015f4:	f897 307b 	ldrb.w	r3, [r7, #123]	@ 0x7b
 80015f8:	2b00      	cmp	r3, #0
 80015fa:	d117      	bne.n	800162c <main+0x164>
            system_state = !system_state;
 80015fc:	4b66      	ldr	r3, [pc, #408]	@ (8001798 <main+0x2d0>)
 80015fe:	781b      	ldrb	r3, [r3, #0]
 8001600:	2b00      	cmp	r3, #0
 8001602:	bf0c      	ite	eq
 8001604:	2301      	moveq	r3, #1
 8001606:	2300      	movne	r3, #0
 8001608:	b2db      	uxtb	r3, r3
 800160a:	461a      	mov	r2, r3
 800160c:	4b62      	ldr	r3, [pc, #392]	@ (8001798 <main+0x2d0>)
 800160e:	701a      	strb	r2, [r3, #0]
            snprintf(debug_buf, sizeof(debug_buf), "SW1 Pressed: System State=%u\r\n", system_state);
 8001610:	4b61      	ldr	r3, [pc, #388]	@ (8001798 <main+0x2d0>)
 8001612:	781b      	ldrb	r3, [r3, #0]
 8001614:	1d38      	adds	r0, r7, #4
 8001616:	4a63      	ldr	r2, [pc, #396]	@ (80017a4 <main+0x2dc>)
 8001618:	2150      	movs	r1, #80	@ 0x50
 800161a:	f001 f8c5 	bl	80027a8 <sniprintf>
            UART_Transmit(debug_buf);
 800161e:	1d3b      	adds	r3, r7, #4
 8001620:	4618      	mov	r0, r3
 8001622:	f7ff fddd 	bl	80011e0 <UART_Transmit>
            delay_ms(10);
 8001626:	200a      	movs	r0, #10
 8001628:	f7ff fae4 	bl	8000bf4 <delay_ms>
        }
        last_sw1 = sw1;
 800162c:	4a5c      	ldr	r2, [pc, #368]	@ (80017a0 <main+0x2d8>)
 800162e:	f897 307b 	ldrb.w	r3, [r7, #123]	@ 0x7b
 8001632:	7013      	strb	r3, [r2, #0]

        if (last_sw2 && !sw2) {
 8001634:	4b5c      	ldr	r3, [pc, #368]	@ (80017a8 <main+0x2e0>)
 8001636:	781b      	ldrb	r3, [r3, #0]
 8001638:	2b00      	cmp	r3, #0
 800163a:	d056      	beq.n	80016ea <main+0x222>
 800163c:	f897 307a 	ldrb.w	r3, [r7, #122]	@ 0x7a
 8001640:	2b00      	cmp	r3, #0
 8001642:	d152      	bne.n	80016ea <main+0x222>
            system_state = 1;
 8001644:	4b54      	ldr	r3, [pc, #336]	@ (8001798 <main+0x2d0>)
 8001646:	2201      	movs	r2, #1
 8001648:	701a      	strb	r2, [r3, #0]
            alert_state = 0;
 800164a:	4b58      	ldr	r3, [pc, #352]	@ (80017ac <main+0x2e4>)
 800164c:	2200      	movs	r2, #0
 800164e:	701a      	strb	r2, [r3, #0]
            tim2_blink_state = 0;
 8001650:	4b57      	ldr	r3, [pc, #348]	@ (80017b0 <main+0x2e8>)
 8001652:	2200      	movs	r2, #0
 8001654:	701a      	strb	r2, [r3, #0]
            LED_Set(0, 0, 0, 0);
 8001656:	2300      	movs	r3, #0
 8001658:	2200      	movs	r2, #0
 800165a:	2100      	movs	r1, #0
 800165c:	2000      	movs	r0, #0
 800165e:	f7ff fde9 	bl	8001234 <LED_Set>
            Relay_Set(0);
 8001662:	2000      	movs	r0, #0
 8001664:	f7ff ff1a 	bl	800149c <Relay_Set>
            Buzzer_Set(0);
 8001668:	2000      	movs	r0, #0
 800166a:	f7ff fe15 	bl	8001298 <Buzzer_Set>
            TIM2->CR1 &= ~TIM_CR1_CEN;
 800166e:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001672:	681b      	ldr	r3, [r3, #0]
 8001674:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001678:	f023 0301 	bic.w	r3, r3, #1
 800167c:	6013      	str	r3, [r2, #0]
            LCD_SendCommand(0x01);
 800167e:	2001      	movs	r0, #1
 8001680:	f7ff fc48 	bl	8000f14 <LCD_SendCommand>
            LCD_SendCommand(0x80);
 8001684:	2080      	movs	r0, #128	@ 0x80
 8001686:	f7ff fc45 	bl	8000f14 <LCD_SendCommand>
            LCD_SendString("Gas Detector");
 800168a:	483f      	ldr	r0, [pc, #252]	@ (8001788 <main+0x2c0>)
 800168c:	f7ff fd04 	bl	8001098 <LCD_SendString>
            LCD_SendCommand(0xC0);
 8001690:	20c0      	movs	r0, #192	@ 0xc0
 8001692:	f7ff fc3f 	bl	8000f14 <LCD_SendCommand>
            LCD_SendString("Starting...");
 8001696:	483d      	ldr	r0, [pc, #244]	@ (800178c <main+0x2c4>)
 8001698:	f7ff fcfe 	bl	8001098 <LCD_SendString>
            UART_Transmit("SW2 Pressed: System Reset\r\n");
 800169c:	4845      	ldr	r0, [pc, #276]	@ (80017b4 <main+0x2ec>)
 800169e:	f7ff fd9f 	bl	80011e0 <UART_Transmit>
            delay_ms(1000);
 80016a2:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80016a6:	f7ff faa5 	bl	8000bf4 <delay_ms>
            LCD_SendCommand(0x01);
 80016aa:	2001      	movs	r0, #1
 80016ac:	f7ff fc32 	bl	8000f14 <LCD_SendCommand>
            LCD_SendCommand(0x80);
 80016b0:	2080      	movs	r0, #128	@ 0x80
 80016b2:	f7ff fc2f 	bl	8000f14 <LCD_SendCommand>
            LCD_SendString("PPM:----");
 80016b6:	4836      	ldr	r0, [pc, #216]	@ (8001790 <main+0x2c8>)
 80016b8:	f7ff fcee 	bl	8001098 <LCD_SendString>
            LCD_SendCommand(0xC0);
 80016bc:	20c0      	movs	r0, #192	@ 0xc0
 80016be:	f7ff fc29 	bl	8000f14 <LCD_SendCommand>
            LCD_SendString("SYS:ON Alert:-");
 80016c2:	4834      	ldr	r0, [pc, #208]	@ (8001794 <main+0x2cc>)
 80016c4:	f7ff fce8 	bl	8001098 <LCD_SendString>
            last_system_state = system_state;
 80016c8:	4b33      	ldr	r3, [pc, #204]	@ (8001798 <main+0x2d0>)
 80016ca:	781b      	ldrb	r3, [r3, #0]
 80016cc:	f887 308f 	strb.w	r3, [r7, #143]	@ 0x8f
            last_alert_state = 255;
 80016d0:	23ff      	movs	r3, #255	@ 0xff
 80016d2:	f887 308e 	strb.w	r3, [r7, #142]	@ 0x8e
            last_ppm = 0xFFFFFFFF;
 80016d6:	f04f 33ff 	mov.w	r3, #4294967295
 80016da:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
            last_ppm_for_freq = 0;
 80016de:	f04f 0300 	mov.w	r3, #0
 80016e2:	67fb      	str	r3, [r7, #124]	@ 0x7c
            last_lcd_update = 0;
 80016e4:	2300      	movs	r3, #0
 80016e6:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
        }
        last_sw2 = sw2;
 80016ea:	4a2f      	ldr	r2, [pc, #188]	@ (80017a8 <main+0x2e0>)
 80016ec:	f897 307a 	ldrb.w	r3, [r7, #122]	@ 0x7a
 80016f0:	7013      	strb	r3, [r2, #0]

        if (!system_state) {
 80016f2:	4b29      	ldr	r3, [pc, #164]	@ (8001798 <main+0x2d0>)
 80016f4:	781b      	ldrb	r3, [r3, #0]
 80016f6:	2b00      	cmp	r3, #0
 80016f8:	d164      	bne.n	80017c4 <main+0x2fc>
            if (last_system_state != system_state) {
 80016fa:	4b27      	ldr	r3, [pc, #156]	@ (8001798 <main+0x2d0>)
 80016fc:	781b      	ldrb	r3, [r3, #0]
 80016fe:	f897 208f 	ldrb.w	r2, [r7, #143]	@ 0x8f
 8001702:	429a      	cmp	r2, r3
 8001704:	d039      	beq.n	800177a <main+0x2b2>
                LED_Set(0, 0, 0, 1);
 8001706:	2301      	movs	r3, #1
 8001708:	2200      	movs	r2, #0
 800170a:	2100      	movs	r1, #0
 800170c:	2000      	movs	r0, #0
 800170e:	f7ff fd91 	bl	8001234 <LED_Set>
                Relay_Set(0);
 8001712:	2000      	movs	r0, #0
 8001714:	f7ff fec2 	bl	800149c <Relay_Set>
                Buzzer_Set(0);
 8001718:	2000      	movs	r0, #0
 800171a:	f7ff fdbd 	bl	8001298 <Buzzer_Set>
                TIM2->CR1 &= ~TIM_CR1_CEN;
 800171e:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001722:	681b      	ldr	r3, [r3, #0]
 8001724:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001728:	f023 0301 	bic.w	r3, r3, #1
 800172c:	6013      	str	r3, [r2, #0]
                LCD_SendCommand(0x01);
 800172e:	2001      	movs	r0, #1
 8001730:	f7ff fbf0 	bl	8000f14 <LCD_SendCommand>
                LCD_SendCommand(0x80);
 8001734:	2080      	movs	r0, #128	@ 0x80
 8001736:	f7ff fbed 	bl	8000f14 <LCD_SendCommand>
                LCD_SendString("SYS:OFF");
 800173a:	481f      	ldr	r0, [pc, #124]	@ (80017b8 <main+0x2f0>)
 800173c:	f7ff fcac 	bl	8001098 <LCD_SendString>
                LCD_SendCommand(0xC0);
 8001740:	20c0      	movs	r0, #192	@ 0xc0
 8001742:	f7ff fbe7 	bl	8000f14 <LCD_SendCommand>
                LCD_SendString("PPM:--- Alert:0");
 8001746:	481d      	ldr	r0, [pc, #116]	@ (80017bc <main+0x2f4>)
 8001748:	f7ff fca6 	bl	8001098 <LCD_SendString>
                UART_Transmit("System: OFF, PPM: ---\r\n");
 800174c:	481c      	ldr	r0, [pc, #112]	@ (80017c0 <main+0x2f8>)
 800174e:	f7ff fd47 	bl	80011e0 <UART_Transmit>
                delay_ms(10);
 8001752:	200a      	movs	r0, #10
 8001754:	f7ff fa4e 	bl	8000bf4 <delay_ms>
                last_system_state = system_state;
 8001758:	4b0f      	ldr	r3, [pc, #60]	@ (8001798 <main+0x2d0>)
 800175a:	781b      	ldrb	r3, [r3, #0]
 800175c:	f887 308f 	strb.w	r3, [r7, #143]	@ 0x8f
                last_alert_state = 255;
 8001760:	23ff      	movs	r3, #255	@ 0xff
 8001762:	f887 308e 	strb.w	r3, [r7, #142]	@ 0x8e
                last_ppm = 0xFFFFFFFF;
 8001766:	f04f 33ff 	mov.w	r3, #4294967295
 800176a:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
                last_ppm_for_freq = 0;
 800176e:	f04f 0300 	mov.w	r3, #0
 8001772:	67fb      	str	r3, [r7, #124]	@ 0x7c
                last_lcd_update = 0;
 8001774:	2300      	movs	r3, #0
 8001776:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
            }
            delay_ms(50);
 800177a:	2032      	movs	r0, #50	@ 0x32
 800177c:	f7ff fa3a 	bl	8000bf4 <delay_ms>
            continue;
 8001780:	e1a9      	b.n	8001ad6 <main+0x60e>
 8001782:	bf00      	nop
 8001784:	08004a54 	.word	0x08004a54
 8001788:	08004a6c 	.word	0x08004a6c
 800178c:	08004a7c 	.word	0x08004a7c
 8001790:	08004a88 	.word	0x08004a88
 8001794:	08004a94 	.word	0x08004a94
 8001798:	20000000 	.word	0x20000000
 800179c:	40020800 	.word	0x40020800
 80017a0:	20000001 	.word	0x20000001
 80017a4:	08004aa4 	.word	0x08004aa4
 80017a8:	20000002 	.word	0x20000002
 80017ac:	200001ec 	.word	0x200001ec
 80017b0:	200001f4 	.word	0x200001f4
 80017b4:	08004ac4 	.word	0x08004ac4
 80017b8:	08004ae0 	.word	0x08004ae0
 80017bc:	08004ae8 	.word	0x08004ae8
 80017c0:	08004af8 	.word	0x08004af8
        }

        if (last_system_state != system_state) {
 80017c4:	4bc4      	ldr	r3, [pc, #784]	@ (8001ad8 <main+0x610>)
 80017c6:	781b      	ldrb	r3, [r3, #0]
 80017c8:	f897 208f 	ldrb.w	r2, [r7, #143]	@ 0x8f
 80017cc:	429a      	cmp	r2, r3
 80017ce:	d01f      	beq.n	8001810 <main+0x348>
            LCD_SendCommand(0x01);
 80017d0:	2001      	movs	r0, #1
 80017d2:	f7ff fb9f 	bl	8000f14 <LCD_SendCommand>
            LCD_SendCommand(0x80);
 80017d6:	2080      	movs	r0, #128	@ 0x80
 80017d8:	f7ff fb9c 	bl	8000f14 <LCD_SendCommand>
            LCD_SendString("PPM:----");
 80017dc:	48bf      	ldr	r0, [pc, #764]	@ (8001adc <main+0x614>)
 80017de:	f7ff fc5b 	bl	8001098 <LCD_SendString>
            LCD_SendCommand(0xC0);
 80017e2:	20c0      	movs	r0, #192	@ 0xc0
 80017e4:	f7ff fb96 	bl	8000f14 <LCD_SendCommand>
            LCD_SendString("SYS:ON Alert:-");
 80017e8:	48bd      	ldr	r0, [pc, #756]	@ (8001ae0 <main+0x618>)
 80017ea:	f7ff fc55 	bl	8001098 <LCD_SendString>
            last_system_state = system_state;
 80017ee:	4bba      	ldr	r3, [pc, #744]	@ (8001ad8 <main+0x610>)
 80017f0:	781b      	ldrb	r3, [r3, #0]
 80017f2:	f887 308f 	strb.w	r3, [r7, #143]	@ 0x8f
            last_alert_state = 255;
 80017f6:	23ff      	movs	r3, #255	@ 0xff
 80017f8:	f887 308e 	strb.w	r3, [r7, #142]	@ 0x8e
            last_ppm = 0xFFFFFFFF;
 80017fc:	f04f 33ff 	mov.w	r3, #4294967295
 8001800:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
            last_ppm_for_freq = 0;
 8001804:	f04f 0300 	mov.w	r3, #0
 8001808:	67fb      	str	r3, [r7, #124]	@ 0x7c
            last_lcd_update = 0;
 800180a:	2300      	movs	r3, #0
 800180c:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
        }

        uint16_t adc_val = ADC_Read();
 8001810:	f7ff fc7e 	bl	8001110 <ADC_Read>
 8001814:	4603      	mov	r3, r0
 8001816:	f8a7 3078 	strh.w	r3, [r7, #120]	@ 0x78
        float ppm = MQ2_GetPPM(adc_val);
 800181a:	f8b7 3078 	ldrh.w	r3, [r7, #120]	@ 0x78
 800181e:	4618      	mov	r0, r3
 8001820:	f7ff fdd6 	bl	80013d0 <MQ2_GetPPM>
 8001824:	ed87 0a1d 	vstr	s0, [r7, #116]	@ 0x74
        uint32_t ppm_int = (uint32_t)ppm;
 8001828:	edd7 7a1d 	vldr	s15, [r7, #116]	@ 0x74
 800182c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001830:	ee17 3a90 	vmov	r3, s15
 8001834:	673b      	str	r3, [r7, #112]	@ 0x70

        if (tick_count - last_transmit >= 250) {
 8001836:	4bab      	ldr	r3, [pc, #684]	@ (8001ae4 <main+0x61c>)
 8001838:	681a      	ldr	r2, [r3, #0]
 800183a:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 800183e:	1ad3      	subs	r3, r2, r3
 8001840:	2bf9      	cmp	r3, #249	@ 0xf9
 8001842:	d916      	bls.n	8001872 <main+0x3aa>
            snprintf(debug_buf, sizeof(debug_buf), "%.1f\n", ppm);
 8001844:	6f78      	ldr	r0, [r7, #116]	@ 0x74
 8001846:	f7fe fe87 	bl	8000558 <__aeabi_f2d>
 800184a:	4602      	mov	r2, r0
 800184c:	460b      	mov	r3, r1
 800184e:	1d38      	adds	r0, r7, #4
 8001850:	e9cd 2300 	strd	r2, r3, [sp]
 8001854:	4aa4      	ldr	r2, [pc, #656]	@ (8001ae8 <main+0x620>)
 8001856:	2150      	movs	r1, #80	@ 0x50
 8001858:	f000 ffa6 	bl	80027a8 <sniprintf>
            UART_Transmit(debug_buf);
 800185c:	1d3b      	adds	r3, r7, #4
 800185e:	4618      	mov	r0, r3
 8001860:	f7ff fcbe 	bl	80011e0 <UART_Transmit>
            delay_ms(10);
 8001864:	200a      	movs	r0, #10
 8001866:	f7ff f9c5 	bl	8000bf4 <delay_ms>
            last_transmit = tick_count;
 800186a:	4b9e      	ldr	r3, [pc, #632]	@ (8001ae4 <main+0x61c>)
 800186c:	681b      	ldr	r3, [r3, #0]
 800186e:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
        }

        if (ppm > 800) alert_state = 3;
 8001872:	edd7 7a1d 	vldr	s15, [r7, #116]	@ 0x74
 8001876:	ed9f 7a9d 	vldr	s14, [pc, #628]	@ 8001aec <main+0x624>
 800187a:	eef4 7ac7 	vcmpe.f32	s15, s14
 800187e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001882:	dd03      	ble.n	800188c <main+0x3c4>
 8001884:	4b9a      	ldr	r3, [pc, #616]	@ (8001af0 <main+0x628>)
 8001886:	2203      	movs	r2, #3
 8001888:	701a      	strb	r2, [r3, #0]
 800188a:	e01c      	b.n	80018c6 <main+0x3fe>
        else if (ppm > 500) alert_state = 2;
 800188c:	edd7 7a1d 	vldr	s15, [r7, #116]	@ 0x74
 8001890:	ed9f 7a98 	vldr	s14, [pc, #608]	@ 8001af4 <main+0x62c>
 8001894:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001898:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800189c:	dd03      	ble.n	80018a6 <main+0x3de>
 800189e:	4b94      	ldr	r3, [pc, #592]	@ (8001af0 <main+0x628>)
 80018a0:	2202      	movs	r2, #2
 80018a2:	701a      	strb	r2, [r3, #0]
 80018a4:	e00f      	b.n	80018c6 <main+0x3fe>
        else if (ppm > 300) alert_state = 1;
 80018a6:	edd7 7a1d 	vldr	s15, [r7, #116]	@ 0x74
 80018aa:	ed9f 7a93 	vldr	s14, [pc, #588]	@ 8001af8 <main+0x630>
 80018ae:	eef4 7ac7 	vcmpe.f32	s15, s14
 80018b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80018b6:	dd03      	ble.n	80018c0 <main+0x3f8>
 80018b8:	4b8d      	ldr	r3, [pc, #564]	@ (8001af0 <main+0x628>)
 80018ba:	2201      	movs	r2, #1
 80018bc:	701a      	strb	r2, [r3, #0]
 80018be:	e002      	b.n	80018c6 <main+0x3fe>
        else alert_state = 0;
 80018c0:	4b8b      	ldr	r3, [pc, #556]	@ (8001af0 <main+0x628>)
 80018c2:	2200      	movs	r2, #0
 80018c4:	701a      	strb	r2, [r3, #0]

        if (tick_count - last_lcd_update >= 500 || last_alert_state != alert_state) {
 80018c6:	4b87      	ldr	r3, [pc, #540]	@ (8001ae4 <main+0x61c>)
 80018c8:	681a      	ldr	r2, [r3, #0]
 80018ca:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 80018ce:	1ad3      	subs	r3, r2, r3
 80018d0:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 80018d4:	d205      	bcs.n	80018e2 <main+0x41a>
 80018d6:	4b86      	ldr	r3, [pc, #536]	@ (8001af0 <main+0x628>)
 80018d8:	781b      	ldrb	r3, [r3, #0]
 80018da:	f897 208e 	ldrb.w	r2, [r7, #142]	@ 0x8e
 80018de:	429a      	cmp	r2, r3
 80018e0:	d034      	beq.n	800194c <main+0x484>
            if (ppm_int != last_ppm) {
 80018e2:	6f3a      	ldr	r2, [r7, #112]	@ 0x70
 80018e4:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 80018e8:	429a      	cmp	r2, r3
 80018ea:	d011      	beq.n	8001910 <main+0x448>
                LCD_SendCommand(0x80 + 4);
 80018ec:	2084      	movs	r0, #132	@ 0x84
 80018ee:	f7ff fb11 	bl	8000f14 <LCD_SendCommand>
                snprintf(lcd_buf, sizeof(lcd_buf), "%4lu", ppm_int);
 80018f2:	f107 0054 	add.w	r0, r7, #84	@ 0x54
 80018f6:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80018f8:	4a80      	ldr	r2, [pc, #512]	@ (8001afc <main+0x634>)
 80018fa:	2111      	movs	r1, #17
 80018fc:	f000 ff54 	bl	80027a8 <sniprintf>
                LCD_SendString(lcd_buf);
 8001900:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8001904:	4618      	mov	r0, r3
 8001906:	f7ff fbc7 	bl	8001098 <LCD_SendString>
                last_ppm = ppm_int;
 800190a:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800190c:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
            }
            if (last_alert_state != alert_state) {
 8001910:	4b77      	ldr	r3, [pc, #476]	@ (8001af0 <main+0x628>)
 8001912:	781b      	ldrb	r3, [r3, #0]
 8001914:	f897 208e 	ldrb.w	r2, [r7, #142]	@ 0x8e
 8001918:	429a      	cmp	r2, r3
 800191a:	d013      	beq.n	8001944 <main+0x47c>
                LCD_SendCommand(0xC0 + 13);
 800191c:	20cd      	movs	r0, #205	@ 0xcd
 800191e:	f7ff faf9 	bl	8000f14 <LCD_SendCommand>
                snprintf(lcd_buf, sizeof(lcd_buf), "%d", alert_state);
 8001922:	4b73      	ldr	r3, [pc, #460]	@ (8001af0 <main+0x628>)
 8001924:	781b      	ldrb	r3, [r3, #0]
 8001926:	f107 0054 	add.w	r0, r7, #84	@ 0x54
 800192a:	4a75      	ldr	r2, [pc, #468]	@ (8001b00 <main+0x638>)
 800192c:	2111      	movs	r1, #17
 800192e:	f000 ff3b 	bl	80027a8 <sniprintf>
                LCD_SendString(lcd_buf);
 8001932:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 8001936:	4618      	mov	r0, r3
 8001938:	f7ff fbae 	bl	8001098 <LCD_SendString>
                last_alert_state = alert_state;
 800193c:	4b6c      	ldr	r3, [pc, #432]	@ (8001af0 <main+0x628>)
 800193e:	781b      	ldrb	r3, [r3, #0]
 8001940:	f887 308e 	strb.w	r3, [r7, #142]	@ 0x8e
            }
            last_lcd_update = tick_count;
 8001944:	4b67      	ldr	r3, [pc, #412]	@ (8001ae4 <main+0x61c>)
 8001946:	681b      	ldr	r3, [r3, #0]
 8001948:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
        }

        switch (alert_state) {
 800194c:	4b68      	ldr	r3, [pc, #416]	@ (8001af0 <main+0x628>)
 800194e:	781b      	ldrb	r3, [r3, #0]
 8001950:	2b03      	cmp	r3, #3
 8001952:	f200 80bd 	bhi.w	8001ad0 <main+0x608>
 8001956:	a201      	add	r2, pc, #4	@ (adr r2, 800195c <main+0x494>)
 8001958:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800195c:	0800196d 	.word	0x0800196d
 8001960:	0800199d 	.word	0x0800199d
 8001964:	080019cd 	.word	0x080019cd
 8001968:	08001a0d 	.word	0x08001a0d
            case 0:
                LED_Set(0, 0, 1, 0);
 800196c:	2300      	movs	r3, #0
 800196e:	2201      	movs	r2, #1
 8001970:	2100      	movs	r1, #0
 8001972:	2000      	movs	r0, #0
 8001974:	f7ff fc5e 	bl	8001234 <LED_Set>
                Relay_Set(0);
 8001978:	2000      	movs	r0, #0
 800197a:	f7ff fd8f 	bl	800149c <Relay_Set>
                Buzzer_Set(0);
 800197e:	2000      	movs	r0, #0
 8001980:	f7ff fc8a 	bl	8001298 <Buzzer_Set>
                TIM2->CR1 &= ~TIM_CR1_CEN;
 8001984:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001988:	681b      	ldr	r3, [r3, #0]
 800198a:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800198e:	f023 0301 	bic.w	r3, r3, #1
 8001992:	6013      	str	r3, [r2, #0]
                last_ppm_for_freq = 0;
 8001994:	f04f 0300 	mov.w	r3, #0
 8001998:	67fb      	str	r3, [r7, #124]	@ 0x7c
                break;
 800199a:	e099      	b.n	8001ad0 <main+0x608>
            case 1:
                LED_Set(0, 1, 0, 0);
 800199c:	2300      	movs	r3, #0
 800199e:	2200      	movs	r2, #0
 80019a0:	2101      	movs	r1, #1
 80019a2:	2000      	movs	r0, #0
 80019a4:	f7ff fc46 	bl	8001234 <LED_Set>
                Relay_Set(0);
 80019a8:	2000      	movs	r0, #0
 80019aa:	f7ff fd77 	bl	800149c <Relay_Set>
                Buzzer_Set(0);
 80019ae:	2000      	movs	r0, #0
 80019b0:	f7ff fc72 	bl	8001298 <Buzzer_Set>
                TIM2->CR1 &= ~TIM_CR1_CEN;
 80019b4:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80019b8:	681b      	ldr	r3, [r3, #0]
 80019ba:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80019be:	f023 0301 	bic.w	r3, r3, #1
 80019c2:	6013      	str	r3, [r2, #0]
                last_ppm_for_freq = 0;
 80019c4:	f04f 0300 	mov.w	r3, #0
 80019c8:	67fb      	str	r3, [r7, #124]	@ 0x7c
                break;
 80019ca:	e081      	b.n	8001ad0 <main+0x608>
            case 2:
            	if (last_alert_state != 2) {
 80019cc:	f897 308e 	ldrb.w	r3, [r7, #142]	@ 0x8e
 80019d0:	2b02      	cmp	r3, #2
 80019d2:	d00c      	beq.n	80019ee <main+0x526>
            	    tim2_blink_state = 0;
 80019d4:	4b4b      	ldr	r3, [pc, #300]	@ (8001b04 <main+0x63c>)
 80019d6:	2200      	movs	r2, #0
 80019d8:	701a      	strb	r2, [r3, #0]
            	    relay_blink_state = 0;
 80019da:	4b4b      	ldr	r3, [pc, #300]	@ (8001b08 <main+0x640>)
 80019dc:	2200      	movs	r2, #0
 80019de:	701a      	strb	r2, [r3, #0]
            	    TIM2_Reconfig(4999); // 1 Hz
 80019e0:	f241 3087 	movw	r0, #4999	@ 0x1387
 80019e4:	f7ff fc6e 	bl	80012c4 <TIM2_Reconfig>
            	    last_ppm_for_freq = 0;
 80019e8:	f04f 0300 	mov.w	r3, #0
 80019ec:	67fb      	str	r3, [r7, #124]	@ 0x7c
            	}
            	LED_Set(tim2_blink_state, 0, 0, 0);
 80019ee:	4b45      	ldr	r3, [pc, #276]	@ (8001b04 <main+0x63c>)
 80019f0:	781b      	ldrb	r3, [r3, #0]
 80019f2:	b2d8      	uxtb	r0, r3
 80019f4:	2300      	movs	r3, #0
 80019f6:	2200      	movs	r2, #0
 80019f8:	2100      	movs	r1, #0
 80019fa:	f7ff fc1b 	bl	8001234 <LED_Set>
            	Buzzer_Set(tim2_blink_state);
 80019fe:	4b41      	ldr	r3, [pc, #260]	@ (8001b04 <main+0x63c>)
 8001a00:	781b      	ldrb	r3, [r3, #0]
 8001a02:	b2db      	uxtb	r3, r3
 8001a04:	4618      	mov	r0, r3
 8001a06:	f7ff fc47 	bl	8001298 <Buzzer_Set>
            	break;
 8001a0a:	e061      	b.n	8001ad0 <main+0x608>
            case 3:
            	if (last_alert_state != 3 || fabs(ppm - last_ppm_for_freq) > 50) {
 8001a0c:	f897 308e 	ldrb.w	r3, [r7, #142]	@ 0x8e
 8001a10:	2b03      	cmp	r3, #3
 8001a12:	d10e      	bne.n	8001a32 <main+0x56a>
 8001a14:	ed97 7a1d 	vldr	s14, [r7, #116]	@ 0x74
 8001a18:	edd7 7a1f 	vldr	s15, [r7, #124]	@ 0x7c
 8001a1c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001a20:	eef0 7ae7 	vabs.f32	s15, s15
 8001a24:	ed9f 7a39 	vldr	s14, [pc, #228]	@ 8001b0c <main+0x644>
 8001a28:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001a2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001a30:	dd3f      	ble.n	8001ab2 <main+0x5ea>
            	    tim2_blink_state = 0;
 8001a32:	4b34      	ldr	r3, [pc, #208]	@ (8001b04 <main+0x63c>)
 8001a34:	2200      	movs	r2, #0
 8001a36:	701a      	strb	r2, [r3, #0]
            	    relay_blink_state = 0;
 8001a38:	4b33      	ldr	r3, [pc, #204]	@ (8001b08 <main+0x640>)
 8001a3a:	2200      	movs	r2, #0
 8001a3c:	701a      	strb	r2, [r3, #0]
            	    float freq = (ppm >= 2000 ? 10.0f : 2.0f + (ppm - 800.0f) * 8.0f / 1200.0f);
 8001a3e:	edd7 7a1d 	vldr	s15, [r7, #116]	@ 0x74
 8001a42:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 8001b10 <main+0x648>
 8001a46:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001a4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001a4e:	db02      	blt.n	8001a56 <main+0x58e>
 8001a50:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 8001a54:	e011      	b.n	8001a7a <main+0x5b2>
 8001a56:	edd7 7a1d 	vldr	s15, [r7, #116]	@ 0x74
 8001a5a:	ed9f 7a24 	vldr	s14, [pc, #144]	@ 8001aec <main+0x624>
 8001a5e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8001a62:	eeb2 7a00 	vmov.f32	s14, #32	@ 0x41000000  8.0
 8001a66:	ee27 7a87 	vmul.f32	s14, s15, s14
 8001a6a:	eddf 6a2a 	vldr	s13, [pc, #168]	@ 8001b14 <main+0x64c>
 8001a6e:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001a72:	eeb0 7a00 	vmov.f32	s14, #0	@ 0x40000000  2.0
 8001a76:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001a7a:	edc7 7a1b 	vstr	s15, [r7, #108]	@ 0x6c
            	    uint32_t arr = (uint32_t)((42000000.0f / (2.0f * freq * 4200.0f)) - 1);
 8001a7e:	edd7 7a1b 	vldr	s15, [r7, #108]	@ 0x6c
 8001a82:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8001a86:	ed9f 7a24 	vldr	s14, [pc, #144]	@ 8001b18 <main+0x650>
 8001a8a:	ee27 7a87 	vmul.f32	s14, s15, s14
 8001a8e:	eddf 6a23 	vldr	s13, [pc, #140]	@ 8001b1c <main+0x654>
 8001a92:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001a96:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8001a9a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8001a9e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001aa2:	ee17 3a90 	vmov	r3, s15
 8001aa6:	66bb      	str	r3, [r7, #104]	@ 0x68
            	    TIM2_Reconfig(arr);
 8001aa8:	6eb8      	ldr	r0, [r7, #104]	@ 0x68
 8001aaa:	f7ff fc0b 	bl	80012c4 <TIM2_Reconfig>
            	    last_ppm_for_freq = ppm;
 8001aae:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8001ab0:	67fb      	str	r3, [r7, #124]	@ 0x7c
            	}
            	LED_Set(tim2_blink_state, 0, 0, 0);
 8001ab2:	4b14      	ldr	r3, [pc, #80]	@ (8001b04 <main+0x63c>)
 8001ab4:	781b      	ldrb	r3, [r3, #0]
 8001ab6:	b2d8      	uxtb	r0, r3
 8001ab8:	2300      	movs	r3, #0
 8001aba:	2200      	movs	r2, #0
 8001abc:	2100      	movs	r1, #0
 8001abe:	f7ff fbb9 	bl	8001234 <LED_Set>
            	Buzzer_Set(tim2_blink_state);
 8001ac2:	4b10      	ldr	r3, [pc, #64]	@ (8001b04 <main+0x63c>)
 8001ac4:	781b      	ldrb	r3, [r3, #0]
 8001ac6:	b2db      	uxtb	r3, r3
 8001ac8:	4618      	mov	r0, r3
 8001aca:	f7ff fbe5 	bl	8001298 <Buzzer_Set>
            	break;
 8001ace:	bf00      	nop
        }

        delay_ms(50);
 8001ad0:	2032      	movs	r0, #50	@ 0x32
 8001ad2:	f7ff f88f 	bl	8000bf4 <delay_ms>
    while (1) {
 8001ad6:	e573      	b.n	80015c0 <main+0xf8>
 8001ad8:	20000000 	.word	0x20000000
 8001adc:	08004a88 	.word	0x08004a88
 8001ae0:	08004a94 	.word	0x08004a94
 8001ae4:	200001f0 	.word	0x200001f0
 8001ae8:	08004b10 	.word	0x08004b10
 8001aec:	44480000 	.word	0x44480000
 8001af0:	200001ec 	.word	0x200001ec
 8001af4:	43fa0000 	.word	0x43fa0000
 8001af8:	43960000 	.word	0x43960000
 8001afc:	08004b18 	.word	0x08004b18
 8001b00:	08004b20 	.word	0x08004b20
 8001b04:	200001f4 	.word	0x200001f4
 8001b08:	200001f5 	.word	0x200001f5
 8001b0c:	42480000 	.word	0x42480000
 8001b10:	44fa0000 	.word	0x44fa0000
 8001b14:	44960000 	.word	0x44960000
 8001b18:	45834000 	.word	0x45834000
 8001b1c:	4c2037a0 	.word	0x4c2037a0

08001b20 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001b20:	b480      	push	{r7}
 8001b22:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001b24:	bf00      	nop
 8001b26:	e7fd      	b.n	8001b24 <NMI_Handler+0x4>

08001b28 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001b28:	b480      	push	{r7}
 8001b2a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001b2c:	bf00      	nop
 8001b2e:	e7fd      	b.n	8001b2c <HardFault_Handler+0x4>

08001b30 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001b30:	b480      	push	{r7}
 8001b32:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001b34:	bf00      	nop
 8001b36:	e7fd      	b.n	8001b34 <MemManage_Handler+0x4>

08001b38 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001b38:	b480      	push	{r7}
 8001b3a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001b3c:	bf00      	nop
 8001b3e:	e7fd      	b.n	8001b3c <BusFault_Handler+0x4>

08001b40 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001b40:	b480      	push	{r7}
 8001b42:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001b44:	bf00      	nop
 8001b46:	e7fd      	b.n	8001b44 <UsageFault_Handler+0x4>

08001b48 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001b48:	b480      	push	{r7}
 8001b4a:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001b4c:	bf00      	nop
 8001b4e:	46bd      	mov	sp, r7
 8001b50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b54:	4770      	bx	lr

08001b56 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001b56:	b480      	push	{r7}
 8001b58:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001b5a:	bf00      	nop
 8001b5c:	46bd      	mov	sp, r7
 8001b5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b62:	4770      	bx	lr

08001b64 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001b64:	b480      	push	{r7}
 8001b66:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001b68:	bf00      	nop
 8001b6a:	46bd      	mov	sp, r7
 8001b6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b70:	4770      	bx	lr

08001b72 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001b72:	b480      	push	{r7}
 8001b74:	af00      	add	r7, sp, #0
  return 1;
 8001b76:	2301      	movs	r3, #1
}
 8001b78:	4618      	mov	r0, r3
 8001b7a:	46bd      	mov	sp, r7
 8001b7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b80:	4770      	bx	lr

08001b82 <_kill>:

int _kill(int pid, int sig)
{
 8001b82:	b580      	push	{r7, lr}
 8001b84:	b082      	sub	sp, #8
 8001b86:	af00      	add	r7, sp, #0
 8001b88:	6078      	str	r0, [r7, #4]
 8001b8a:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8001b8c:	f000 fed6 	bl	800293c <__errno>
 8001b90:	4603      	mov	r3, r0
 8001b92:	2216      	movs	r2, #22
 8001b94:	601a      	str	r2, [r3, #0]
  return -1;
 8001b96:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001b9a:	4618      	mov	r0, r3
 8001b9c:	3708      	adds	r7, #8
 8001b9e:	46bd      	mov	sp, r7
 8001ba0:	bd80      	pop	{r7, pc}

08001ba2 <_exit>:

void _exit (int status)
{
 8001ba2:	b580      	push	{r7, lr}
 8001ba4:	b082      	sub	sp, #8
 8001ba6:	af00      	add	r7, sp, #0
 8001ba8:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8001baa:	f04f 31ff 	mov.w	r1, #4294967295
 8001bae:	6878      	ldr	r0, [r7, #4]
 8001bb0:	f7ff ffe7 	bl	8001b82 <_kill>
  while (1) {}    /* Make sure we hang here */
 8001bb4:	bf00      	nop
 8001bb6:	e7fd      	b.n	8001bb4 <_exit+0x12>

08001bb8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001bb8:	b580      	push	{r7, lr}
 8001bba:	b086      	sub	sp, #24
 8001bbc:	af00      	add	r7, sp, #0
 8001bbe:	60f8      	str	r0, [r7, #12]
 8001bc0:	60b9      	str	r1, [r7, #8]
 8001bc2:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001bc4:	2300      	movs	r3, #0
 8001bc6:	617b      	str	r3, [r7, #20]
 8001bc8:	e00a      	b.n	8001be0 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8001bca:	f3af 8000 	nop.w
 8001bce:	4601      	mov	r1, r0
 8001bd0:	68bb      	ldr	r3, [r7, #8]
 8001bd2:	1c5a      	adds	r2, r3, #1
 8001bd4:	60ba      	str	r2, [r7, #8]
 8001bd6:	b2ca      	uxtb	r2, r1
 8001bd8:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001bda:	697b      	ldr	r3, [r7, #20]
 8001bdc:	3301      	adds	r3, #1
 8001bde:	617b      	str	r3, [r7, #20]
 8001be0:	697a      	ldr	r2, [r7, #20]
 8001be2:	687b      	ldr	r3, [r7, #4]
 8001be4:	429a      	cmp	r2, r3
 8001be6:	dbf0      	blt.n	8001bca <_read+0x12>
  }

  return len;
 8001be8:	687b      	ldr	r3, [r7, #4]
}
 8001bea:	4618      	mov	r0, r3
 8001bec:	3718      	adds	r7, #24
 8001bee:	46bd      	mov	sp, r7
 8001bf0:	bd80      	pop	{r7, pc}

08001bf2 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001bf2:	b580      	push	{r7, lr}
 8001bf4:	b086      	sub	sp, #24
 8001bf6:	af00      	add	r7, sp, #0
 8001bf8:	60f8      	str	r0, [r7, #12]
 8001bfa:	60b9      	str	r1, [r7, #8]
 8001bfc:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001bfe:	2300      	movs	r3, #0
 8001c00:	617b      	str	r3, [r7, #20]
 8001c02:	e009      	b.n	8001c18 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8001c04:	68bb      	ldr	r3, [r7, #8]
 8001c06:	1c5a      	adds	r2, r3, #1
 8001c08:	60ba      	str	r2, [r7, #8]
 8001c0a:	781b      	ldrb	r3, [r3, #0]
 8001c0c:	4618      	mov	r0, r3
 8001c0e:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001c12:	697b      	ldr	r3, [r7, #20]
 8001c14:	3301      	adds	r3, #1
 8001c16:	617b      	str	r3, [r7, #20]
 8001c18:	697a      	ldr	r2, [r7, #20]
 8001c1a:	687b      	ldr	r3, [r7, #4]
 8001c1c:	429a      	cmp	r2, r3
 8001c1e:	dbf1      	blt.n	8001c04 <_write+0x12>
  }
  return len;
 8001c20:	687b      	ldr	r3, [r7, #4]
}
 8001c22:	4618      	mov	r0, r3
 8001c24:	3718      	adds	r7, #24
 8001c26:	46bd      	mov	sp, r7
 8001c28:	bd80      	pop	{r7, pc}

08001c2a <_close>:

int _close(int file)
{
 8001c2a:	b480      	push	{r7}
 8001c2c:	b083      	sub	sp, #12
 8001c2e:	af00      	add	r7, sp, #0
 8001c30:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8001c32:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001c36:	4618      	mov	r0, r3
 8001c38:	370c      	adds	r7, #12
 8001c3a:	46bd      	mov	sp, r7
 8001c3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c40:	4770      	bx	lr

08001c42 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001c42:	b480      	push	{r7}
 8001c44:	b083      	sub	sp, #12
 8001c46:	af00      	add	r7, sp, #0
 8001c48:	6078      	str	r0, [r7, #4]
 8001c4a:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001c4c:	683b      	ldr	r3, [r7, #0]
 8001c4e:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001c52:	605a      	str	r2, [r3, #4]
  return 0;
 8001c54:	2300      	movs	r3, #0
}
 8001c56:	4618      	mov	r0, r3
 8001c58:	370c      	adds	r7, #12
 8001c5a:	46bd      	mov	sp, r7
 8001c5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c60:	4770      	bx	lr

08001c62 <_isatty>:

int _isatty(int file)
{
 8001c62:	b480      	push	{r7}
 8001c64:	b083      	sub	sp, #12
 8001c66:	af00      	add	r7, sp, #0
 8001c68:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8001c6a:	2301      	movs	r3, #1
}
 8001c6c:	4618      	mov	r0, r3
 8001c6e:	370c      	adds	r7, #12
 8001c70:	46bd      	mov	sp, r7
 8001c72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c76:	4770      	bx	lr

08001c78 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001c78:	b480      	push	{r7}
 8001c7a:	b085      	sub	sp, #20
 8001c7c:	af00      	add	r7, sp, #0
 8001c7e:	60f8      	str	r0, [r7, #12]
 8001c80:	60b9      	str	r1, [r7, #8]
 8001c82:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8001c84:	2300      	movs	r3, #0
}
 8001c86:	4618      	mov	r0, r3
 8001c88:	3714      	adds	r7, #20
 8001c8a:	46bd      	mov	sp, r7
 8001c8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c90:	4770      	bx	lr
	...

08001c94 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001c94:	b580      	push	{r7, lr}
 8001c96:	b086      	sub	sp, #24
 8001c98:	af00      	add	r7, sp, #0
 8001c9a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001c9c:	4a14      	ldr	r2, [pc, #80]	@ (8001cf0 <_sbrk+0x5c>)
 8001c9e:	4b15      	ldr	r3, [pc, #84]	@ (8001cf4 <_sbrk+0x60>)
 8001ca0:	1ad3      	subs	r3, r2, r3
 8001ca2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001ca4:	697b      	ldr	r3, [r7, #20]
 8001ca6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001ca8:	4b13      	ldr	r3, [pc, #76]	@ (8001cf8 <_sbrk+0x64>)
 8001caa:	681b      	ldr	r3, [r3, #0]
 8001cac:	2b00      	cmp	r3, #0
 8001cae:	d102      	bne.n	8001cb6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001cb0:	4b11      	ldr	r3, [pc, #68]	@ (8001cf8 <_sbrk+0x64>)
 8001cb2:	4a12      	ldr	r2, [pc, #72]	@ (8001cfc <_sbrk+0x68>)
 8001cb4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001cb6:	4b10      	ldr	r3, [pc, #64]	@ (8001cf8 <_sbrk+0x64>)
 8001cb8:	681a      	ldr	r2, [r3, #0]
 8001cba:	687b      	ldr	r3, [r7, #4]
 8001cbc:	4413      	add	r3, r2
 8001cbe:	693a      	ldr	r2, [r7, #16]
 8001cc0:	429a      	cmp	r2, r3
 8001cc2:	d207      	bcs.n	8001cd4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001cc4:	f000 fe3a 	bl	800293c <__errno>
 8001cc8:	4603      	mov	r3, r0
 8001cca:	220c      	movs	r2, #12
 8001ccc:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001cce:	f04f 33ff 	mov.w	r3, #4294967295
 8001cd2:	e009      	b.n	8001ce8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001cd4:	4b08      	ldr	r3, [pc, #32]	@ (8001cf8 <_sbrk+0x64>)
 8001cd6:	681b      	ldr	r3, [r3, #0]
 8001cd8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001cda:	4b07      	ldr	r3, [pc, #28]	@ (8001cf8 <_sbrk+0x64>)
 8001cdc:	681a      	ldr	r2, [r3, #0]
 8001cde:	687b      	ldr	r3, [r7, #4]
 8001ce0:	4413      	add	r3, r2
 8001ce2:	4a05      	ldr	r2, [pc, #20]	@ (8001cf8 <_sbrk+0x64>)
 8001ce4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001ce6:	68fb      	ldr	r3, [r7, #12]
}
 8001ce8:	4618      	mov	r0, r3
 8001cea:	3718      	adds	r7, #24
 8001cec:	46bd      	mov	sp, r7
 8001cee:	bd80      	pop	{r7, pc}
 8001cf0:	20018000 	.word	0x20018000
 8001cf4:	00000400 	.word	0x00000400
 8001cf8:	200001fc 	.word	0x200001fc
 8001cfc:	20000350 	.word	0x20000350

08001d00 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001d00:	b480      	push	{r7}
 8001d02:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001d04:	4b06      	ldr	r3, [pc, #24]	@ (8001d20 <SystemInit+0x20>)
 8001d06:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001d0a:	4a05      	ldr	r2, [pc, #20]	@ (8001d20 <SystemInit+0x20>)
 8001d0c:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001d10:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001d14:	bf00      	nop
 8001d16:	46bd      	mov	sp, r7
 8001d18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d1c:	4770      	bx	lr
 8001d1e:	bf00      	nop
 8001d20:	e000ed00 	.word	0xe000ed00

08001d24 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 8001d24:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001d5c <LoopFillZerobss+0xe>

/* Call the clock system initialization function.*/
  bl  SystemInit  
 8001d28:	f7ff ffea 	bl	8001d00 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8001d2c:	480c      	ldr	r0, [pc, #48]	@ (8001d60 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8001d2e:	490d      	ldr	r1, [pc, #52]	@ (8001d64 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8001d30:	4a0d      	ldr	r2, [pc, #52]	@ (8001d68 <LoopFillZerobss+0x1a>)
  movs r3, #0
 8001d32:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001d34:	e002      	b.n	8001d3c <LoopCopyDataInit>

08001d36 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001d36:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001d38:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001d3a:	3304      	adds	r3, #4

08001d3c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001d3c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001d3e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001d40:	d3f9      	bcc.n	8001d36 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001d42:	4a0a      	ldr	r2, [pc, #40]	@ (8001d6c <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8001d44:	4c0a      	ldr	r4, [pc, #40]	@ (8001d70 <LoopFillZerobss+0x22>)
  movs r3, #0
 8001d46:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001d48:	e001      	b.n	8001d4e <LoopFillZerobss>

08001d4a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001d4a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001d4c:	3204      	adds	r2, #4

08001d4e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001d4e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001d50:	d3fb      	bcc.n	8001d4a <FillZerobss>
 
/* Call static constructors */
    bl __libc_init_array
 8001d52:	f000 fdf9 	bl	8002948 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8001d56:	f7ff fbb7 	bl	80014c8 <main>
  bx  lr    
 8001d5a:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 8001d5c:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8001d60:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001d64:	200001d0 	.word	0x200001d0
  ldr r2, =_sidata
 8001d68:	08004ea8 	.word	0x08004ea8
  ldr r2, =_sbss
 8001d6c:	200001d0 	.word	0x200001d0
  ldr r4, =_ebss
 8001d70:	2000034c 	.word	0x2000034c

08001d74 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001d74:	e7fe      	b.n	8001d74 <ADC_IRQHandler>

08001d76 <__cvt>:
 8001d76:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001d7a:	ec57 6b10 	vmov	r6, r7, d0
 8001d7e:	2f00      	cmp	r7, #0
 8001d80:	460c      	mov	r4, r1
 8001d82:	4619      	mov	r1, r3
 8001d84:	463b      	mov	r3, r7
 8001d86:	bfbb      	ittet	lt
 8001d88:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 8001d8c:	461f      	movlt	r7, r3
 8001d8e:	2300      	movge	r3, #0
 8001d90:	232d      	movlt	r3, #45	@ 0x2d
 8001d92:	700b      	strb	r3, [r1, #0]
 8001d94:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001d96:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8001d9a:	4691      	mov	r9, r2
 8001d9c:	f023 0820 	bic.w	r8, r3, #32
 8001da0:	bfbc      	itt	lt
 8001da2:	4632      	movlt	r2, r6
 8001da4:	4616      	movlt	r6, r2
 8001da6:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001daa:	d005      	beq.n	8001db8 <__cvt+0x42>
 8001dac:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8001db0:	d100      	bne.n	8001db4 <__cvt+0x3e>
 8001db2:	3401      	adds	r4, #1
 8001db4:	2102      	movs	r1, #2
 8001db6:	e000      	b.n	8001dba <__cvt+0x44>
 8001db8:	2103      	movs	r1, #3
 8001dba:	ab03      	add	r3, sp, #12
 8001dbc:	9301      	str	r3, [sp, #4]
 8001dbe:	ab02      	add	r3, sp, #8
 8001dc0:	9300      	str	r3, [sp, #0]
 8001dc2:	ec47 6b10 	vmov	d0, r6, r7
 8001dc6:	4653      	mov	r3, sl
 8001dc8:	4622      	mov	r2, r4
 8001dca:	f000 fe6d 	bl	8002aa8 <_dtoa_r>
 8001dce:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8001dd2:	4605      	mov	r5, r0
 8001dd4:	d119      	bne.n	8001e0a <__cvt+0x94>
 8001dd6:	f019 0f01 	tst.w	r9, #1
 8001dda:	d00e      	beq.n	8001dfa <__cvt+0x84>
 8001ddc:	eb00 0904 	add.w	r9, r0, r4
 8001de0:	2200      	movs	r2, #0
 8001de2:	2300      	movs	r3, #0
 8001de4:	4630      	mov	r0, r6
 8001de6:	4639      	mov	r1, r7
 8001de8:	f7fe fe76 	bl	8000ad8 <__aeabi_dcmpeq>
 8001dec:	b108      	cbz	r0, 8001df2 <__cvt+0x7c>
 8001dee:	f8cd 900c 	str.w	r9, [sp, #12]
 8001df2:	2230      	movs	r2, #48	@ 0x30
 8001df4:	9b03      	ldr	r3, [sp, #12]
 8001df6:	454b      	cmp	r3, r9
 8001df8:	d31e      	bcc.n	8001e38 <__cvt+0xc2>
 8001dfa:	9b03      	ldr	r3, [sp, #12]
 8001dfc:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8001dfe:	1b5b      	subs	r3, r3, r5
 8001e00:	4628      	mov	r0, r5
 8001e02:	6013      	str	r3, [r2, #0]
 8001e04:	b004      	add	sp, #16
 8001e06:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001e0a:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001e0e:	eb00 0904 	add.w	r9, r0, r4
 8001e12:	d1e5      	bne.n	8001de0 <__cvt+0x6a>
 8001e14:	7803      	ldrb	r3, [r0, #0]
 8001e16:	2b30      	cmp	r3, #48	@ 0x30
 8001e18:	d10a      	bne.n	8001e30 <__cvt+0xba>
 8001e1a:	2200      	movs	r2, #0
 8001e1c:	2300      	movs	r3, #0
 8001e1e:	4630      	mov	r0, r6
 8001e20:	4639      	mov	r1, r7
 8001e22:	f7fe fe59 	bl	8000ad8 <__aeabi_dcmpeq>
 8001e26:	b918      	cbnz	r0, 8001e30 <__cvt+0xba>
 8001e28:	f1c4 0401 	rsb	r4, r4, #1
 8001e2c:	f8ca 4000 	str.w	r4, [sl]
 8001e30:	f8da 3000 	ldr.w	r3, [sl]
 8001e34:	4499      	add	r9, r3
 8001e36:	e7d3      	b.n	8001de0 <__cvt+0x6a>
 8001e38:	1c59      	adds	r1, r3, #1
 8001e3a:	9103      	str	r1, [sp, #12]
 8001e3c:	701a      	strb	r2, [r3, #0]
 8001e3e:	e7d9      	b.n	8001df4 <__cvt+0x7e>

08001e40 <__exponent>:
 8001e40:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001e42:	2900      	cmp	r1, #0
 8001e44:	bfba      	itte	lt
 8001e46:	4249      	neglt	r1, r1
 8001e48:	232d      	movlt	r3, #45	@ 0x2d
 8001e4a:	232b      	movge	r3, #43	@ 0x2b
 8001e4c:	2909      	cmp	r1, #9
 8001e4e:	7002      	strb	r2, [r0, #0]
 8001e50:	7043      	strb	r3, [r0, #1]
 8001e52:	dd29      	ble.n	8001ea8 <__exponent+0x68>
 8001e54:	f10d 0307 	add.w	r3, sp, #7
 8001e58:	461d      	mov	r5, r3
 8001e5a:	270a      	movs	r7, #10
 8001e5c:	461a      	mov	r2, r3
 8001e5e:	fbb1 f6f7 	udiv	r6, r1, r7
 8001e62:	fb07 1416 	mls	r4, r7, r6, r1
 8001e66:	3430      	adds	r4, #48	@ 0x30
 8001e68:	f802 4c01 	strb.w	r4, [r2, #-1]
 8001e6c:	460c      	mov	r4, r1
 8001e6e:	2c63      	cmp	r4, #99	@ 0x63
 8001e70:	f103 33ff 	add.w	r3, r3, #4294967295
 8001e74:	4631      	mov	r1, r6
 8001e76:	dcf1      	bgt.n	8001e5c <__exponent+0x1c>
 8001e78:	3130      	adds	r1, #48	@ 0x30
 8001e7a:	1e94      	subs	r4, r2, #2
 8001e7c:	f803 1c01 	strb.w	r1, [r3, #-1]
 8001e80:	1c41      	adds	r1, r0, #1
 8001e82:	4623      	mov	r3, r4
 8001e84:	42ab      	cmp	r3, r5
 8001e86:	d30a      	bcc.n	8001e9e <__exponent+0x5e>
 8001e88:	f10d 0309 	add.w	r3, sp, #9
 8001e8c:	1a9b      	subs	r3, r3, r2
 8001e8e:	42ac      	cmp	r4, r5
 8001e90:	bf88      	it	hi
 8001e92:	2300      	movhi	r3, #0
 8001e94:	3302      	adds	r3, #2
 8001e96:	4403      	add	r3, r0
 8001e98:	1a18      	subs	r0, r3, r0
 8001e9a:	b003      	add	sp, #12
 8001e9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e9e:	f813 6b01 	ldrb.w	r6, [r3], #1
 8001ea2:	f801 6f01 	strb.w	r6, [r1, #1]!
 8001ea6:	e7ed      	b.n	8001e84 <__exponent+0x44>
 8001ea8:	2330      	movs	r3, #48	@ 0x30
 8001eaa:	3130      	adds	r1, #48	@ 0x30
 8001eac:	7083      	strb	r3, [r0, #2]
 8001eae:	70c1      	strb	r1, [r0, #3]
 8001eb0:	1d03      	adds	r3, r0, #4
 8001eb2:	e7f1      	b.n	8001e98 <__exponent+0x58>

08001eb4 <_printf_float>:
 8001eb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001eb8:	b08d      	sub	sp, #52	@ 0x34
 8001eba:	460c      	mov	r4, r1
 8001ebc:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8001ec0:	4616      	mov	r6, r2
 8001ec2:	461f      	mov	r7, r3
 8001ec4:	4605      	mov	r5, r0
 8001ec6:	f000 fcef 	bl	80028a8 <_localeconv_r>
 8001eca:	6803      	ldr	r3, [r0, #0]
 8001ecc:	9304      	str	r3, [sp, #16]
 8001ece:	4618      	mov	r0, r3
 8001ed0:	f7fe f9d6 	bl	8000280 <strlen>
 8001ed4:	2300      	movs	r3, #0
 8001ed6:	930a      	str	r3, [sp, #40]	@ 0x28
 8001ed8:	f8d8 3000 	ldr.w	r3, [r8]
 8001edc:	9005      	str	r0, [sp, #20]
 8001ede:	3307      	adds	r3, #7
 8001ee0:	f023 0307 	bic.w	r3, r3, #7
 8001ee4:	f103 0208 	add.w	r2, r3, #8
 8001ee8:	f894 a018 	ldrb.w	sl, [r4, #24]
 8001eec:	f8d4 b000 	ldr.w	fp, [r4]
 8001ef0:	f8c8 2000 	str.w	r2, [r8]
 8001ef4:	e9d3 8900 	ldrd	r8, r9, [r3]
 8001ef8:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8001efc:	9307      	str	r3, [sp, #28]
 8001efe:	f8cd 8018 	str.w	r8, [sp, #24]
 8001f02:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8001f06:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001f0a:	4b9c      	ldr	r3, [pc, #624]	@ (800217c <_printf_float+0x2c8>)
 8001f0c:	f04f 32ff 	mov.w	r2, #4294967295
 8001f10:	f7fe fe14 	bl	8000b3c <__aeabi_dcmpun>
 8001f14:	bb70      	cbnz	r0, 8001f74 <_printf_float+0xc0>
 8001f16:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001f1a:	4b98      	ldr	r3, [pc, #608]	@ (800217c <_printf_float+0x2c8>)
 8001f1c:	f04f 32ff 	mov.w	r2, #4294967295
 8001f20:	f7fe fdee 	bl	8000b00 <__aeabi_dcmple>
 8001f24:	bb30      	cbnz	r0, 8001f74 <_printf_float+0xc0>
 8001f26:	2200      	movs	r2, #0
 8001f28:	2300      	movs	r3, #0
 8001f2a:	4640      	mov	r0, r8
 8001f2c:	4649      	mov	r1, r9
 8001f2e:	f7fe fddd 	bl	8000aec <__aeabi_dcmplt>
 8001f32:	b110      	cbz	r0, 8001f3a <_printf_float+0x86>
 8001f34:	232d      	movs	r3, #45	@ 0x2d
 8001f36:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001f3a:	4a91      	ldr	r2, [pc, #580]	@ (8002180 <_printf_float+0x2cc>)
 8001f3c:	4b91      	ldr	r3, [pc, #580]	@ (8002184 <_printf_float+0x2d0>)
 8001f3e:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8001f42:	bf94      	ite	ls
 8001f44:	4690      	movls	r8, r2
 8001f46:	4698      	movhi	r8, r3
 8001f48:	2303      	movs	r3, #3
 8001f4a:	6123      	str	r3, [r4, #16]
 8001f4c:	f02b 0304 	bic.w	r3, fp, #4
 8001f50:	6023      	str	r3, [r4, #0]
 8001f52:	f04f 0900 	mov.w	r9, #0
 8001f56:	9700      	str	r7, [sp, #0]
 8001f58:	4633      	mov	r3, r6
 8001f5a:	aa0b      	add	r2, sp, #44	@ 0x2c
 8001f5c:	4621      	mov	r1, r4
 8001f5e:	4628      	mov	r0, r5
 8001f60:	f000 f9d2 	bl	8002308 <_printf_common>
 8001f64:	3001      	adds	r0, #1
 8001f66:	f040 808d 	bne.w	8002084 <_printf_float+0x1d0>
 8001f6a:	f04f 30ff 	mov.w	r0, #4294967295
 8001f6e:	b00d      	add	sp, #52	@ 0x34
 8001f70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001f74:	4642      	mov	r2, r8
 8001f76:	464b      	mov	r3, r9
 8001f78:	4640      	mov	r0, r8
 8001f7a:	4649      	mov	r1, r9
 8001f7c:	f7fe fdde 	bl	8000b3c <__aeabi_dcmpun>
 8001f80:	b140      	cbz	r0, 8001f94 <_printf_float+0xe0>
 8001f82:	464b      	mov	r3, r9
 8001f84:	2b00      	cmp	r3, #0
 8001f86:	bfbc      	itt	lt
 8001f88:	232d      	movlt	r3, #45	@ 0x2d
 8001f8a:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8001f8e:	4a7e      	ldr	r2, [pc, #504]	@ (8002188 <_printf_float+0x2d4>)
 8001f90:	4b7e      	ldr	r3, [pc, #504]	@ (800218c <_printf_float+0x2d8>)
 8001f92:	e7d4      	b.n	8001f3e <_printf_float+0x8a>
 8001f94:	6863      	ldr	r3, [r4, #4]
 8001f96:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 8001f9a:	9206      	str	r2, [sp, #24]
 8001f9c:	1c5a      	adds	r2, r3, #1
 8001f9e:	d13b      	bne.n	8002018 <_printf_float+0x164>
 8001fa0:	2306      	movs	r3, #6
 8001fa2:	6063      	str	r3, [r4, #4]
 8001fa4:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 8001fa8:	2300      	movs	r3, #0
 8001faa:	6022      	str	r2, [r4, #0]
 8001fac:	9303      	str	r3, [sp, #12]
 8001fae:	ab0a      	add	r3, sp, #40	@ 0x28
 8001fb0:	e9cd a301 	strd	sl, r3, [sp, #4]
 8001fb4:	ab09      	add	r3, sp, #36	@ 0x24
 8001fb6:	9300      	str	r3, [sp, #0]
 8001fb8:	6861      	ldr	r1, [r4, #4]
 8001fba:	ec49 8b10 	vmov	d0, r8, r9
 8001fbe:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 8001fc2:	4628      	mov	r0, r5
 8001fc4:	f7ff fed7 	bl	8001d76 <__cvt>
 8001fc8:	9b06      	ldr	r3, [sp, #24]
 8001fca:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8001fcc:	2b47      	cmp	r3, #71	@ 0x47
 8001fce:	4680      	mov	r8, r0
 8001fd0:	d129      	bne.n	8002026 <_printf_float+0x172>
 8001fd2:	1cc8      	adds	r0, r1, #3
 8001fd4:	db02      	blt.n	8001fdc <_printf_float+0x128>
 8001fd6:	6863      	ldr	r3, [r4, #4]
 8001fd8:	4299      	cmp	r1, r3
 8001fda:	dd41      	ble.n	8002060 <_printf_float+0x1ac>
 8001fdc:	f1aa 0a02 	sub.w	sl, sl, #2
 8001fe0:	fa5f fa8a 	uxtb.w	sl, sl
 8001fe4:	3901      	subs	r1, #1
 8001fe6:	4652      	mov	r2, sl
 8001fe8:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8001fec:	9109      	str	r1, [sp, #36]	@ 0x24
 8001fee:	f7ff ff27 	bl	8001e40 <__exponent>
 8001ff2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8001ff4:	1813      	adds	r3, r2, r0
 8001ff6:	2a01      	cmp	r2, #1
 8001ff8:	4681      	mov	r9, r0
 8001ffa:	6123      	str	r3, [r4, #16]
 8001ffc:	dc02      	bgt.n	8002004 <_printf_float+0x150>
 8001ffe:	6822      	ldr	r2, [r4, #0]
 8002000:	07d2      	lsls	r2, r2, #31
 8002002:	d501      	bpl.n	8002008 <_printf_float+0x154>
 8002004:	3301      	adds	r3, #1
 8002006:	6123      	str	r3, [r4, #16]
 8002008:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 800200c:	2b00      	cmp	r3, #0
 800200e:	d0a2      	beq.n	8001f56 <_printf_float+0xa2>
 8002010:	232d      	movs	r3, #45	@ 0x2d
 8002012:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002016:	e79e      	b.n	8001f56 <_printf_float+0xa2>
 8002018:	9a06      	ldr	r2, [sp, #24]
 800201a:	2a47      	cmp	r2, #71	@ 0x47
 800201c:	d1c2      	bne.n	8001fa4 <_printf_float+0xf0>
 800201e:	2b00      	cmp	r3, #0
 8002020:	d1c0      	bne.n	8001fa4 <_printf_float+0xf0>
 8002022:	2301      	movs	r3, #1
 8002024:	e7bd      	b.n	8001fa2 <_printf_float+0xee>
 8002026:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800202a:	d9db      	bls.n	8001fe4 <_printf_float+0x130>
 800202c:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8002030:	d118      	bne.n	8002064 <_printf_float+0x1b0>
 8002032:	2900      	cmp	r1, #0
 8002034:	6863      	ldr	r3, [r4, #4]
 8002036:	dd0b      	ble.n	8002050 <_printf_float+0x19c>
 8002038:	6121      	str	r1, [r4, #16]
 800203a:	b913      	cbnz	r3, 8002042 <_printf_float+0x18e>
 800203c:	6822      	ldr	r2, [r4, #0]
 800203e:	07d0      	lsls	r0, r2, #31
 8002040:	d502      	bpl.n	8002048 <_printf_float+0x194>
 8002042:	3301      	adds	r3, #1
 8002044:	440b      	add	r3, r1
 8002046:	6123      	str	r3, [r4, #16]
 8002048:	65a1      	str	r1, [r4, #88]	@ 0x58
 800204a:	f04f 0900 	mov.w	r9, #0
 800204e:	e7db      	b.n	8002008 <_printf_float+0x154>
 8002050:	b913      	cbnz	r3, 8002058 <_printf_float+0x1a4>
 8002052:	6822      	ldr	r2, [r4, #0]
 8002054:	07d2      	lsls	r2, r2, #31
 8002056:	d501      	bpl.n	800205c <_printf_float+0x1a8>
 8002058:	3302      	adds	r3, #2
 800205a:	e7f4      	b.n	8002046 <_printf_float+0x192>
 800205c:	2301      	movs	r3, #1
 800205e:	e7f2      	b.n	8002046 <_printf_float+0x192>
 8002060:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8002064:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002066:	4299      	cmp	r1, r3
 8002068:	db05      	blt.n	8002076 <_printf_float+0x1c2>
 800206a:	6823      	ldr	r3, [r4, #0]
 800206c:	6121      	str	r1, [r4, #16]
 800206e:	07d8      	lsls	r0, r3, #31
 8002070:	d5ea      	bpl.n	8002048 <_printf_float+0x194>
 8002072:	1c4b      	adds	r3, r1, #1
 8002074:	e7e7      	b.n	8002046 <_printf_float+0x192>
 8002076:	2900      	cmp	r1, #0
 8002078:	bfd4      	ite	le
 800207a:	f1c1 0202 	rsble	r2, r1, #2
 800207e:	2201      	movgt	r2, #1
 8002080:	4413      	add	r3, r2
 8002082:	e7e0      	b.n	8002046 <_printf_float+0x192>
 8002084:	6823      	ldr	r3, [r4, #0]
 8002086:	055a      	lsls	r2, r3, #21
 8002088:	d407      	bmi.n	800209a <_printf_float+0x1e6>
 800208a:	6923      	ldr	r3, [r4, #16]
 800208c:	4642      	mov	r2, r8
 800208e:	4631      	mov	r1, r6
 8002090:	4628      	mov	r0, r5
 8002092:	47b8      	blx	r7
 8002094:	3001      	adds	r0, #1
 8002096:	d12b      	bne.n	80020f0 <_printf_float+0x23c>
 8002098:	e767      	b.n	8001f6a <_printf_float+0xb6>
 800209a:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800209e:	f240 80dd 	bls.w	800225c <_printf_float+0x3a8>
 80020a2:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 80020a6:	2200      	movs	r2, #0
 80020a8:	2300      	movs	r3, #0
 80020aa:	f7fe fd15 	bl	8000ad8 <__aeabi_dcmpeq>
 80020ae:	2800      	cmp	r0, #0
 80020b0:	d033      	beq.n	800211a <_printf_float+0x266>
 80020b2:	4a37      	ldr	r2, [pc, #220]	@ (8002190 <_printf_float+0x2dc>)
 80020b4:	2301      	movs	r3, #1
 80020b6:	4631      	mov	r1, r6
 80020b8:	4628      	mov	r0, r5
 80020ba:	47b8      	blx	r7
 80020bc:	3001      	adds	r0, #1
 80020be:	f43f af54 	beq.w	8001f6a <_printf_float+0xb6>
 80020c2:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 80020c6:	4543      	cmp	r3, r8
 80020c8:	db02      	blt.n	80020d0 <_printf_float+0x21c>
 80020ca:	6823      	ldr	r3, [r4, #0]
 80020cc:	07d8      	lsls	r0, r3, #31
 80020ce:	d50f      	bpl.n	80020f0 <_printf_float+0x23c>
 80020d0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80020d4:	4631      	mov	r1, r6
 80020d6:	4628      	mov	r0, r5
 80020d8:	47b8      	blx	r7
 80020da:	3001      	adds	r0, #1
 80020dc:	f43f af45 	beq.w	8001f6a <_printf_float+0xb6>
 80020e0:	f04f 0900 	mov.w	r9, #0
 80020e4:	f108 38ff 	add.w	r8, r8, #4294967295
 80020e8:	f104 0a1a 	add.w	sl, r4, #26
 80020ec:	45c8      	cmp	r8, r9
 80020ee:	dc09      	bgt.n	8002104 <_printf_float+0x250>
 80020f0:	6823      	ldr	r3, [r4, #0]
 80020f2:	079b      	lsls	r3, r3, #30
 80020f4:	f100 8103 	bmi.w	80022fe <_printf_float+0x44a>
 80020f8:	68e0      	ldr	r0, [r4, #12]
 80020fa:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80020fc:	4298      	cmp	r0, r3
 80020fe:	bfb8      	it	lt
 8002100:	4618      	movlt	r0, r3
 8002102:	e734      	b.n	8001f6e <_printf_float+0xba>
 8002104:	2301      	movs	r3, #1
 8002106:	4652      	mov	r2, sl
 8002108:	4631      	mov	r1, r6
 800210a:	4628      	mov	r0, r5
 800210c:	47b8      	blx	r7
 800210e:	3001      	adds	r0, #1
 8002110:	f43f af2b 	beq.w	8001f6a <_printf_float+0xb6>
 8002114:	f109 0901 	add.w	r9, r9, #1
 8002118:	e7e8      	b.n	80020ec <_printf_float+0x238>
 800211a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800211c:	2b00      	cmp	r3, #0
 800211e:	dc39      	bgt.n	8002194 <_printf_float+0x2e0>
 8002120:	4a1b      	ldr	r2, [pc, #108]	@ (8002190 <_printf_float+0x2dc>)
 8002122:	2301      	movs	r3, #1
 8002124:	4631      	mov	r1, r6
 8002126:	4628      	mov	r0, r5
 8002128:	47b8      	blx	r7
 800212a:	3001      	adds	r0, #1
 800212c:	f43f af1d 	beq.w	8001f6a <_printf_float+0xb6>
 8002130:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 8002134:	ea59 0303 	orrs.w	r3, r9, r3
 8002138:	d102      	bne.n	8002140 <_printf_float+0x28c>
 800213a:	6823      	ldr	r3, [r4, #0]
 800213c:	07d9      	lsls	r1, r3, #31
 800213e:	d5d7      	bpl.n	80020f0 <_printf_float+0x23c>
 8002140:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002144:	4631      	mov	r1, r6
 8002146:	4628      	mov	r0, r5
 8002148:	47b8      	blx	r7
 800214a:	3001      	adds	r0, #1
 800214c:	f43f af0d 	beq.w	8001f6a <_printf_float+0xb6>
 8002150:	f04f 0a00 	mov.w	sl, #0
 8002154:	f104 0b1a 	add.w	fp, r4, #26
 8002158:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800215a:	425b      	negs	r3, r3
 800215c:	4553      	cmp	r3, sl
 800215e:	dc01      	bgt.n	8002164 <_printf_float+0x2b0>
 8002160:	464b      	mov	r3, r9
 8002162:	e793      	b.n	800208c <_printf_float+0x1d8>
 8002164:	2301      	movs	r3, #1
 8002166:	465a      	mov	r2, fp
 8002168:	4631      	mov	r1, r6
 800216a:	4628      	mov	r0, r5
 800216c:	47b8      	blx	r7
 800216e:	3001      	adds	r0, #1
 8002170:	f43f aefb 	beq.w	8001f6a <_printf_float+0xb6>
 8002174:	f10a 0a01 	add.w	sl, sl, #1
 8002178:	e7ee      	b.n	8002158 <_printf_float+0x2a4>
 800217a:	bf00      	nop
 800217c:	7fefffff 	.word	0x7fefffff
 8002180:	08004b23 	.word	0x08004b23
 8002184:	08004b27 	.word	0x08004b27
 8002188:	08004b2b 	.word	0x08004b2b
 800218c:	08004b2f 	.word	0x08004b2f
 8002190:	08004b33 	.word	0x08004b33
 8002194:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8002196:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 800219a:	4553      	cmp	r3, sl
 800219c:	bfa8      	it	ge
 800219e:	4653      	movge	r3, sl
 80021a0:	2b00      	cmp	r3, #0
 80021a2:	4699      	mov	r9, r3
 80021a4:	dc36      	bgt.n	8002214 <_printf_float+0x360>
 80021a6:	f04f 0b00 	mov.w	fp, #0
 80021aa:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80021ae:	f104 021a 	add.w	r2, r4, #26
 80021b2:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80021b4:	9306      	str	r3, [sp, #24]
 80021b6:	eba3 0309 	sub.w	r3, r3, r9
 80021ba:	455b      	cmp	r3, fp
 80021bc:	dc31      	bgt.n	8002222 <_printf_float+0x36e>
 80021be:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80021c0:	459a      	cmp	sl, r3
 80021c2:	dc3a      	bgt.n	800223a <_printf_float+0x386>
 80021c4:	6823      	ldr	r3, [r4, #0]
 80021c6:	07da      	lsls	r2, r3, #31
 80021c8:	d437      	bmi.n	800223a <_printf_float+0x386>
 80021ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80021cc:	ebaa 0903 	sub.w	r9, sl, r3
 80021d0:	9b06      	ldr	r3, [sp, #24]
 80021d2:	ebaa 0303 	sub.w	r3, sl, r3
 80021d6:	4599      	cmp	r9, r3
 80021d8:	bfa8      	it	ge
 80021da:	4699      	movge	r9, r3
 80021dc:	f1b9 0f00 	cmp.w	r9, #0
 80021e0:	dc33      	bgt.n	800224a <_printf_float+0x396>
 80021e2:	f04f 0800 	mov.w	r8, #0
 80021e6:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80021ea:	f104 0b1a 	add.w	fp, r4, #26
 80021ee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80021f0:	ebaa 0303 	sub.w	r3, sl, r3
 80021f4:	eba3 0309 	sub.w	r3, r3, r9
 80021f8:	4543      	cmp	r3, r8
 80021fa:	f77f af79 	ble.w	80020f0 <_printf_float+0x23c>
 80021fe:	2301      	movs	r3, #1
 8002200:	465a      	mov	r2, fp
 8002202:	4631      	mov	r1, r6
 8002204:	4628      	mov	r0, r5
 8002206:	47b8      	blx	r7
 8002208:	3001      	adds	r0, #1
 800220a:	f43f aeae 	beq.w	8001f6a <_printf_float+0xb6>
 800220e:	f108 0801 	add.w	r8, r8, #1
 8002212:	e7ec      	b.n	80021ee <_printf_float+0x33a>
 8002214:	4642      	mov	r2, r8
 8002216:	4631      	mov	r1, r6
 8002218:	4628      	mov	r0, r5
 800221a:	47b8      	blx	r7
 800221c:	3001      	adds	r0, #1
 800221e:	d1c2      	bne.n	80021a6 <_printf_float+0x2f2>
 8002220:	e6a3      	b.n	8001f6a <_printf_float+0xb6>
 8002222:	2301      	movs	r3, #1
 8002224:	4631      	mov	r1, r6
 8002226:	4628      	mov	r0, r5
 8002228:	9206      	str	r2, [sp, #24]
 800222a:	47b8      	blx	r7
 800222c:	3001      	adds	r0, #1
 800222e:	f43f ae9c 	beq.w	8001f6a <_printf_float+0xb6>
 8002232:	9a06      	ldr	r2, [sp, #24]
 8002234:	f10b 0b01 	add.w	fp, fp, #1
 8002238:	e7bb      	b.n	80021b2 <_printf_float+0x2fe>
 800223a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800223e:	4631      	mov	r1, r6
 8002240:	4628      	mov	r0, r5
 8002242:	47b8      	blx	r7
 8002244:	3001      	adds	r0, #1
 8002246:	d1c0      	bne.n	80021ca <_printf_float+0x316>
 8002248:	e68f      	b.n	8001f6a <_printf_float+0xb6>
 800224a:	9a06      	ldr	r2, [sp, #24]
 800224c:	464b      	mov	r3, r9
 800224e:	4442      	add	r2, r8
 8002250:	4631      	mov	r1, r6
 8002252:	4628      	mov	r0, r5
 8002254:	47b8      	blx	r7
 8002256:	3001      	adds	r0, #1
 8002258:	d1c3      	bne.n	80021e2 <_printf_float+0x32e>
 800225a:	e686      	b.n	8001f6a <_printf_float+0xb6>
 800225c:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8002260:	f1ba 0f01 	cmp.w	sl, #1
 8002264:	dc01      	bgt.n	800226a <_printf_float+0x3b6>
 8002266:	07db      	lsls	r3, r3, #31
 8002268:	d536      	bpl.n	80022d8 <_printf_float+0x424>
 800226a:	2301      	movs	r3, #1
 800226c:	4642      	mov	r2, r8
 800226e:	4631      	mov	r1, r6
 8002270:	4628      	mov	r0, r5
 8002272:	47b8      	blx	r7
 8002274:	3001      	adds	r0, #1
 8002276:	f43f ae78 	beq.w	8001f6a <_printf_float+0xb6>
 800227a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800227e:	4631      	mov	r1, r6
 8002280:	4628      	mov	r0, r5
 8002282:	47b8      	blx	r7
 8002284:	3001      	adds	r0, #1
 8002286:	f43f ae70 	beq.w	8001f6a <_printf_float+0xb6>
 800228a:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800228e:	2200      	movs	r2, #0
 8002290:	2300      	movs	r3, #0
 8002292:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002296:	f7fe fc1f 	bl	8000ad8 <__aeabi_dcmpeq>
 800229a:	b9c0      	cbnz	r0, 80022ce <_printf_float+0x41a>
 800229c:	4653      	mov	r3, sl
 800229e:	f108 0201 	add.w	r2, r8, #1
 80022a2:	4631      	mov	r1, r6
 80022a4:	4628      	mov	r0, r5
 80022a6:	47b8      	blx	r7
 80022a8:	3001      	adds	r0, #1
 80022aa:	d10c      	bne.n	80022c6 <_printf_float+0x412>
 80022ac:	e65d      	b.n	8001f6a <_printf_float+0xb6>
 80022ae:	2301      	movs	r3, #1
 80022b0:	465a      	mov	r2, fp
 80022b2:	4631      	mov	r1, r6
 80022b4:	4628      	mov	r0, r5
 80022b6:	47b8      	blx	r7
 80022b8:	3001      	adds	r0, #1
 80022ba:	f43f ae56 	beq.w	8001f6a <_printf_float+0xb6>
 80022be:	f108 0801 	add.w	r8, r8, #1
 80022c2:	45d0      	cmp	r8, sl
 80022c4:	dbf3      	blt.n	80022ae <_printf_float+0x3fa>
 80022c6:	464b      	mov	r3, r9
 80022c8:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 80022cc:	e6df      	b.n	800208e <_printf_float+0x1da>
 80022ce:	f04f 0800 	mov.w	r8, #0
 80022d2:	f104 0b1a 	add.w	fp, r4, #26
 80022d6:	e7f4      	b.n	80022c2 <_printf_float+0x40e>
 80022d8:	2301      	movs	r3, #1
 80022da:	4642      	mov	r2, r8
 80022dc:	e7e1      	b.n	80022a2 <_printf_float+0x3ee>
 80022de:	2301      	movs	r3, #1
 80022e0:	464a      	mov	r2, r9
 80022e2:	4631      	mov	r1, r6
 80022e4:	4628      	mov	r0, r5
 80022e6:	47b8      	blx	r7
 80022e8:	3001      	adds	r0, #1
 80022ea:	f43f ae3e 	beq.w	8001f6a <_printf_float+0xb6>
 80022ee:	f108 0801 	add.w	r8, r8, #1
 80022f2:	68e3      	ldr	r3, [r4, #12]
 80022f4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80022f6:	1a5b      	subs	r3, r3, r1
 80022f8:	4543      	cmp	r3, r8
 80022fa:	dcf0      	bgt.n	80022de <_printf_float+0x42a>
 80022fc:	e6fc      	b.n	80020f8 <_printf_float+0x244>
 80022fe:	f04f 0800 	mov.w	r8, #0
 8002302:	f104 0919 	add.w	r9, r4, #25
 8002306:	e7f4      	b.n	80022f2 <_printf_float+0x43e>

08002308 <_printf_common>:
 8002308:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800230c:	4616      	mov	r6, r2
 800230e:	4698      	mov	r8, r3
 8002310:	688a      	ldr	r2, [r1, #8]
 8002312:	690b      	ldr	r3, [r1, #16]
 8002314:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8002318:	4293      	cmp	r3, r2
 800231a:	bfb8      	it	lt
 800231c:	4613      	movlt	r3, r2
 800231e:	6033      	str	r3, [r6, #0]
 8002320:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8002324:	4607      	mov	r7, r0
 8002326:	460c      	mov	r4, r1
 8002328:	b10a      	cbz	r2, 800232e <_printf_common+0x26>
 800232a:	3301      	adds	r3, #1
 800232c:	6033      	str	r3, [r6, #0]
 800232e:	6823      	ldr	r3, [r4, #0]
 8002330:	0699      	lsls	r1, r3, #26
 8002332:	bf42      	ittt	mi
 8002334:	6833      	ldrmi	r3, [r6, #0]
 8002336:	3302      	addmi	r3, #2
 8002338:	6033      	strmi	r3, [r6, #0]
 800233a:	6825      	ldr	r5, [r4, #0]
 800233c:	f015 0506 	ands.w	r5, r5, #6
 8002340:	d106      	bne.n	8002350 <_printf_common+0x48>
 8002342:	f104 0a19 	add.w	sl, r4, #25
 8002346:	68e3      	ldr	r3, [r4, #12]
 8002348:	6832      	ldr	r2, [r6, #0]
 800234a:	1a9b      	subs	r3, r3, r2
 800234c:	42ab      	cmp	r3, r5
 800234e:	dc26      	bgt.n	800239e <_printf_common+0x96>
 8002350:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8002354:	6822      	ldr	r2, [r4, #0]
 8002356:	3b00      	subs	r3, #0
 8002358:	bf18      	it	ne
 800235a:	2301      	movne	r3, #1
 800235c:	0692      	lsls	r2, r2, #26
 800235e:	d42b      	bmi.n	80023b8 <_printf_common+0xb0>
 8002360:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8002364:	4641      	mov	r1, r8
 8002366:	4638      	mov	r0, r7
 8002368:	47c8      	blx	r9
 800236a:	3001      	adds	r0, #1
 800236c:	d01e      	beq.n	80023ac <_printf_common+0xa4>
 800236e:	6823      	ldr	r3, [r4, #0]
 8002370:	6922      	ldr	r2, [r4, #16]
 8002372:	f003 0306 	and.w	r3, r3, #6
 8002376:	2b04      	cmp	r3, #4
 8002378:	bf02      	ittt	eq
 800237a:	68e5      	ldreq	r5, [r4, #12]
 800237c:	6833      	ldreq	r3, [r6, #0]
 800237e:	1aed      	subeq	r5, r5, r3
 8002380:	68a3      	ldr	r3, [r4, #8]
 8002382:	bf0c      	ite	eq
 8002384:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002388:	2500      	movne	r5, #0
 800238a:	4293      	cmp	r3, r2
 800238c:	bfc4      	itt	gt
 800238e:	1a9b      	subgt	r3, r3, r2
 8002390:	18ed      	addgt	r5, r5, r3
 8002392:	2600      	movs	r6, #0
 8002394:	341a      	adds	r4, #26
 8002396:	42b5      	cmp	r5, r6
 8002398:	d11a      	bne.n	80023d0 <_printf_common+0xc8>
 800239a:	2000      	movs	r0, #0
 800239c:	e008      	b.n	80023b0 <_printf_common+0xa8>
 800239e:	2301      	movs	r3, #1
 80023a0:	4652      	mov	r2, sl
 80023a2:	4641      	mov	r1, r8
 80023a4:	4638      	mov	r0, r7
 80023a6:	47c8      	blx	r9
 80023a8:	3001      	adds	r0, #1
 80023aa:	d103      	bne.n	80023b4 <_printf_common+0xac>
 80023ac:	f04f 30ff 	mov.w	r0, #4294967295
 80023b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80023b4:	3501      	adds	r5, #1
 80023b6:	e7c6      	b.n	8002346 <_printf_common+0x3e>
 80023b8:	18e1      	adds	r1, r4, r3
 80023ba:	1c5a      	adds	r2, r3, #1
 80023bc:	2030      	movs	r0, #48	@ 0x30
 80023be:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80023c2:	4422      	add	r2, r4
 80023c4:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80023c8:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80023cc:	3302      	adds	r3, #2
 80023ce:	e7c7      	b.n	8002360 <_printf_common+0x58>
 80023d0:	2301      	movs	r3, #1
 80023d2:	4622      	mov	r2, r4
 80023d4:	4641      	mov	r1, r8
 80023d6:	4638      	mov	r0, r7
 80023d8:	47c8      	blx	r9
 80023da:	3001      	adds	r0, #1
 80023dc:	d0e6      	beq.n	80023ac <_printf_common+0xa4>
 80023de:	3601      	adds	r6, #1
 80023e0:	e7d9      	b.n	8002396 <_printf_common+0x8e>
	...

080023e4 <_printf_i>:
 80023e4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80023e8:	7e0f      	ldrb	r7, [r1, #24]
 80023ea:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80023ec:	2f78      	cmp	r7, #120	@ 0x78
 80023ee:	4691      	mov	r9, r2
 80023f0:	4680      	mov	r8, r0
 80023f2:	460c      	mov	r4, r1
 80023f4:	469a      	mov	sl, r3
 80023f6:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80023fa:	d807      	bhi.n	800240c <_printf_i+0x28>
 80023fc:	2f62      	cmp	r7, #98	@ 0x62
 80023fe:	d80a      	bhi.n	8002416 <_printf_i+0x32>
 8002400:	2f00      	cmp	r7, #0
 8002402:	f000 80d2 	beq.w	80025aa <_printf_i+0x1c6>
 8002406:	2f58      	cmp	r7, #88	@ 0x58
 8002408:	f000 80b9 	beq.w	800257e <_printf_i+0x19a>
 800240c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8002410:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8002414:	e03a      	b.n	800248c <_printf_i+0xa8>
 8002416:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800241a:	2b15      	cmp	r3, #21
 800241c:	d8f6      	bhi.n	800240c <_printf_i+0x28>
 800241e:	a101      	add	r1, pc, #4	@ (adr r1, 8002424 <_printf_i+0x40>)
 8002420:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8002424:	0800247d 	.word	0x0800247d
 8002428:	08002491 	.word	0x08002491
 800242c:	0800240d 	.word	0x0800240d
 8002430:	0800240d 	.word	0x0800240d
 8002434:	0800240d 	.word	0x0800240d
 8002438:	0800240d 	.word	0x0800240d
 800243c:	08002491 	.word	0x08002491
 8002440:	0800240d 	.word	0x0800240d
 8002444:	0800240d 	.word	0x0800240d
 8002448:	0800240d 	.word	0x0800240d
 800244c:	0800240d 	.word	0x0800240d
 8002450:	08002591 	.word	0x08002591
 8002454:	080024bb 	.word	0x080024bb
 8002458:	0800254b 	.word	0x0800254b
 800245c:	0800240d 	.word	0x0800240d
 8002460:	0800240d 	.word	0x0800240d
 8002464:	080025b3 	.word	0x080025b3
 8002468:	0800240d 	.word	0x0800240d
 800246c:	080024bb 	.word	0x080024bb
 8002470:	0800240d 	.word	0x0800240d
 8002474:	0800240d 	.word	0x0800240d
 8002478:	08002553 	.word	0x08002553
 800247c:	6833      	ldr	r3, [r6, #0]
 800247e:	1d1a      	adds	r2, r3, #4
 8002480:	681b      	ldr	r3, [r3, #0]
 8002482:	6032      	str	r2, [r6, #0]
 8002484:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8002488:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800248c:	2301      	movs	r3, #1
 800248e:	e09d      	b.n	80025cc <_printf_i+0x1e8>
 8002490:	6833      	ldr	r3, [r6, #0]
 8002492:	6820      	ldr	r0, [r4, #0]
 8002494:	1d19      	adds	r1, r3, #4
 8002496:	6031      	str	r1, [r6, #0]
 8002498:	0606      	lsls	r6, r0, #24
 800249a:	d501      	bpl.n	80024a0 <_printf_i+0xbc>
 800249c:	681d      	ldr	r5, [r3, #0]
 800249e:	e003      	b.n	80024a8 <_printf_i+0xc4>
 80024a0:	0645      	lsls	r5, r0, #25
 80024a2:	d5fb      	bpl.n	800249c <_printf_i+0xb8>
 80024a4:	f9b3 5000 	ldrsh.w	r5, [r3]
 80024a8:	2d00      	cmp	r5, #0
 80024aa:	da03      	bge.n	80024b4 <_printf_i+0xd0>
 80024ac:	232d      	movs	r3, #45	@ 0x2d
 80024ae:	426d      	negs	r5, r5
 80024b0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80024b4:	4859      	ldr	r0, [pc, #356]	@ (800261c <_printf_i+0x238>)
 80024b6:	230a      	movs	r3, #10
 80024b8:	e011      	b.n	80024de <_printf_i+0xfa>
 80024ba:	6821      	ldr	r1, [r4, #0]
 80024bc:	6833      	ldr	r3, [r6, #0]
 80024be:	0608      	lsls	r0, r1, #24
 80024c0:	f853 5b04 	ldr.w	r5, [r3], #4
 80024c4:	d402      	bmi.n	80024cc <_printf_i+0xe8>
 80024c6:	0649      	lsls	r1, r1, #25
 80024c8:	bf48      	it	mi
 80024ca:	b2ad      	uxthmi	r5, r5
 80024cc:	2f6f      	cmp	r7, #111	@ 0x6f
 80024ce:	4853      	ldr	r0, [pc, #332]	@ (800261c <_printf_i+0x238>)
 80024d0:	6033      	str	r3, [r6, #0]
 80024d2:	bf14      	ite	ne
 80024d4:	230a      	movne	r3, #10
 80024d6:	2308      	moveq	r3, #8
 80024d8:	2100      	movs	r1, #0
 80024da:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80024de:	6866      	ldr	r6, [r4, #4]
 80024e0:	60a6      	str	r6, [r4, #8]
 80024e2:	2e00      	cmp	r6, #0
 80024e4:	bfa2      	ittt	ge
 80024e6:	6821      	ldrge	r1, [r4, #0]
 80024e8:	f021 0104 	bicge.w	r1, r1, #4
 80024ec:	6021      	strge	r1, [r4, #0]
 80024ee:	b90d      	cbnz	r5, 80024f4 <_printf_i+0x110>
 80024f0:	2e00      	cmp	r6, #0
 80024f2:	d04b      	beq.n	800258c <_printf_i+0x1a8>
 80024f4:	4616      	mov	r6, r2
 80024f6:	fbb5 f1f3 	udiv	r1, r5, r3
 80024fa:	fb03 5711 	mls	r7, r3, r1, r5
 80024fe:	5dc7      	ldrb	r7, [r0, r7]
 8002500:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8002504:	462f      	mov	r7, r5
 8002506:	42bb      	cmp	r3, r7
 8002508:	460d      	mov	r5, r1
 800250a:	d9f4      	bls.n	80024f6 <_printf_i+0x112>
 800250c:	2b08      	cmp	r3, #8
 800250e:	d10b      	bne.n	8002528 <_printf_i+0x144>
 8002510:	6823      	ldr	r3, [r4, #0]
 8002512:	07df      	lsls	r7, r3, #31
 8002514:	d508      	bpl.n	8002528 <_printf_i+0x144>
 8002516:	6923      	ldr	r3, [r4, #16]
 8002518:	6861      	ldr	r1, [r4, #4]
 800251a:	4299      	cmp	r1, r3
 800251c:	bfde      	ittt	le
 800251e:	2330      	movle	r3, #48	@ 0x30
 8002520:	f806 3c01 	strble.w	r3, [r6, #-1]
 8002524:	f106 36ff 	addle.w	r6, r6, #4294967295
 8002528:	1b92      	subs	r2, r2, r6
 800252a:	6122      	str	r2, [r4, #16]
 800252c:	f8cd a000 	str.w	sl, [sp]
 8002530:	464b      	mov	r3, r9
 8002532:	aa03      	add	r2, sp, #12
 8002534:	4621      	mov	r1, r4
 8002536:	4640      	mov	r0, r8
 8002538:	f7ff fee6 	bl	8002308 <_printf_common>
 800253c:	3001      	adds	r0, #1
 800253e:	d14a      	bne.n	80025d6 <_printf_i+0x1f2>
 8002540:	f04f 30ff 	mov.w	r0, #4294967295
 8002544:	b004      	add	sp, #16
 8002546:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800254a:	6823      	ldr	r3, [r4, #0]
 800254c:	f043 0320 	orr.w	r3, r3, #32
 8002550:	6023      	str	r3, [r4, #0]
 8002552:	4833      	ldr	r0, [pc, #204]	@ (8002620 <_printf_i+0x23c>)
 8002554:	2778      	movs	r7, #120	@ 0x78
 8002556:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800255a:	6823      	ldr	r3, [r4, #0]
 800255c:	6831      	ldr	r1, [r6, #0]
 800255e:	061f      	lsls	r7, r3, #24
 8002560:	f851 5b04 	ldr.w	r5, [r1], #4
 8002564:	d402      	bmi.n	800256c <_printf_i+0x188>
 8002566:	065f      	lsls	r7, r3, #25
 8002568:	bf48      	it	mi
 800256a:	b2ad      	uxthmi	r5, r5
 800256c:	6031      	str	r1, [r6, #0]
 800256e:	07d9      	lsls	r1, r3, #31
 8002570:	bf44      	itt	mi
 8002572:	f043 0320 	orrmi.w	r3, r3, #32
 8002576:	6023      	strmi	r3, [r4, #0]
 8002578:	b11d      	cbz	r5, 8002582 <_printf_i+0x19e>
 800257a:	2310      	movs	r3, #16
 800257c:	e7ac      	b.n	80024d8 <_printf_i+0xf4>
 800257e:	4827      	ldr	r0, [pc, #156]	@ (800261c <_printf_i+0x238>)
 8002580:	e7e9      	b.n	8002556 <_printf_i+0x172>
 8002582:	6823      	ldr	r3, [r4, #0]
 8002584:	f023 0320 	bic.w	r3, r3, #32
 8002588:	6023      	str	r3, [r4, #0]
 800258a:	e7f6      	b.n	800257a <_printf_i+0x196>
 800258c:	4616      	mov	r6, r2
 800258e:	e7bd      	b.n	800250c <_printf_i+0x128>
 8002590:	6833      	ldr	r3, [r6, #0]
 8002592:	6825      	ldr	r5, [r4, #0]
 8002594:	6961      	ldr	r1, [r4, #20]
 8002596:	1d18      	adds	r0, r3, #4
 8002598:	6030      	str	r0, [r6, #0]
 800259a:	062e      	lsls	r6, r5, #24
 800259c:	681b      	ldr	r3, [r3, #0]
 800259e:	d501      	bpl.n	80025a4 <_printf_i+0x1c0>
 80025a0:	6019      	str	r1, [r3, #0]
 80025a2:	e002      	b.n	80025aa <_printf_i+0x1c6>
 80025a4:	0668      	lsls	r0, r5, #25
 80025a6:	d5fb      	bpl.n	80025a0 <_printf_i+0x1bc>
 80025a8:	8019      	strh	r1, [r3, #0]
 80025aa:	2300      	movs	r3, #0
 80025ac:	6123      	str	r3, [r4, #16]
 80025ae:	4616      	mov	r6, r2
 80025b0:	e7bc      	b.n	800252c <_printf_i+0x148>
 80025b2:	6833      	ldr	r3, [r6, #0]
 80025b4:	1d1a      	adds	r2, r3, #4
 80025b6:	6032      	str	r2, [r6, #0]
 80025b8:	681e      	ldr	r6, [r3, #0]
 80025ba:	6862      	ldr	r2, [r4, #4]
 80025bc:	2100      	movs	r1, #0
 80025be:	4630      	mov	r0, r6
 80025c0:	f7fd fe0e 	bl	80001e0 <memchr>
 80025c4:	b108      	cbz	r0, 80025ca <_printf_i+0x1e6>
 80025c6:	1b80      	subs	r0, r0, r6
 80025c8:	6060      	str	r0, [r4, #4]
 80025ca:	6863      	ldr	r3, [r4, #4]
 80025cc:	6123      	str	r3, [r4, #16]
 80025ce:	2300      	movs	r3, #0
 80025d0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80025d4:	e7aa      	b.n	800252c <_printf_i+0x148>
 80025d6:	6923      	ldr	r3, [r4, #16]
 80025d8:	4632      	mov	r2, r6
 80025da:	4649      	mov	r1, r9
 80025dc:	4640      	mov	r0, r8
 80025de:	47d0      	blx	sl
 80025e0:	3001      	adds	r0, #1
 80025e2:	d0ad      	beq.n	8002540 <_printf_i+0x15c>
 80025e4:	6823      	ldr	r3, [r4, #0]
 80025e6:	079b      	lsls	r3, r3, #30
 80025e8:	d413      	bmi.n	8002612 <_printf_i+0x22e>
 80025ea:	68e0      	ldr	r0, [r4, #12]
 80025ec:	9b03      	ldr	r3, [sp, #12]
 80025ee:	4298      	cmp	r0, r3
 80025f0:	bfb8      	it	lt
 80025f2:	4618      	movlt	r0, r3
 80025f4:	e7a6      	b.n	8002544 <_printf_i+0x160>
 80025f6:	2301      	movs	r3, #1
 80025f8:	4632      	mov	r2, r6
 80025fa:	4649      	mov	r1, r9
 80025fc:	4640      	mov	r0, r8
 80025fe:	47d0      	blx	sl
 8002600:	3001      	adds	r0, #1
 8002602:	d09d      	beq.n	8002540 <_printf_i+0x15c>
 8002604:	3501      	adds	r5, #1
 8002606:	68e3      	ldr	r3, [r4, #12]
 8002608:	9903      	ldr	r1, [sp, #12]
 800260a:	1a5b      	subs	r3, r3, r1
 800260c:	42ab      	cmp	r3, r5
 800260e:	dcf2      	bgt.n	80025f6 <_printf_i+0x212>
 8002610:	e7eb      	b.n	80025ea <_printf_i+0x206>
 8002612:	2500      	movs	r5, #0
 8002614:	f104 0619 	add.w	r6, r4, #25
 8002618:	e7f5      	b.n	8002606 <_printf_i+0x222>
 800261a:	bf00      	nop
 800261c:	08004b35 	.word	0x08004b35
 8002620:	08004b46 	.word	0x08004b46

08002624 <std>:
 8002624:	2300      	movs	r3, #0
 8002626:	b510      	push	{r4, lr}
 8002628:	4604      	mov	r4, r0
 800262a:	e9c0 3300 	strd	r3, r3, [r0]
 800262e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8002632:	6083      	str	r3, [r0, #8]
 8002634:	8181      	strh	r1, [r0, #12]
 8002636:	6643      	str	r3, [r0, #100]	@ 0x64
 8002638:	81c2      	strh	r2, [r0, #14]
 800263a:	6183      	str	r3, [r0, #24]
 800263c:	4619      	mov	r1, r3
 800263e:	2208      	movs	r2, #8
 8002640:	305c      	adds	r0, #92	@ 0x5c
 8002642:	f000 f928 	bl	8002896 <memset>
 8002646:	4b0d      	ldr	r3, [pc, #52]	@ (800267c <std+0x58>)
 8002648:	6263      	str	r3, [r4, #36]	@ 0x24
 800264a:	4b0d      	ldr	r3, [pc, #52]	@ (8002680 <std+0x5c>)
 800264c:	62a3      	str	r3, [r4, #40]	@ 0x28
 800264e:	4b0d      	ldr	r3, [pc, #52]	@ (8002684 <std+0x60>)
 8002650:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8002652:	4b0d      	ldr	r3, [pc, #52]	@ (8002688 <std+0x64>)
 8002654:	6323      	str	r3, [r4, #48]	@ 0x30
 8002656:	4b0d      	ldr	r3, [pc, #52]	@ (800268c <std+0x68>)
 8002658:	6224      	str	r4, [r4, #32]
 800265a:	429c      	cmp	r4, r3
 800265c:	d006      	beq.n	800266c <std+0x48>
 800265e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8002662:	4294      	cmp	r4, r2
 8002664:	d002      	beq.n	800266c <std+0x48>
 8002666:	33d0      	adds	r3, #208	@ 0xd0
 8002668:	429c      	cmp	r4, r3
 800266a:	d105      	bne.n	8002678 <std+0x54>
 800266c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8002670:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002674:	f000 b98c 	b.w	8002990 <__retarget_lock_init_recursive>
 8002678:	bd10      	pop	{r4, pc}
 800267a:	bf00      	nop
 800267c:	08002811 	.word	0x08002811
 8002680:	08002833 	.word	0x08002833
 8002684:	0800286b 	.word	0x0800286b
 8002688:	0800288f 	.word	0x0800288f
 800268c:	20000200 	.word	0x20000200

08002690 <stdio_exit_handler>:
 8002690:	4a02      	ldr	r2, [pc, #8]	@ (800269c <stdio_exit_handler+0xc>)
 8002692:	4903      	ldr	r1, [pc, #12]	@ (80026a0 <stdio_exit_handler+0x10>)
 8002694:	4803      	ldr	r0, [pc, #12]	@ (80026a4 <stdio_exit_handler+0x14>)
 8002696:	f000 b869 	b.w	800276c <_fwalk_sglue>
 800269a:	bf00      	nop
 800269c:	20000008 	.word	0x20000008
 80026a0:	080042ed 	.word	0x080042ed
 80026a4:	20000018 	.word	0x20000018

080026a8 <cleanup_stdio>:
 80026a8:	6841      	ldr	r1, [r0, #4]
 80026aa:	4b0c      	ldr	r3, [pc, #48]	@ (80026dc <cleanup_stdio+0x34>)
 80026ac:	4299      	cmp	r1, r3
 80026ae:	b510      	push	{r4, lr}
 80026b0:	4604      	mov	r4, r0
 80026b2:	d001      	beq.n	80026b8 <cleanup_stdio+0x10>
 80026b4:	f001 fe1a 	bl	80042ec <_fflush_r>
 80026b8:	68a1      	ldr	r1, [r4, #8]
 80026ba:	4b09      	ldr	r3, [pc, #36]	@ (80026e0 <cleanup_stdio+0x38>)
 80026bc:	4299      	cmp	r1, r3
 80026be:	d002      	beq.n	80026c6 <cleanup_stdio+0x1e>
 80026c0:	4620      	mov	r0, r4
 80026c2:	f001 fe13 	bl	80042ec <_fflush_r>
 80026c6:	68e1      	ldr	r1, [r4, #12]
 80026c8:	4b06      	ldr	r3, [pc, #24]	@ (80026e4 <cleanup_stdio+0x3c>)
 80026ca:	4299      	cmp	r1, r3
 80026cc:	d004      	beq.n	80026d8 <cleanup_stdio+0x30>
 80026ce:	4620      	mov	r0, r4
 80026d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80026d4:	f001 be0a 	b.w	80042ec <_fflush_r>
 80026d8:	bd10      	pop	{r4, pc}
 80026da:	bf00      	nop
 80026dc:	20000200 	.word	0x20000200
 80026e0:	20000268 	.word	0x20000268
 80026e4:	200002d0 	.word	0x200002d0

080026e8 <global_stdio_init.part.0>:
 80026e8:	b510      	push	{r4, lr}
 80026ea:	4b0b      	ldr	r3, [pc, #44]	@ (8002718 <global_stdio_init.part.0+0x30>)
 80026ec:	4c0b      	ldr	r4, [pc, #44]	@ (800271c <global_stdio_init.part.0+0x34>)
 80026ee:	4a0c      	ldr	r2, [pc, #48]	@ (8002720 <global_stdio_init.part.0+0x38>)
 80026f0:	601a      	str	r2, [r3, #0]
 80026f2:	4620      	mov	r0, r4
 80026f4:	2200      	movs	r2, #0
 80026f6:	2104      	movs	r1, #4
 80026f8:	f7ff ff94 	bl	8002624 <std>
 80026fc:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8002700:	2201      	movs	r2, #1
 8002702:	2109      	movs	r1, #9
 8002704:	f7ff ff8e 	bl	8002624 <std>
 8002708:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 800270c:	2202      	movs	r2, #2
 800270e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002712:	2112      	movs	r1, #18
 8002714:	f7ff bf86 	b.w	8002624 <std>
 8002718:	20000338 	.word	0x20000338
 800271c:	20000200 	.word	0x20000200
 8002720:	08002691 	.word	0x08002691

08002724 <__sfp_lock_acquire>:
 8002724:	4801      	ldr	r0, [pc, #4]	@ (800272c <__sfp_lock_acquire+0x8>)
 8002726:	f000 b934 	b.w	8002992 <__retarget_lock_acquire_recursive>
 800272a:	bf00      	nop
 800272c:	20000341 	.word	0x20000341

08002730 <__sfp_lock_release>:
 8002730:	4801      	ldr	r0, [pc, #4]	@ (8002738 <__sfp_lock_release+0x8>)
 8002732:	f000 b92f 	b.w	8002994 <__retarget_lock_release_recursive>
 8002736:	bf00      	nop
 8002738:	20000341 	.word	0x20000341

0800273c <__sinit>:
 800273c:	b510      	push	{r4, lr}
 800273e:	4604      	mov	r4, r0
 8002740:	f7ff fff0 	bl	8002724 <__sfp_lock_acquire>
 8002744:	6a23      	ldr	r3, [r4, #32]
 8002746:	b11b      	cbz	r3, 8002750 <__sinit+0x14>
 8002748:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800274c:	f7ff bff0 	b.w	8002730 <__sfp_lock_release>
 8002750:	4b04      	ldr	r3, [pc, #16]	@ (8002764 <__sinit+0x28>)
 8002752:	6223      	str	r3, [r4, #32]
 8002754:	4b04      	ldr	r3, [pc, #16]	@ (8002768 <__sinit+0x2c>)
 8002756:	681b      	ldr	r3, [r3, #0]
 8002758:	2b00      	cmp	r3, #0
 800275a:	d1f5      	bne.n	8002748 <__sinit+0xc>
 800275c:	f7ff ffc4 	bl	80026e8 <global_stdio_init.part.0>
 8002760:	e7f2      	b.n	8002748 <__sinit+0xc>
 8002762:	bf00      	nop
 8002764:	080026a9 	.word	0x080026a9
 8002768:	20000338 	.word	0x20000338

0800276c <_fwalk_sglue>:
 800276c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002770:	4607      	mov	r7, r0
 8002772:	4688      	mov	r8, r1
 8002774:	4614      	mov	r4, r2
 8002776:	2600      	movs	r6, #0
 8002778:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800277c:	f1b9 0901 	subs.w	r9, r9, #1
 8002780:	d505      	bpl.n	800278e <_fwalk_sglue+0x22>
 8002782:	6824      	ldr	r4, [r4, #0]
 8002784:	2c00      	cmp	r4, #0
 8002786:	d1f7      	bne.n	8002778 <_fwalk_sglue+0xc>
 8002788:	4630      	mov	r0, r6
 800278a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800278e:	89ab      	ldrh	r3, [r5, #12]
 8002790:	2b01      	cmp	r3, #1
 8002792:	d907      	bls.n	80027a4 <_fwalk_sglue+0x38>
 8002794:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8002798:	3301      	adds	r3, #1
 800279a:	d003      	beq.n	80027a4 <_fwalk_sglue+0x38>
 800279c:	4629      	mov	r1, r5
 800279e:	4638      	mov	r0, r7
 80027a0:	47c0      	blx	r8
 80027a2:	4306      	orrs	r6, r0
 80027a4:	3568      	adds	r5, #104	@ 0x68
 80027a6:	e7e9      	b.n	800277c <_fwalk_sglue+0x10>

080027a8 <sniprintf>:
 80027a8:	b40c      	push	{r2, r3}
 80027aa:	b530      	push	{r4, r5, lr}
 80027ac:	4b17      	ldr	r3, [pc, #92]	@ (800280c <sniprintf+0x64>)
 80027ae:	1e0c      	subs	r4, r1, #0
 80027b0:	681d      	ldr	r5, [r3, #0]
 80027b2:	b09d      	sub	sp, #116	@ 0x74
 80027b4:	da08      	bge.n	80027c8 <sniprintf+0x20>
 80027b6:	238b      	movs	r3, #139	@ 0x8b
 80027b8:	602b      	str	r3, [r5, #0]
 80027ba:	f04f 30ff 	mov.w	r0, #4294967295
 80027be:	b01d      	add	sp, #116	@ 0x74
 80027c0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80027c4:	b002      	add	sp, #8
 80027c6:	4770      	bx	lr
 80027c8:	f44f 7302 	mov.w	r3, #520	@ 0x208
 80027cc:	f8ad 3014 	strh.w	r3, [sp, #20]
 80027d0:	bf14      	ite	ne
 80027d2:	f104 33ff 	addne.w	r3, r4, #4294967295
 80027d6:	4623      	moveq	r3, r4
 80027d8:	9304      	str	r3, [sp, #16]
 80027da:	9307      	str	r3, [sp, #28]
 80027dc:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80027e0:	9002      	str	r0, [sp, #8]
 80027e2:	9006      	str	r0, [sp, #24]
 80027e4:	f8ad 3016 	strh.w	r3, [sp, #22]
 80027e8:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80027ea:	ab21      	add	r3, sp, #132	@ 0x84
 80027ec:	a902      	add	r1, sp, #8
 80027ee:	4628      	mov	r0, r5
 80027f0:	9301      	str	r3, [sp, #4]
 80027f2:	f001 fbfb 	bl	8003fec <_svfiprintf_r>
 80027f6:	1c43      	adds	r3, r0, #1
 80027f8:	bfbc      	itt	lt
 80027fa:	238b      	movlt	r3, #139	@ 0x8b
 80027fc:	602b      	strlt	r3, [r5, #0]
 80027fe:	2c00      	cmp	r4, #0
 8002800:	d0dd      	beq.n	80027be <sniprintf+0x16>
 8002802:	9b02      	ldr	r3, [sp, #8]
 8002804:	2200      	movs	r2, #0
 8002806:	701a      	strb	r2, [r3, #0]
 8002808:	e7d9      	b.n	80027be <sniprintf+0x16>
 800280a:	bf00      	nop
 800280c:	20000014 	.word	0x20000014

08002810 <__sread>:
 8002810:	b510      	push	{r4, lr}
 8002812:	460c      	mov	r4, r1
 8002814:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002818:	f000 f86c 	bl	80028f4 <_read_r>
 800281c:	2800      	cmp	r0, #0
 800281e:	bfab      	itete	ge
 8002820:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8002822:	89a3      	ldrhlt	r3, [r4, #12]
 8002824:	181b      	addge	r3, r3, r0
 8002826:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800282a:	bfac      	ite	ge
 800282c:	6563      	strge	r3, [r4, #84]	@ 0x54
 800282e:	81a3      	strhlt	r3, [r4, #12]
 8002830:	bd10      	pop	{r4, pc}

08002832 <__swrite>:
 8002832:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002836:	461f      	mov	r7, r3
 8002838:	898b      	ldrh	r3, [r1, #12]
 800283a:	05db      	lsls	r3, r3, #23
 800283c:	4605      	mov	r5, r0
 800283e:	460c      	mov	r4, r1
 8002840:	4616      	mov	r6, r2
 8002842:	d505      	bpl.n	8002850 <__swrite+0x1e>
 8002844:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002848:	2302      	movs	r3, #2
 800284a:	2200      	movs	r2, #0
 800284c:	f000 f840 	bl	80028d0 <_lseek_r>
 8002850:	89a3      	ldrh	r3, [r4, #12]
 8002852:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8002856:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800285a:	81a3      	strh	r3, [r4, #12]
 800285c:	4632      	mov	r2, r6
 800285e:	463b      	mov	r3, r7
 8002860:	4628      	mov	r0, r5
 8002862:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002866:	f000 b857 	b.w	8002918 <_write_r>

0800286a <__sseek>:
 800286a:	b510      	push	{r4, lr}
 800286c:	460c      	mov	r4, r1
 800286e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002872:	f000 f82d 	bl	80028d0 <_lseek_r>
 8002876:	1c43      	adds	r3, r0, #1
 8002878:	89a3      	ldrh	r3, [r4, #12]
 800287a:	bf15      	itete	ne
 800287c:	6560      	strne	r0, [r4, #84]	@ 0x54
 800287e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8002882:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8002886:	81a3      	strheq	r3, [r4, #12]
 8002888:	bf18      	it	ne
 800288a:	81a3      	strhne	r3, [r4, #12]
 800288c:	bd10      	pop	{r4, pc}

0800288e <__sclose>:
 800288e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002892:	f000 b80d 	b.w	80028b0 <_close_r>

08002896 <memset>:
 8002896:	4402      	add	r2, r0
 8002898:	4603      	mov	r3, r0
 800289a:	4293      	cmp	r3, r2
 800289c:	d100      	bne.n	80028a0 <memset+0xa>
 800289e:	4770      	bx	lr
 80028a0:	f803 1b01 	strb.w	r1, [r3], #1
 80028a4:	e7f9      	b.n	800289a <memset+0x4>
	...

080028a8 <_localeconv_r>:
 80028a8:	4800      	ldr	r0, [pc, #0]	@ (80028ac <_localeconv_r+0x4>)
 80028aa:	4770      	bx	lr
 80028ac:	20000154 	.word	0x20000154

080028b0 <_close_r>:
 80028b0:	b538      	push	{r3, r4, r5, lr}
 80028b2:	4d06      	ldr	r5, [pc, #24]	@ (80028cc <_close_r+0x1c>)
 80028b4:	2300      	movs	r3, #0
 80028b6:	4604      	mov	r4, r0
 80028b8:	4608      	mov	r0, r1
 80028ba:	602b      	str	r3, [r5, #0]
 80028bc:	f7ff f9b5 	bl	8001c2a <_close>
 80028c0:	1c43      	adds	r3, r0, #1
 80028c2:	d102      	bne.n	80028ca <_close_r+0x1a>
 80028c4:	682b      	ldr	r3, [r5, #0]
 80028c6:	b103      	cbz	r3, 80028ca <_close_r+0x1a>
 80028c8:	6023      	str	r3, [r4, #0]
 80028ca:	bd38      	pop	{r3, r4, r5, pc}
 80028cc:	2000033c 	.word	0x2000033c

080028d0 <_lseek_r>:
 80028d0:	b538      	push	{r3, r4, r5, lr}
 80028d2:	4d07      	ldr	r5, [pc, #28]	@ (80028f0 <_lseek_r+0x20>)
 80028d4:	4604      	mov	r4, r0
 80028d6:	4608      	mov	r0, r1
 80028d8:	4611      	mov	r1, r2
 80028da:	2200      	movs	r2, #0
 80028dc:	602a      	str	r2, [r5, #0]
 80028de:	461a      	mov	r2, r3
 80028e0:	f7ff f9ca 	bl	8001c78 <_lseek>
 80028e4:	1c43      	adds	r3, r0, #1
 80028e6:	d102      	bne.n	80028ee <_lseek_r+0x1e>
 80028e8:	682b      	ldr	r3, [r5, #0]
 80028ea:	b103      	cbz	r3, 80028ee <_lseek_r+0x1e>
 80028ec:	6023      	str	r3, [r4, #0]
 80028ee:	bd38      	pop	{r3, r4, r5, pc}
 80028f0:	2000033c 	.word	0x2000033c

080028f4 <_read_r>:
 80028f4:	b538      	push	{r3, r4, r5, lr}
 80028f6:	4d07      	ldr	r5, [pc, #28]	@ (8002914 <_read_r+0x20>)
 80028f8:	4604      	mov	r4, r0
 80028fa:	4608      	mov	r0, r1
 80028fc:	4611      	mov	r1, r2
 80028fe:	2200      	movs	r2, #0
 8002900:	602a      	str	r2, [r5, #0]
 8002902:	461a      	mov	r2, r3
 8002904:	f7ff f958 	bl	8001bb8 <_read>
 8002908:	1c43      	adds	r3, r0, #1
 800290a:	d102      	bne.n	8002912 <_read_r+0x1e>
 800290c:	682b      	ldr	r3, [r5, #0]
 800290e:	b103      	cbz	r3, 8002912 <_read_r+0x1e>
 8002910:	6023      	str	r3, [r4, #0]
 8002912:	bd38      	pop	{r3, r4, r5, pc}
 8002914:	2000033c 	.word	0x2000033c

08002918 <_write_r>:
 8002918:	b538      	push	{r3, r4, r5, lr}
 800291a:	4d07      	ldr	r5, [pc, #28]	@ (8002938 <_write_r+0x20>)
 800291c:	4604      	mov	r4, r0
 800291e:	4608      	mov	r0, r1
 8002920:	4611      	mov	r1, r2
 8002922:	2200      	movs	r2, #0
 8002924:	602a      	str	r2, [r5, #0]
 8002926:	461a      	mov	r2, r3
 8002928:	f7ff f963 	bl	8001bf2 <_write>
 800292c:	1c43      	adds	r3, r0, #1
 800292e:	d102      	bne.n	8002936 <_write_r+0x1e>
 8002930:	682b      	ldr	r3, [r5, #0]
 8002932:	b103      	cbz	r3, 8002936 <_write_r+0x1e>
 8002934:	6023      	str	r3, [r4, #0]
 8002936:	bd38      	pop	{r3, r4, r5, pc}
 8002938:	2000033c 	.word	0x2000033c

0800293c <__errno>:
 800293c:	4b01      	ldr	r3, [pc, #4]	@ (8002944 <__errno+0x8>)
 800293e:	6818      	ldr	r0, [r3, #0]
 8002940:	4770      	bx	lr
 8002942:	bf00      	nop
 8002944:	20000014 	.word	0x20000014

08002948 <__libc_init_array>:
 8002948:	b570      	push	{r4, r5, r6, lr}
 800294a:	4d0d      	ldr	r5, [pc, #52]	@ (8002980 <__libc_init_array+0x38>)
 800294c:	4c0d      	ldr	r4, [pc, #52]	@ (8002984 <__libc_init_array+0x3c>)
 800294e:	1b64      	subs	r4, r4, r5
 8002950:	10a4      	asrs	r4, r4, #2
 8002952:	2600      	movs	r6, #0
 8002954:	42a6      	cmp	r6, r4
 8002956:	d109      	bne.n	800296c <__libc_init_array+0x24>
 8002958:	4d0b      	ldr	r5, [pc, #44]	@ (8002988 <__libc_init_array+0x40>)
 800295a:	4c0c      	ldr	r4, [pc, #48]	@ (800298c <__libc_init_array+0x44>)
 800295c:	f002 f864 	bl	8004a28 <_init>
 8002960:	1b64      	subs	r4, r4, r5
 8002962:	10a4      	asrs	r4, r4, #2
 8002964:	2600      	movs	r6, #0
 8002966:	42a6      	cmp	r6, r4
 8002968:	d105      	bne.n	8002976 <__libc_init_array+0x2e>
 800296a:	bd70      	pop	{r4, r5, r6, pc}
 800296c:	f855 3b04 	ldr.w	r3, [r5], #4
 8002970:	4798      	blx	r3
 8002972:	3601      	adds	r6, #1
 8002974:	e7ee      	b.n	8002954 <__libc_init_array+0xc>
 8002976:	f855 3b04 	ldr.w	r3, [r5], #4
 800297a:	4798      	blx	r3
 800297c:	3601      	adds	r6, #1
 800297e:	e7f2      	b.n	8002966 <__libc_init_array+0x1e>
 8002980:	08004ea0 	.word	0x08004ea0
 8002984:	08004ea0 	.word	0x08004ea0
 8002988:	08004ea0 	.word	0x08004ea0
 800298c:	08004ea4 	.word	0x08004ea4

08002990 <__retarget_lock_init_recursive>:
 8002990:	4770      	bx	lr

08002992 <__retarget_lock_acquire_recursive>:
 8002992:	4770      	bx	lr

08002994 <__retarget_lock_release_recursive>:
 8002994:	4770      	bx	lr

08002996 <quorem>:
 8002996:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800299a:	6903      	ldr	r3, [r0, #16]
 800299c:	690c      	ldr	r4, [r1, #16]
 800299e:	42a3      	cmp	r3, r4
 80029a0:	4607      	mov	r7, r0
 80029a2:	db7e      	blt.n	8002aa2 <quorem+0x10c>
 80029a4:	3c01      	subs	r4, #1
 80029a6:	f101 0814 	add.w	r8, r1, #20
 80029aa:	00a3      	lsls	r3, r4, #2
 80029ac:	f100 0514 	add.w	r5, r0, #20
 80029b0:	9300      	str	r3, [sp, #0]
 80029b2:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80029b6:	9301      	str	r3, [sp, #4]
 80029b8:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80029bc:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80029c0:	3301      	adds	r3, #1
 80029c2:	429a      	cmp	r2, r3
 80029c4:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80029c8:	fbb2 f6f3 	udiv	r6, r2, r3
 80029cc:	d32e      	bcc.n	8002a2c <quorem+0x96>
 80029ce:	f04f 0a00 	mov.w	sl, #0
 80029d2:	46c4      	mov	ip, r8
 80029d4:	46ae      	mov	lr, r5
 80029d6:	46d3      	mov	fp, sl
 80029d8:	f85c 3b04 	ldr.w	r3, [ip], #4
 80029dc:	b298      	uxth	r0, r3
 80029de:	fb06 a000 	mla	r0, r6, r0, sl
 80029e2:	0c02      	lsrs	r2, r0, #16
 80029e4:	0c1b      	lsrs	r3, r3, #16
 80029e6:	fb06 2303 	mla	r3, r6, r3, r2
 80029ea:	f8de 2000 	ldr.w	r2, [lr]
 80029ee:	b280      	uxth	r0, r0
 80029f0:	b292      	uxth	r2, r2
 80029f2:	1a12      	subs	r2, r2, r0
 80029f4:	445a      	add	r2, fp
 80029f6:	f8de 0000 	ldr.w	r0, [lr]
 80029fa:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80029fe:	b29b      	uxth	r3, r3
 8002a00:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8002a04:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8002a08:	b292      	uxth	r2, r2
 8002a0a:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8002a0e:	45e1      	cmp	r9, ip
 8002a10:	f84e 2b04 	str.w	r2, [lr], #4
 8002a14:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8002a18:	d2de      	bcs.n	80029d8 <quorem+0x42>
 8002a1a:	9b00      	ldr	r3, [sp, #0]
 8002a1c:	58eb      	ldr	r3, [r5, r3]
 8002a1e:	b92b      	cbnz	r3, 8002a2c <quorem+0x96>
 8002a20:	9b01      	ldr	r3, [sp, #4]
 8002a22:	3b04      	subs	r3, #4
 8002a24:	429d      	cmp	r5, r3
 8002a26:	461a      	mov	r2, r3
 8002a28:	d32f      	bcc.n	8002a8a <quorem+0xf4>
 8002a2a:	613c      	str	r4, [r7, #16]
 8002a2c:	4638      	mov	r0, r7
 8002a2e:	f001 f979 	bl	8003d24 <__mcmp>
 8002a32:	2800      	cmp	r0, #0
 8002a34:	db25      	blt.n	8002a82 <quorem+0xec>
 8002a36:	4629      	mov	r1, r5
 8002a38:	2000      	movs	r0, #0
 8002a3a:	f858 2b04 	ldr.w	r2, [r8], #4
 8002a3e:	f8d1 c000 	ldr.w	ip, [r1]
 8002a42:	fa1f fe82 	uxth.w	lr, r2
 8002a46:	fa1f f38c 	uxth.w	r3, ip
 8002a4a:	eba3 030e 	sub.w	r3, r3, lr
 8002a4e:	4403      	add	r3, r0
 8002a50:	0c12      	lsrs	r2, r2, #16
 8002a52:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8002a56:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8002a5a:	b29b      	uxth	r3, r3
 8002a5c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002a60:	45c1      	cmp	r9, r8
 8002a62:	f841 3b04 	str.w	r3, [r1], #4
 8002a66:	ea4f 4022 	mov.w	r0, r2, asr #16
 8002a6a:	d2e6      	bcs.n	8002a3a <quorem+0xa4>
 8002a6c:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002a70:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002a74:	b922      	cbnz	r2, 8002a80 <quorem+0xea>
 8002a76:	3b04      	subs	r3, #4
 8002a78:	429d      	cmp	r5, r3
 8002a7a:	461a      	mov	r2, r3
 8002a7c:	d30b      	bcc.n	8002a96 <quorem+0x100>
 8002a7e:	613c      	str	r4, [r7, #16]
 8002a80:	3601      	adds	r6, #1
 8002a82:	4630      	mov	r0, r6
 8002a84:	b003      	add	sp, #12
 8002a86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002a8a:	6812      	ldr	r2, [r2, #0]
 8002a8c:	3b04      	subs	r3, #4
 8002a8e:	2a00      	cmp	r2, #0
 8002a90:	d1cb      	bne.n	8002a2a <quorem+0x94>
 8002a92:	3c01      	subs	r4, #1
 8002a94:	e7c6      	b.n	8002a24 <quorem+0x8e>
 8002a96:	6812      	ldr	r2, [r2, #0]
 8002a98:	3b04      	subs	r3, #4
 8002a9a:	2a00      	cmp	r2, #0
 8002a9c:	d1ef      	bne.n	8002a7e <quorem+0xe8>
 8002a9e:	3c01      	subs	r4, #1
 8002aa0:	e7ea      	b.n	8002a78 <quorem+0xe2>
 8002aa2:	2000      	movs	r0, #0
 8002aa4:	e7ee      	b.n	8002a84 <quorem+0xee>
	...

08002aa8 <_dtoa_r>:
 8002aa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002aac:	69c7      	ldr	r7, [r0, #28]
 8002aae:	b099      	sub	sp, #100	@ 0x64
 8002ab0:	ed8d 0b02 	vstr	d0, [sp, #8]
 8002ab4:	ec55 4b10 	vmov	r4, r5, d0
 8002ab8:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 8002aba:	9109      	str	r1, [sp, #36]	@ 0x24
 8002abc:	4683      	mov	fp, r0
 8002abe:	920e      	str	r2, [sp, #56]	@ 0x38
 8002ac0:	9313      	str	r3, [sp, #76]	@ 0x4c
 8002ac2:	b97f      	cbnz	r7, 8002ae4 <_dtoa_r+0x3c>
 8002ac4:	2010      	movs	r0, #16
 8002ac6:	f000 fdfd 	bl	80036c4 <malloc>
 8002aca:	4602      	mov	r2, r0
 8002acc:	f8cb 001c 	str.w	r0, [fp, #28]
 8002ad0:	b920      	cbnz	r0, 8002adc <_dtoa_r+0x34>
 8002ad2:	4ba7      	ldr	r3, [pc, #668]	@ (8002d70 <_dtoa_r+0x2c8>)
 8002ad4:	21ef      	movs	r1, #239	@ 0xef
 8002ad6:	48a7      	ldr	r0, [pc, #668]	@ (8002d74 <_dtoa_r+0x2cc>)
 8002ad8:	f001 fc68 	bl	80043ac <__assert_func>
 8002adc:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8002ae0:	6007      	str	r7, [r0, #0]
 8002ae2:	60c7      	str	r7, [r0, #12]
 8002ae4:	f8db 301c 	ldr.w	r3, [fp, #28]
 8002ae8:	6819      	ldr	r1, [r3, #0]
 8002aea:	b159      	cbz	r1, 8002b04 <_dtoa_r+0x5c>
 8002aec:	685a      	ldr	r2, [r3, #4]
 8002aee:	604a      	str	r2, [r1, #4]
 8002af0:	2301      	movs	r3, #1
 8002af2:	4093      	lsls	r3, r2
 8002af4:	608b      	str	r3, [r1, #8]
 8002af6:	4658      	mov	r0, fp
 8002af8:	f000 feda 	bl	80038b0 <_Bfree>
 8002afc:	f8db 301c 	ldr.w	r3, [fp, #28]
 8002b00:	2200      	movs	r2, #0
 8002b02:	601a      	str	r2, [r3, #0]
 8002b04:	1e2b      	subs	r3, r5, #0
 8002b06:	bfb9      	ittee	lt
 8002b08:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8002b0c:	9303      	strlt	r3, [sp, #12]
 8002b0e:	2300      	movge	r3, #0
 8002b10:	6033      	strge	r3, [r6, #0]
 8002b12:	9f03      	ldr	r7, [sp, #12]
 8002b14:	4b98      	ldr	r3, [pc, #608]	@ (8002d78 <_dtoa_r+0x2d0>)
 8002b16:	bfbc      	itt	lt
 8002b18:	2201      	movlt	r2, #1
 8002b1a:	6032      	strlt	r2, [r6, #0]
 8002b1c:	43bb      	bics	r3, r7
 8002b1e:	d112      	bne.n	8002b46 <_dtoa_r+0x9e>
 8002b20:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8002b22:	f242 730f 	movw	r3, #9999	@ 0x270f
 8002b26:	6013      	str	r3, [r2, #0]
 8002b28:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8002b2c:	4323      	orrs	r3, r4
 8002b2e:	f000 854d 	beq.w	80035cc <_dtoa_r+0xb24>
 8002b32:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8002b34:	f8df a254 	ldr.w	sl, [pc, #596]	@ 8002d8c <_dtoa_r+0x2e4>
 8002b38:	2b00      	cmp	r3, #0
 8002b3a:	f000 854f 	beq.w	80035dc <_dtoa_r+0xb34>
 8002b3e:	f10a 0303 	add.w	r3, sl, #3
 8002b42:	f000 bd49 	b.w	80035d8 <_dtoa_r+0xb30>
 8002b46:	ed9d 7b02 	vldr	d7, [sp, #8]
 8002b4a:	2200      	movs	r2, #0
 8002b4c:	ec51 0b17 	vmov	r0, r1, d7
 8002b50:	2300      	movs	r3, #0
 8002b52:	ed8d 7b0c 	vstr	d7, [sp, #48]	@ 0x30
 8002b56:	f7fd ffbf 	bl	8000ad8 <__aeabi_dcmpeq>
 8002b5a:	4680      	mov	r8, r0
 8002b5c:	b158      	cbz	r0, 8002b76 <_dtoa_r+0xce>
 8002b5e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8002b60:	2301      	movs	r3, #1
 8002b62:	6013      	str	r3, [r2, #0]
 8002b64:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8002b66:	b113      	cbz	r3, 8002b6e <_dtoa_r+0xc6>
 8002b68:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8002b6a:	4b84      	ldr	r3, [pc, #528]	@ (8002d7c <_dtoa_r+0x2d4>)
 8002b6c:	6013      	str	r3, [r2, #0]
 8002b6e:	f8df a220 	ldr.w	sl, [pc, #544]	@ 8002d90 <_dtoa_r+0x2e8>
 8002b72:	f000 bd33 	b.w	80035dc <_dtoa_r+0xb34>
 8002b76:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 8002b7a:	aa16      	add	r2, sp, #88	@ 0x58
 8002b7c:	a917      	add	r1, sp, #92	@ 0x5c
 8002b7e:	4658      	mov	r0, fp
 8002b80:	f001 f980 	bl	8003e84 <__d2b>
 8002b84:	f3c7 560a 	ubfx	r6, r7, #20, #11
 8002b88:	4681      	mov	r9, r0
 8002b8a:	2e00      	cmp	r6, #0
 8002b8c:	d077      	beq.n	8002c7e <_dtoa_r+0x1d6>
 8002b8e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002b90:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 8002b94:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002b98:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002b9c:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8002ba0:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8002ba4:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8002ba8:	4619      	mov	r1, r3
 8002baa:	2200      	movs	r2, #0
 8002bac:	4b74      	ldr	r3, [pc, #464]	@ (8002d80 <_dtoa_r+0x2d8>)
 8002bae:	f7fd fb73 	bl	8000298 <__aeabi_dsub>
 8002bb2:	a369      	add	r3, pc, #420	@ (adr r3, 8002d58 <_dtoa_r+0x2b0>)
 8002bb4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002bb8:	f7fd fd26 	bl	8000608 <__aeabi_dmul>
 8002bbc:	a368      	add	r3, pc, #416	@ (adr r3, 8002d60 <_dtoa_r+0x2b8>)
 8002bbe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002bc2:	f7fd fb6b 	bl	800029c <__adddf3>
 8002bc6:	4604      	mov	r4, r0
 8002bc8:	4630      	mov	r0, r6
 8002bca:	460d      	mov	r5, r1
 8002bcc:	f7fd fcb2 	bl	8000534 <__aeabi_i2d>
 8002bd0:	a365      	add	r3, pc, #404	@ (adr r3, 8002d68 <_dtoa_r+0x2c0>)
 8002bd2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002bd6:	f7fd fd17 	bl	8000608 <__aeabi_dmul>
 8002bda:	4602      	mov	r2, r0
 8002bdc:	460b      	mov	r3, r1
 8002bde:	4620      	mov	r0, r4
 8002be0:	4629      	mov	r1, r5
 8002be2:	f7fd fb5b 	bl	800029c <__adddf3>
 8002be6:	4604      	mov	r4, r0
 8002be8:	460d      	mov	r5, r1
 8002bea:	f7fd ffbd 	bl	8000b68 <__aeabi_d2iz>
 8002bee:	2200      	movs	r2, #0
 8002bf0:	4607      	mov	r7, r0
 8002bf2:	2300      	movs	r3, #0
 8002bf4:	4620      	mov	r0, r4
 8002bf6:	4629      	mov	r1, r5
 8002bf8:	f7fd ff78 	bl	8000aec <__aeabi_dcmplt>
 8002bfc:	b140      	cbz	r0, 8002c10 <_dtoa_r+0x168>
 8002bfe:	4638      	mov	r0, r7
 8002c00:	f7fd fc98 	bl	8000534 <__aeabi_i2d>
 8002c04:	4622      	mov	r2, r4
 8002c06:	462b      	mov	r3, r5
 8002c08:	f7fd ff66 	bl	8000ad8 <__aeabi_dcmpeq>
 8002c0c:	b900      	cbnz	r0, 8002c10 <_dtoa_r+0x168>
 8002c0e:	3f01      	subs	r7, #1
 8002c10:	2f16      	cmp	r7, #22
 8002c12:	d851      	bhi.n	8002cb8 <_dtoa_r+0x210>
 8002c14:	4b5b      	ldr	r3, [pc, #364]	@ (8002d84 <_dtoa_r+0x2dc>)
 8002c16:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002c1a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c1e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002c22:	f7fd ff63 	bl	8000aec <__aeabi_dcmplt>
 8002c26:	2800      	cmp	r0, #0
 8002c28:	d048      	beq.n	8002cbc <_dtoa_r+0x214>
 8002c2a:	3f01      	subs	r7, #1
 8002c2c:	2300      	movs	r3, #0
 8002c2e:	9312      	str	r3, [sp, #72]	@ 0x48
 8002c30:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8002c32:	1b9b      	subs	r3, r3, r6
 8002c34:	1e5a      	subs	r2, r3, #1
 8002c36:	bf44      	itt	mi
 8002c38:	f1c3 0801 	rsbmi	r8, r3, #1
 8002c3c:	2300      	movmi	r3, #0
 8002c3e:	9208      	str	r2, [sp, #32]
 8002c40:	bf54      	ite	pl
 8002c42:	f04f 0800 	movpl.w	r8, #0
 8002c46:	9308      	strmi	r3, [sp, #32]
 8002c48:	2f00      	cmp	r7, #0
 8002c4a:	db39      	blt.n	8002cc0 <_dtoa_r+0x218>
 8002c4c:	9b08      	ldr	r3, [sp, #32]
 8002c4e:	970f      	str	r7, [sp, #60]	@ 0x3c
 8002c50:	443b      	add	r3, r7
 8002c52:	9308      	str	r3, [sp, #32]
 8002c54:	2300      	movs	r3, #0
 8002c56:	930a      	str	r3, [sp, #40]	@ 0x28
 8002c58:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002c5a:	2b09      	cmp	r3, #9
 8002c5c:	d864      	bhi.n	8002d28 <_dtoa_r+0x280>
 8002c5e:	2b05      	cmp	r3, #5
 8002c60:	bfc4      	itt	gt
 8002c62:	3b04      	subgt	r3, #4
 8002c64:	9309      	strgt	r3, [sp, #36]	@ 0x24
 8002c66:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002c68:	f1a3 0302 	sub.w	r3, r3, #2
 8002c6c:	bfcc      	ite	gt
 8002c6e:	2400      	movgt	r4, #0
 8002c70:	2401      	movle	r4, #1
 8002c72:	2b03      	cmp	r3, #3
 8002c74:	d863      	bhi.n	8002d3e <_dtoa_r+0x296>
 8002c76:	e8df f003 	tbb	[pc, r3]
 8002c7a:	372a      	.short	0x372a
 8002c7c:	5535      	.short	0x5535
 8002c7e:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	@ 0x58
 8002c82:	441e      	add	r6, r3
 8002c84:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8002c88:	2b20      	cmp	r3, #32
 8002c8a:	bfc1      	itttt	gt
 8002c8c:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8002c90:	409f      	lslgt	r7, r3
 8002c92:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8002c96:	fa24 f303 	lsrgt.w	r3, r4, r3
 8002c9a:	bfd6      	itet	le
 8002c9c:	f1c3 0320 	rsble	r3, r3, #32
 8002ca0:	ea47 0003 	orrgt.w	r0, r7, r3
 8002ca4:	fa04 f003 	lslle.w	r0, r4, r3
 8002ca8:	f7fd fc34 	bl	8000514 <__aeabi_ui2d>
 8002cac:	2201      	movs	r2, #1
 8002cae:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8002cb2:	3e01      	subs	r6, #1
 8002cb4:	9214      	str	r2, [sp, #80]	@ 0x50
 8002cb6:	e777      	b.n	8002ba8 <_dtoa_r+0x100>
 8002cb8:	2301      	movs	r3, #1
 8002cba:	e7b8      	b.n	8002c2e <_dtoa_r+0x186>
 8002cbc:	9012      	str	r0, [sp, #72]	@ 0x48
 8002cbe:	e7b7      	b.n	8002c30 <_dtoa_r+0x188>
 8002cc0:	427b      	negs	r3, r7
 8002cc2:	930a      	str	r3, [sp, #40]	@ 0x28
 8002cc4:	2300      	movs	r3, #0
 8002cc6:	eba8 0807 	sub.w	r8, r8, r7
 8002cca:	930f      	str	r3, [sp, #60]	@ 0x3c
 8002ccc:	e7c4      	b.n	8002c58 <_dtoa_r+0x1b0>
 8002cce:	2300      	movs	r3, #0
 8002cd0:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002cd2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002cd4:	2b00      	cmp	r3, #0
 8002cd6:	dc35      	bgt.n	8002d44 <_dtoa_r+0x29c>
 8002cd8:	2301      	movs	r3, #1
 8002cda:	9300      	str	r3, [sp, #0]
 8002cdc:	9307      	str	r3, [sp, #28]
 8002cde:	461a      	mov	r2, r3
 8002ce0:	920e      	str	r2, [sp, #56]	@ 0x38
 8002ce2:	e00b      	b.n	8002cfc <_dtoa_r+0x254>
 8002ce4:	2301      	movs	r3, #1
 8002ce6:	e7f3      	b.n	8002cd0 <_dtoa_r+0x228>
 8002ce8:	2300      	movs	r3, #0
 8002cea:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002cec:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002cee:	18fb      	adds	r3, r7, r3
 8002cf0:	9300      	str	r3, [sp, #0]
 8002cf2:	3301      	adds	r3, #1
 8002cf4:	2b01      	cmp	r3, #1
 8002cf6:	9307      	str	r3, [sp, #28]
 8002cf8:	bfb8      	it	lt
 8002cfa:	2301      	movlt	r3, #1
 8002cfc:	f8db 001c 	ldr.w	r0, [fp, #28]
 8002d00:	2100      	movs	r1, #0
 8002d02:	2204      	movs	r2, #4
 8002d04:	f102 0514 	add.w	r5, r2, #20
 8002d08:	429d      	cmp	r5, r3
 8002d0a:	d91f      	bls.n	8002d4c <_dtoa_r+0x2a4>
 8002d0c:	6041      	str	r1, [r0, #4]
 8002d0e:	4658      	mov	r0, fp
 8002d10:	f000 fd8e 	bl	8003830 <_Balloc>
 8002d14:	4682      	mov	sl, r0
 8002d16:	2800      	cmp	r0, #0
 8002d18:	d13c      	bne.n	8002d94 <_dtoa_r+0x2ec>
 8002d1a:	4b1b      	ldr	r3, [pc, #108]	@ (8002d88 <_dtoa_r+0x2e0>)
 8002d1c:	4602      	mov	r2, r0
 8002d1e:	f240 11af 	movw	r1, #431	@ 0x1af
 8002d22:	e6d8      	b.n	8002ad6 <_dtoa_r+0x2e>
 8002d24:	2301      	movs	r3, #1
 8002d26:	e7e0      	b.n	8002cea <_dtoa_r+0x242>
 8002d28:	2401      	movs	r4, #1
 8002d2a:	2300      	movs	r3, #0
 8002d2c:	9309      	str	r3, [sp, #36]	@ 0x24
 8002d2e:	940b      	str	r4, [sp, #44]	@ 0x2c
 8002d30:	f04f 33ff 	mov.w	r3, #4294967295
 8002d34:	9300      	str	r3, [sp, #0]
 8002d36:	9307      	str	r3, [sp, #28]
 8002d38:	2200      	movs	r2, #0
 8002d3a:	2312      	movs	r3, #18
 8002d3c:	e7d0      	b.n	8002ce0 <_dtoa_r+0x238>
 8002d3e:	2301      	movs	r3, #1
 8002d40:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002d42:	e7f5      	b.n	8002d30 <_dtoa_r+0x288>
 8002d44:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002d46:	9300      	str	r3, [sp, #0]
 8002d48:	9307      	str	r3, [sp, #28]
 8002d4a:	e7d7      	b.n	8002cfc <_dtoa_r+0x254>
 8002d4c:	3101      	adds	r1, #1
 8002d4e:	0052      	lsls	r2, r2, #1
 8002d50:	e7d8      	b.n	8002d04 <_dtoa_r+0x25c>
 8002d52:	bf00      	nop
 8002d54:	f3af 8000 	nop.w
 8002d58:	636f4361 	.word	0x636f4361
 8002d5c:	3fd287a7 	.word	0x3fd287a7
 8002d60:	8b60c8b3 	.word	0x8b60c8b3
 8002d64:	3fc68a28 	.word	0x3fc68a28
 8002d68:	509f79fb 	.word	0x509f79fb
 8002d6c:	3fd34413 	.word	0x3fd34413
 8002d70:	08004b64 	.word	0x08004b64
 8002d74:	08004b7b 	.word	0x08004b7b
 8002d78:	7ff00000 	.word	0x7ff00000
 8002d7c:	08004b34 	.word	0x08004b34
 8002d80:	3ff80000 	.word	0x3ff80000
 8002d84:	08004c78 	.word	0x08004c78
 8002d88:	08004bd3 	.word	0x08004bd3
 8002d8c:	08004b60 	.word	0x08004b60
 8002d90:	08004b33 	.word	0x08004b33
 8002d94:	f8db 301c 	ldr.w	r3, [fp, #28]
 8002d98:	6018      	str	r0, [r3, #0]
 8002d9a:	9b07      	ldr	r3, [sp, #28]
 8002d9c:	2b0e      	cmp	r3, #14
 8002d9e:	f200 80a4 	bhi.w	8002eea <_dtoa_r+0x442>
 8002da2:	2c00      	cmp	r4, #0
 8002da4:	f000 80a1 	beq.w	8002eea <_dtoa_r+0x442>
 8002da8:	2f00      	cmp	r7, #0
 8002daa:	dd33      	ble.n	8002e14 <_dtoa_r+0x36c>
 8002dac:	4bad      	ldr	r3, [pc, #692]	@ (8003064 <_dtoa_r+0x5bc>)
 8002dae:	f007 020f 	and.w	r2, r7, #15
 8002db2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002db6:	ed93 7b00 	vldr	d7, [r3]
 8002dba:	05f8      	lsls	r0, r7, #23
 8002dbc:	ed8d 7b04 	vstr	d7, [sp, #16]
 8002dc0:	ea4f 1427 	mov.w	r4, r7, asr #4
 8002dc4:	d516      	bpl.n	8002df4 <_dtoa_r+0x34c>
 8002dc6:	4ba8      	ldr	r3, [pc, #672]	@ (8003068 <_dtoa_r+0x5c0>)
 8002dc8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002dcc:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002dd0:	f7fd fd44 	bl	800085c <__aeabi_ddiv>
 8002dd4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002dd8:	f004 040f 	and.w	r4, r4, #15
 8002ddc:	2603      	movs	r6, #3
 8002dde:	4da2      	ldr	r5, [pc, #648]	@ (8003068 <_dtoa_r+0x5c0>)
 8002de0:	b954      	cbnz	r4, 8002df8 <_dtoa_r+0x350>
 8002de2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002de6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002dea:	f7fd fd37 	bl	800085c <__aeabi_ddiv>
 8002dee:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002df2:	e028      	b.n	8002e46 <_dtoa_r+0x39e>
 8002df4:	2602      	movs	r6, #2
 8002df6:	e7f2      	b.n	8002dde <_dtoa_r+0x336>
 8002df8:	07e1      	lsls	r1, r4, #31
 8002dfa:	d508      	bpl.n	8002e0e <_dtoa_r+0x366>
 8002dfc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002e00:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002e04:	f7fd fc00 	bl	8000608 <__aeabi_dmul>
 8002e08:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002e0c:	3601      	adds	r6, #1
 8002e0e:	1064      	asrs	r4, r4, #1
 8002e10:	3508      	adds	r5, #8
 8002e12:	e7e5      	b.n	8002de0 <_dtoa_r+0x338>
 8002e14:	f000 80d2 	beq.w	8002fbc <_dtoa_r+0x514>
 8002e18:	427c      	negs	r4, r7
 8002e1a:	4b92      	ldr	r3, [pc, #584]	@ (8003064 <_dtoa_r+0x5bc>)
 8002e1c:	4d92      	ldr	r5, [pc, #584]	@ (8003068 <_dtoa_r+0x5c0>)
 8002e1e:	f004 020f 	and.w	r2, r4, #15
 8002e22:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002e26:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002e2a:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002e2e:	f7fd fbeb 	bl	8000608 <__aeabi_dmul>
 8002e32:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002e36:	1124      	asrs	r4, r4, #4
 8002e38:	2300      	movs	r3, #0
 8002e3a:	2602      	movs	r6, #2
 8002e3c:	2c00      	cmp	r4, #0
 8002e3e:	f040 80b2 	bne.w	8002fa6 <_dtoa_r+0x4fe>
 8002e42:	2b00      	cmp	r3, #0
 8002e44:	d1d3      	bne.n	8002dee <_dtoa_r+0x346>
 8002e46:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8002e48:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8002e4c:	2b00      	cmp	r3, #0
 8002e4e:	f000 80b7 	beq.w	8002fc0 <_dtoa_r+0x518>
 8002e52:	4b86      	ldr	r3, [pc, #536]	@ (800306c <_dtoa_r+0x5c4>)
 8002e54:	2200      	movs	r2, #0
 8002e56:	4620      	mov	r0, r4
 8002e58:	4629      	mov	r1, r5
 8002e5a:	f7fd fe47 	bl	8000aec <__aeabi_dcmplt>
 8002e5e:	2800      	cmp	r0, #0
 8002e60:	f000 80ae 	beq.w	8002fc0 <_dtoa_r+0x518>
 8002e64:	9b07      	ldr	r3, [sp, #28]
 8002e66:	2b00      	cmp	r3, #0
 8002e68:	f000 80aa 	beq.w	8002fc0 <_dtoa_r+0x518>
 8002e6c:	9b00      	ldr	r3, [sp, #0]
 8002e6e:	2b00      	cmp	r3, #0
 8002e70:	dd37      	ble.n	8002ee2 <_dtoa_r+0x43a>
 8002e72:	1e7b      	subs	r3, r7, #1
 8002e74:	9304      	str	r3, [sp, #16]
 8002e76:	4620      	mov	r0, r4
 8002e78:	4b7d      	ldr	r3, [pc, #500]	@ (8003070 <_dtoa_r+0x5c8>)
 8002e7a:	2200      	movs	r2, #0
 8002e7c:	4629      	mov	r1, r5
 8002e7e:	f7fd fbc3 	bl	8000608 <__aeabi_dmul>
 8002e82:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002e86:	9c00      	ldr	r4, [sp, #0]
 8002e88:	3601      	adds	r6, #1
 8002e8a:	4630      	mov	r0, r6
 8002e8c:	f7fd fb52 	bl	8000534 <__aeabi_i2d>
 8002e90:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002e94:	f7fd fbb8 	bl	8000608 <__aeabi_dmul>
 8002e98:	4b76      	ldr	r3, [pc, #472]	@ (8003074 <_dtoa_r+0x5cc>)
 8002e9a:	2200      	movs	r2, #0
 8002e9c:	f7fd f9fe 	bl	800029c <__adddf3>
 8002ea0:	4605      	mov	r5, r0
 8002ea2:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8002ea6:	2c00      	cmp	r4, #0
 8002ea8:	f040 808d 	bne.w	8002fc6 <_dtoa_r+0x51e>
 8002eac:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002eb0:	4b71      	ldr	r3, [pc, #452]	@ (8003078 <_dtoa_r+0x5d0>)
 8002eb2:	2200      	movs	r2, #0
 8002eb4:	f7fd f9f0 	bl	8000298 <__aeabi_dsub>
 8002eb8:	4602      	mov	r2, r0
 8002eba:	460b      	mov	r3, r1
 8002ebc:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002ec0:	462a      	mov	r2, r5
 8002ec2:	4633      	mov	r3, r6
 8002ec4:	f7fd fe30 	bl	8000b28 <__aeabi_dcmpgt>
 8002ec8:	2800      	cmp	r0, #0
 8002eca:	f040 828b 	bne.w	80033e4 <_dtoa_r+0x93c>
 8002ece:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002ed2:	462a      	mov	r2, r5
 8002ed4:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8002ed8:	f7fd fe08 	bl	8000aec <__aeabi_dcmplt>
 8002edc:	2800      	cmp	r0, #0
 8002ede:	f040 8128 	bne.w	8003132 <_dtoa_r+0x68a>
 8002ee2:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 8002ee6:	e9cd 3402 	strd	r3, r4, [sp, #8]
 8002eea:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8002eec:	2b00      	cmp	r3, #0
 8002eee:	f2c0 815a 	blt.w	80031a6 <_dtoa_r+0x6fe>
 8002ef2:	2f0e      	cmp	r7, #14
 8002ef4:	f300 8157 	bgt.w	80031a6 <_dtoa_r+0x6fe>
 8002ef8:	4b5a      	ldr	r3, [pc, #360]	@ (8003064 <_dtoa_r+0x5bc>)
 8002efa:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002efe:	ed93 7b00 	vldr	d7, [r3]
 8002f02:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002f04:	2b00      	cmp	r3, #0
 8002f06:	ed8d 7b00 	vstr	d7, [sp]
 8002f0a:	da03      	bge.n	8002f14 <_dtoa_r+0x46c>
 8002f0c:	9b07      	ldr	r3, [sp, #28]
 8002f0e:	2b00      	cmp	r3, #0
 8002f10:	f340 8101 	ble.w	8003116 <_dtoa_r+0x66e>
 8002f14:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8002f18:	4656      	mov	r6, sl
 8002f1a:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002f1e:	4620      	mov	r0, r4
 8002f20:	4629      	mov	r1, r5
 8002f22:	f7fd fc9b 	bl	800085c <__aeabi_ddiv>
 8002f26:	f7fd fe1f 	bl	8000b68 <__aeabi_d2iz>
 8002f2a:	4680      	mov	r8, r0
 8002f2c:	f7fd fb02 	bl	8000534 <__aeabi_i2d>
 8002f30:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002f34:	f7fd fb68 	bl	8000608 <__aeabi_dmul>
 8002f38:	4602      	mov	r2, r0
 8002f3a:	460b      	mov	r3, r1
 8002f3c:	4620      	mov	r0, r4
 8002f3e:	4629      	mov	r1, r5
 8002f40:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8002f44:	f7fd f9a8 	bl	8000298 <__aeabi_dsub>
 8002f48:	f806 4b01 	strb.w	r4, [r6], #1
 8002f4c:	9d07      	ldr	r5, [sp, #28]
 8002f4e:	eba6 040a 	sub.w	r4, r6, sl
 8002f52:	42a5      	cmp	r5, r4
 8002f54:	4602      	mov	r2, r0
 8002f56:	460b      	mov	r3, r1
 8002f58:	f040 8117 	bne.w	800318a <_dtoa_r+0x6e2>
 8002f5c:	f7fd f99e 	bl	800029c <__adddf3>
 8002f60:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002f64:	4604      	mov	r4, r0
 8002f66:	460d      	mov	r5, r1
 8002f68:	f7fd fdde 	bl	8000b28 <__aeabi_dcmpgt>
 8002f6c:	2800      	cmp	r0, #0
 8002f6e:	f040 80f9 	bne.w	8003164 <_dtoa_r+0x6bc>
 8002f72:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002f76:	4620      	mov	r0, r4
 8002f78:	4629      	mov	r1, r5
 8002f7a:	f7fd fdad 	bl	8000ad8 <__aeabi_dcmpeq>
 8002f7e:	b118      	cbz	r0, 8002f88 <_dtoa_r+0x4e0>
 8002f80:	f018 0f01 	tst.w	r8, #1
 8002f84:	f040 80ee 	bne.w	8003164 <_dtoa_r+0x6bc>
 8002f88:	4649      	mov	r1, r9
 8002f8a:	4658      	mov	r0, fp
 8002f8c:	f000 fc90 	bl	80038b0 <_Bfree>
 8002f90:	2300      	movs	r3, #0
 8002f92:	7033      	strb	r3, [r6, #0]
 8002f94:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8002f96:	3701      	adds	r7, #1
 8002f98:	601f      	str	r7, [r3, #0]
 8002f9a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8002f9c:	2b00      	cmp	r3, #0
 8002f9e:	f000 831d 	beq.w	80035dc <_dtoa_r+0xb34>
 8002fa2:	601e      	str	r6, [r3, #0]
 8002fa4:	e31a      	b.n	80035dc <_dtoa_r+0xb34>
 8002fa6:	07e2      	lsls	r2, r4, #31
 8002fa8:	d505      	bpl.n	8002fb6 <_dtoa_r+0x50e>
 8002faa:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002fae:	f7fd fb2b 	bl	8000608 <__aeabi_dmul>
 8002fb2:	3601      	adds	r6, #1
 8002fb4:	2301      	movs	r3, #1
 8002fb6:	1064      	asrs	r4, r4, #1
 8002fb8:	3508      	adds	r5, #8
 8002fba:	e73f      	b.n	8002e3c <_dtoa_r+0x394>
 8002fbc:	2602      	movs	r6, #2
 8002fbe:	e742      	b.n	8002e46 <_dtoa_r+0x39e>
 8002fc0:	9c07      	ldr	r4, [sp, #28]
 8002fc2:	9704      	str	r7, [sp, #16]
 8002fc4:	e761      	b.n	8002e8a <_dtoa_r+0x3e2>
 8002fc6:	4b27      	ldr	r3, [pc, #156]	@ (8003064 <_dtoa_r+0x5bc>)
 8002fc8:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8002fca:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8002fce:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8002fd2:	4454      	add	r4, sl
 8002fd4:	2900      	cmp	r1, #0
 8002fd6:	d053      	beq.n	8003080 <_dtoa_r+0x5d8>
 8002fd8:	4928      	ldr	r1, [pc, #160]	@ (800307c <_dtoa_r+0x5d4>)
 8002fda:	2000      	movs	r0, #0
 8002fdc:	f7fd fc3e 	bl	800085c <__aeabi_ddiv>
 8002fe0:	4633      	mov	r3, r6
 8002fe2:	462a      	mov	r2, r5
 8002fe4:	f7fd f958 	bl	8000298 <__aeabi_dsub>
 8002fe8:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002fec:	4656      	mov	r6, sl
 8002fee:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002ff2:	f7fd fdb9 	bl	8000b68 <__aeabi_d2iz>
 8002ff6:	4605      	mov	r5, r0
 8002ff8:	f7fd fa9c 	bl	8000534 <__aeabi_i2d>
 8002ffc:	4602      	mov	r2, r0
 8002ffe:	460b      	mov	r3, r1
 8003000:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003004:	f7fd f948 	bl	8000298 <__aeabi_dsub>
 8003008:	3530      	adds	r5, #48	@ 0x30
 800300a:	4602      	mov	r2, r0
 800300c:	460b      	mov	r3, r1
 800300e:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8003012:	f806 5b01 	strb.w	r5, [r6], #1
 8003016:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 800301a:	f7fd fd67 	bl	8000aec <__aeabi_dcmplt>
 800301e:	2800      	cmp	r0, #0
 8003020:	d171      	bne.n	8003106 <_dtoa_r+0x65e>
 8003022:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003026:	4911      	ldr	r1, [pc, #68]	@ (800306c <_dtoa_r+0x5c4>)
 8003028:	2000      	movs	r0, #0
 800302a:	f7fd f935 	bl	8000298 <__aeabi_dsub>
 800302e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8003032:	f7fd fd5b 	bl	8000aec <__aeabi_dcmplt>
 8003036:	2800      	cmp	r0, #0
 8003038:	f040 8095 	bne.w	8003166 <_dtoa_r+0x6be>
 800303c:	42a6      	cmp	r6, r4
 800303e:	f43f af50 	beq.w	8002ee2 <_dtoa_r+0x43a>
 8003042:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8003046:	4b0a      	ldr	r3, [pc, #40]	@ (8003070 <_dtoa_r+0x5c8>)
 8003048:	2200      	movs	r2, #0
 800304a:	f7fd fadd 	bl	8000608 <__aeabi_dmul>
 800304e:	4b08      	ldr	r3, [pc, #32]	@ (8003070 <_dtoa_r+0x5c8>)
 8003050:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8003054:	2200      	movs	r2, #0
 8003056:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800305a:	f7fd fad5 	bl	8000608 <__aeabi_dmul>
 800305e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003062:	e7c4      	b.n	8002fee <_dtoa_r+0x546>
 8003064:	08004c78 	.word	0x08004c78
 8003068:	08004c50 	.word	0x08004c50
 800306c:	3ff00000 	.word	0x3ff00000
 8003070:	40240000 	.word	0x40240000
 8003074:	401c0000 	.word	0x401c0000
 8003078:	40140000 	.word	0x40140000
 800307c:	3fe00000 	.word	0x3fe00000
 8003080:	4631      	mov	r1, r6
 8003082:	4628      	mov	r0, r5
 8003084:	f7fd fac0 	bl	8000608 <__aeabi_dmul>
 8003088:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 800308c:	9415      	str	r4, [sp, #84]	@ 0x54
 800308e:	4656      	mov	r6, sl
 8003090:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003094:	f7fd fd68 	bl	8000b68 <__aeabi_d2iz>
 8003098:	4605      	mov	r5, r0
 800309a:	f7fd fa4b 	bl	8000534 <__aeabi_i2d>
 800309e:	4602      	mov	r2, r0
 80030a0:	460b      	mov	r3, r1
 80030a2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80030a6:	f7fd f8f7 	bl	8000298 <__aeabi_dsub>
 80030aa:	3530      	adds	r5, #48	@ 0x30
 80030ac:	f806 5b01 	strb.w	r5, [r6], #1
 80030b0:	4602      	mov	r2, r0
 80030b2:	460b      	mov	r3, r1
 80030b4:	42a6      	cmp	r6, r4
 80030b6:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80030ba:	f04f 0200 	mov.w	r2, #0
 80030be:	d124      	bne.n	800310a <_dtoa_r+0x662>
 80030c0:	4bac      	ldr	r3, [pc, #688]	@ (8003374 <_dtoa_r+0x8cc>)
 80030c2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 80030c6:	f7fd f8e9 	bl	800029c <__adddf3>
 80030ca:	4602      	mov	r2, r0
 80030cc:	460b      	mov	r3, r1
 80030ce:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80030d2:	f7fd fd29 	bl	8000b28 <__aeabi_dcmpgt>
 80030d6:	2800      	cmp	r0, #0
 80030d8:	d145      	bne.n	8003166 <_dtoa_r+0x6be>
 80030da:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 80030de:	49a5      	ldr	r1, [pc, #660]	@ (8003374 <_dtoa_r+0x8cc>)
 80030e0:	2000      	movs	r0, #0
 80030e2:	f7fd f8d9 	bl	8000298 <__aeabi_dsub>
 80030e6:	4602      	mov	r2, r0
 80030e8:	460b      	mov	r3, r1
 80030ea:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80030ee:	f7fd fcfd 	bl	8000aec <__aeabi_dcmplt>
 80030f2:	2800      	cmp	r0, #0
 80030f4:	f43f aef5 	beq.w	8002ee2 <_dtoa_r+0x43a>
 80030f8:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 80030fa:	1e73      	subs	r3, r6, #1
 80030fc:	9315      	str	r3, [sp, #84]	@ 0x54
 80030fe:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8003102:	2b30      	cmp	r3, #48	@ 0x30
 8003104:	d0f8      	beq.n	80030f8 <_dtoa_r+0x650>
 8003106:	9f04      	ldr	r7, [sp, #16]
 8003108:	e73e      	b.n	8002f88 <_dtoa_r+0x4e0>
 800310a:	4b9b      	ldr	r3, [pc, #620]	@ (8003378 <_dtoa_r+0x8d0>)
 800310c:	f7fd fa7c 	bl	8000608 <__aeabi_dmul>
 8003110:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003114:	e7bc      	b.n	8003090 <_dtoa_r+0x5e8>
 8003116:	d10c      	bne.n	8003132 <_dtoa_r+0x68a>
 8003118:	4b98      	ldr	r3, [pc, #608]	@ (800337c <_dtoa_r+0x8d4>)
 800311a:	2200      	movs	r2, #0
 800311c:	e9dd 0100 	ldrd	r0, r1, [sp]
 8003120:	f7fd fa72 	bl	8000608 <__aeabi_dmul>
 8003124:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003128:	f7fd fcf4 	bl	8000b14 <__aeabi_dcmpge>
 800312c:	2800      	cmp	r0, #0
 800312e:	f000 8157 	beq.w	80033e0 <_dtoa_r+0x938>
 8003132:	2400      	movs	r4, #0
 8003134:	4625      	mov	r5, r4
 8003136:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003138:	43db      	mvns	r3, r3
 800313a:	9304      	str	r3, [sp, #16]
 800313c:	4656      	mov	r6, sl
 800313e:	2700      	movs	r7, #0
 8003140:	4621      	mov	r1, r4
 8003142:	4658      	mov	r0, fp
 8003144:	f000 fbb4 	bl	80038b0 <_Bfree>
 8003148:	2d00      	cmp	r5, #0
 800314a:	d0dc      	beq.n	8003106 <_dtoa_r+0x65e>
 800314c:	b12f      	cbz	r7, 800315a <_dtoa_r+0x6b2>
 800314e:	42af      	cmp	r7, r5
 8003150:	d003      	beq.n	800315a <_dtoa_r+0x6b2>
 8003152:	4639      	mov	r1, r7
 8003154:	4658      	mov	r0, fp
 8003156:	f000 fbab 	bl	80038b0 <_Bfree>
 800315a:	4629      	mov	r1, r5
 800315c:	4658      	mov	r0, fp
 800315e:	f000 fba7 	bl	80038b0 <_Bfree>
 8003162:	e7d0      	b.n	8003106 <_dtoa_r+0x65e>
 8003164:	9704      	str	r7, [sp, #16]
 8003166:	4633      	mov	r3, r6
 8003168:	461e      	mov	r6, r3
 800316a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800316e:	2a39      	cmp	r2, #57	@ 0x39
 8003170:	d107      	bne.n	8003182 <_dtoa_r+0x6da>
 8003172:	459a      	cmp	sl, r3
 8003174:	d1f8      	bne.n	8003168 <_dtoa_r+0x6c0>
 8003176:	9a04      	ldr	r2, [sp, #16]
 8003178:	3201      	adds	r2, #1
 800317a:	9204      	str	r2, [sp, #16]
 800317c:	2230      	movs	r2, #48	@ 0x30
 800317e:	f88a 2000 	strb.w	r2, [sl]
 8003182:	781a      	ldrb	r2, [r3, #0]
 8003184:	3201      	adds	r2, #1
 8003186:	701a      	strb	r2, [r3, #0]
 8003188:	e7bd      	b.n	8003106 <_dtoa_r+0x65e>
 800318a:	4b7b      	ldr	r3, [pc, #492]	@ (8003378 <_dtoa_r+0x8d0>)
 800318c:	2200      	movs	r2, #0
 800318e:	f7fd fa3b 	bl	8000608 <__aeabi_dmul>
 8003192:	2200      	movs	r2, #0
 8003194:	2300      	movs	r3, #0
 8003196:	4604      	mov	r4, r0
 8003198:	460d      	mov	r5, r1
 800319a:	f7fd fc9d 	bl	8000ad8 <__aeabi_dcmpeq>
 800319e:	2800      	cmp	r0, #0
 80031a0:	f43f aebb 	beq.w	8002f1a <_dtoa_r+0x472>
 80031a4:	e6f0      	b.n	8002f88 <_dtoa_r+0x4e0>
 80031a6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80031a8:	2a00      	cmp	r2, #0
 80031aa:	f000 80db 	beq.w	8003364 <_dtoa_r+0x8bc>
 80031ae:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80031b0:	2a01      	cmp	r2, #1
 80031b2:	f300 80bf 	bgt.w	8003334 <_dtoa_r+0x88c>
 80031b6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80031b8:	2a00      	cmp	r2, #0
 80031ba:	f000 80b7 	beq.w	800332c <_dtoa_r+0x884>
 80031be:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 80031c2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80031c4:	4646      	mov	r6, r8
 80031c6:	9a08      	ldr	r2, [sp, #32]
 80031c8:	2101      	movs	r1, #1
 80031ca:	441a      	add	r2, r3
 80031cc:	4658      	mov	r0, fp
 80031ce:	4498      	add	r8, r3
 80031d0:	9208      	str	r2, [sp, #32]
 80031d2:	f000 fc21 	bl	8003a18 <__i2b>
 80031d6:	4605      	mov	r5, r0
 80031d8:	b15e      	cbz	r6, 80031f2 <_dtoa_r+0x74a>
 80031da:	9b08      	ldr	r3, [sp, #32]
 80031dc:	2b00      	cmp	r3, #0
 80031de:	dd08      	ble.n	80031f2 <_dtoa_r+0x74a>
 80031e0:	42b3      	cmp	r3, r6
 80031e2:	9a08      	ldr	r2, [sp, #32]
 80031e4:	bfa8      	it	ge
 80031e6:	4633      	movge	r3, r6
 80031e8:	eba8 0803 	sub.w	r8, r8, r3
 80031ec:	1af6      	subs	r6, r6, r3
 80031ee:	1ad3      	subs	r3, r2, r3
 80031f0:	9308      	str	r3, [sp, #32]
 80031f2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80031f4:	b1f3      	cbz	r3, 8003234 <_dtoa_r+0x78c>
 80031f6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80031f8:	2b00      	cmp	r3, #0
 80031fa:	f000 80b7 	beq.w	800336c <_dtoa_r+0x8c4>
 80031fe:	b18c      	cbz	r4, 8003224 <_dtoa_r+0x77c>
 8003200:	4629      	mov	r1, r5
 8003202:	4622      	mov	r2, r4
 8003204:	4658      	mov	r0, fp
 8003206:	f000 fcc7 	bl	8003b98 <__pow5mult>
 800320a:	464a      	mov	r2, r9
 800320c:	4601      	mov	r1, r0
 800320e:	4605      	mov	r5, r0
 8003210:	4658      	mov	r0, fp
 8003212:	f000 fc17 	bl	8003a44 <__multiply>
 8003216:	4649      	mov	r1, r9
 8003218:	9004      	str	r0, [sp, #16]
 800321a:	4658      	mov	r0, fp
 800321c:	f000 fb48 	bl	80038b0 <_Bfree>
 8003220:	9b04      	ldr	r3, [sp, #16]
 8003222:	4699      	mov	r9, r3
 8003224:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003226:	1b1a      	subs	r2, r3, r4
 8003228:	d004      	beq.n	8003234 <_dtoa_r+0x78c>
 800322a:	4649      	mov	r1, r9
 800322c:	4658      	mov	r0, fp
 800322e:	f000 fcb3 	bl	8003b98 <__pow5mult>
 8003232:	4681      	mov	r9, r0
 8003234:	2101      	movs	r1, #1
 8003236:	4658      	mov	r0, fp
 8003238:	f000 fbee 	bl	8003a18 <__i2b>
 800323c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800323e:	4604      	mov	r4, r0
 8003240:	2b00      	cmp	r3, #0
 8003242:	f000 81cf 	beq.w	80035e4 <_dtoa_r+0xb3c>
 8003246:	461a      	mov	r2, r3
 8003248:	4601      	mov	r1, r0
 800324a:	4658      	mov	r0, fp
 800324c:	f000 fca4 	bl	8003b98 <__pow5mult>
 8003250:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003252:	2b01      	cmp	r3, #1
 8003254:	4604      	mov	r4, r0
 8003256:	f300 8095 	bgt.w	8003384 <_dtoa_r+0x8dc>
 800325a:	9b02      	ldr	r3, [sp, #8]
 800325c:	2b00      	cmp	r3, #0
 800325e:	f040 8087 	bne.w	8003370 <_dtoa_r+0x8c8>
 8003262:	9b03      	ldr	r3, [sp, #12]
 8003264:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003268:	2b00      	cmp	r3, #0
 800326a:	f040 8089 	bne.w	8003380 <_dtoa_r+0x8d8>
 800326e:	9b03      	ldr	r3, [sp, #12]
 8003270:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8003274:	0d1b      	lsrs	r3, r3, #20
 8003276:	051b      	lsls	r3, r3, #20
 8003278:	b12b      	cbz	r3, 8003286 <_dtoa_r+0x7de>
 800327a:	9b08      	ldr	r3, [sp, #32]
 800327c:	3301      	adds	r3, #1
 800327e:	9308      	str	r3, [sp, #32]
 8003280:	f108 0801 	add.w	r8, r8, #1
 8003284:	2301      	movs	r3, #1
 8003286:	930a      	str	r3, [sp, #40]	@ 0x28
 8003288:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800328a:	2b00      	cmp	r3, #0
 800328c:	f000 81b0 	beq.w	80035f0 <_dtoa_r+0xb48>
 8003290:	6923      	ldr	r3, [r4, #16]
 8003292:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8003296:	6918      	ldr	r0, [r3, #16]
 8003298:	f000 fb72 	bl	8003980 <__hi0bits>
 800329c:	f1c0 0020 	rsb	r0, r0, #32
 80032a0:	9b08      	ldr	r3, [sp, #32]
 80032a2:	4418      	add	r0, r3
 80032a4:	f010 001f 	ands.w	r0, r0, #31
 80032a8:	d077      	beq.n	800339a <_dtoa_r+0x8f2>
 80032aa:	f1c0 0320 	rsb	r3, r0, #32
 80032ae:	2b04      	cmp	r3, #4
 80032b0:	dd6b      	ble.n	800338a <_dtoa_r+0x8e2>
 80032b2:	9b08      	ldr	r3, [sp, #32]
 80032b4:	f1c0 001c 	rsb	r0, r0, #28
 80032b8:	4403      	add	r3, r0
 80032ba:	4480      	add	r8, r0
 80032bc:	4406      	add	r6, r0
 80032be:	9308      	str	r3, [sp, #32]
 80032c0:	f1b8 0f00 	cmp.w	r8, #0
 80032c4:	dd05      	ble.n	80032d2 <_dtoa_r+0x82a>
 80032c6:	4649      	mov	r1, r9
 80032c8:	4642      	mov	r2, r8
 80032ca:	4658      	mov	r0, fp
 80032cc:	f000 fcbe 	bl	8003c4c <__lshift>
 80032d0:	4681      	mov	r9, r0
 80032d2:	9b08      	ldr	r3, [sp, #32]
 80032d4:	2b00      	cmp	r3, #0
 80032d6:	dd05      	ble.n	80032e4 <_dtoa_r+0x83c>
 80032d8:	4621      	mov	r1, r4
 80032da:	461a      	mov	r2, r3
 80032dc:	4658      	mov	r0, fp
 80032de:	f000 fcb5 	bl	8003c4c <__lshift>
 80032e2:	4604      	mov	r4, r0
 80032e4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80032e6:	2b00      	cmp	r3, #0
 80032e8:	d059      	beq.n	800339e <_dtoa_r+0x8f6>
 80032ea:	4621      	mov	r1, r4
 80032ec:	4648      	mov	r0, r9
 80032ee:	f000 fd19 	bl	8003d24 <__mcmp>
 80032f2:	2800      	cmp	r0, #0
 80032f4:	da53      	bge.n	800339e <_dtoa_r+0x8f6>
 80032f6:	1e7b      	subs	r3, r7, #1
 80032f8:	9304      	str	r3, [sp, #16]
 80032fa:	4649      	mov	r1, r9
 80032fc:	2300      	movs	r3, #0
 80032fe:	220a      	movs	r2, #10
 8003300:	4658      	mov	r0, fp
 8003302:	f000 faf7 	bl	80038f4 <__multadd>
 8003306:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003308:	4681      	mov	r9, r0
 800330a:	2b00      	cmp	r3, #0
 800330c:	f000 8172 	beq.w	80035f4 <_dtoa_r+0xb4c>
 8003310:	2300      	movs	r3, #0
 8003312:	4629      	mov	r1, r5
 8003314:	220a      	movs	r2, #10
 8003316:	4658      	mov	r0, fp
 8003318:	f000 faec 	bl	80038f4 <__multadd>
 800331c:	9b00      	ldr	r3, [sp, #0]
 800331e:	2b00      	cmp	r3, #0
 8003320:	4605      	mov	r5, r0
 8003322:	dc67      	bgt.n	80033f4 <_dtoa_r+0x94c>
 8003324:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003326:	2b02      	cmp	r3, #2
 8003328:	dc41      	bgt.n	80033ae <_dtoa_r+0x906>
 800332a:	e063      	b.n	80033f4 <_dtoa_r+0x94c>
 800332c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800332e:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8003332:	e746      	b.n	80031c2 <_dtoa_r+0x71a>
 8003334:	9b07      	ldr	r3, [sp, #28]
 8003336:	1e5c      	subs	r4, r3, #1
 8003338:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800333a:	42a3      	cmp	r3, r4
 800333c:	bfbf      	itttt	lt
 800333e:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8003340:	9a0f      	ldrlt	r2, [sp, #60]	@ 0x3c
 8003342:	940a      	strlt	r4, [sp, #40]	@ 0x28
 8003344:	1ae3      	sublt	r3, r4, r3
 8003346:	bfb4      	ite	lt
 8003348:	18d2      	addlt	r2, r2, r3
 800334a:	1b1c      	subge	r4, r3, r4
 800334c:	9b07      	ldr	r3, [sp, #28]
 800334e:	bfbc      	itt	lt
 8003350:	920f      	strlt	r2, [sp, #60]	@ 0x3c
 8003352:	2400      	movlt	r4, #0
 8003354:	2b00      	cmp	r3, #0
 8003356:	bfb5      	itete	lt
 8003358:	eba8 0603 	sublt.w	r6, r8, r3
 800335c:	9b07      	ldrge	r3, [sp, #28]
 800335e:	2300      	movlt	r3, #0
 8003360:	4646      	movge	r6, r8
 8003362:	e730      	b.n	80031c6 <_dtoa_r+0x71e>
 8003364:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8003366:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8003368:	4646      	mov	r6, r8
 800336a:	e735      	b.n	80031d8 <_dtoa_r+0x730>
 800336c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800336e:	e75c      	b.n	800322a <_dtoa_r+0x782>
 8003370:	2300      	movs	r3, #0
 8003372:	e788      	b.n	8003286 <_dtoa_r+0x7de>
 8003374:	3fe00000 	.word	0x3fe00000
 8003378:	40240000 	.word	0x40240000
 800337c:	40140000 	.word	0x40140000
 8003380:	9b02      	ldr	r3, [sp, #8]
 8003382:	e780      	b.n	8003286 <_dtoa_r+0x7de>
 8003384:	2300      	movs	r3, #0
 8003386:	930a      	str	r3, [sp, #40]	@ 0x28
 8003388:	e782      	b.n	8003290 <_dtoa_r+0x7e8>
 800338a:	d099      	beq.n	80032c0 <_dtoa_r+0x818>
 800338c:	9a08      	ldr	r2, [sp, #32]
 800338e:	331c      	adds	r3, #28
 8003390:	441a      	add	r2, r3
 8003392:	4498      	add	r8, r3
 8003394:	441e      	add	r6, r3
 8003396:	9208      	str	r2, [sp, #32]
 8003398:	e792      	b.n	80032c0 <_dtoa_r+0x818>
 800339a:	4603      	mov	r3, r0
 800339c:	e7f6      	b.n	800338c <_dtoa_r+0x8e4>
 800339e:	9b07      	ldr	r3, [sp, #28]
 80033a0:	9704      	str	r7, [sp, #16]
 80033a2:	2b00      	cmp	r3, #0
 80033a4:	dc20      	bgt.n	80033e8 <_dtoa_r+0x940>
 80033a6:	9300      	str	r3, [sp, #0]
 80033a8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80033aa:	2b02      	cmp	r3, #2
 80033ac:	dd1e      	ble.n	80033ec <_dtoa_r+0x944>
 80033ae:	9b00      	ldr	r3, [sp, #0]
 80033b0:	2b00      	cmp	r3, #0
 80033b2:	f47f aec0 	bne.w	8003136 <_dtoa_r+0x68e>
 80033b6:	4621      	mov	r1, r4
 80033b8:	2205      	movs	r2, #5
 80033ba:	4658      	mov	r0, fp
 80033bc:	f000 fa9a 	bl	80038f4 <__multadd>
 80033c0:	4601      	mov	r1, r0
 80033c2:	4604      	mov	r4, r0
 80033c4:	4648      	mov	r0, r9
 80033c6:	f000 fcad 	bl	8003d24 <__mcmp>
 80033ca:	2800      	cmp	r0, #0
 80033cc:	f77f aeb3 	ble.w	8003136 <_dtoa_r+0x68e>
 80033d0:	4656      	mov	r6, sl
 80033d2:	2331      	movs	r3, #49	@ 0x31
 80033d4:	f806 3b01 	strb.w	r3, [r6], #1
 80033d8:	9b04      	ldr	r3, [sp, #16]
 80033da:	3301      	adds	r3, #1
 80033dc:	9304      	str	r3, [sp, #16]
 80033de:	e6ae      	b.n	800313e <_dtoa_r+0x696>
 80033e0:	9c07      	ldr	r4, [sp, #28]
 80033e2:	9704      	str	r7, [sp, #16]
 80033e4:	4625      	mov	r5, r4
 80033e6:	e7f3      	b.n	80033d0 <_dtoa_r+0x928>
 80033e8:	9b07      	ldr	r3, [sp, #28]
 80033ea:	9300      	str	r3, [sp, #0]
 80033ec:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80033ee:	2b00      	cmp	r3, #0
 80033f0:	f000 8104 	beq.w	80035fc <_dtoa_r+0xb54>
 80033f4:	2e00      	cmp	r6, #0
 80033f6:	dd05      	ble.n	8003404 <_dtoa_r+0x95c>
 80033f8:	4629      	mov	r1, r5
 80033fa:	4632      	mov	r2, r6
 80033fc:	4658      	mov	r0, fp
 80033fe:	f000 fc25 	bl	8003c4c <__lshift>
 8003402:	4605      	mov	r5, r0
 8003404:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003406:	2b00      	cmp	r3, #0
 8003408:	d05a      	beq.n	80034c0 <_dtoa_r+0xa18>
 800340a:	6869      	ldr	r1, [r5, #4]
 800340c:	4658      	mov	r0, fp
 800340e:	f000 fa0f 	bl	8003830 <_Balloc>
 8003412:	4606      	mov	r6, r0
 8003414:	b928      	cbnz	r0, 8003422 <_dtoa_r+0x97a>
 8003416:	4b84      	ldr	r3, [pc, #528]	@ (8003628 <_dtoa_r+0xb80>)
 8003418:	4602      	mov	r2, r0
 800341a:	f240 21ef 	movw	r1, #751	@ 0x2ef
 800341e:	f7ff bb5a 	b.w	8002ad6 <_dtoa_r+0x2e>
 8003422:	692a      	ldr	r2, [r5, #16]
 8003424:	3202      	adds	r2, #2
 8003426:	0092      	lsls	r2, r2, #2
 8003428:	f105 010c 	add.w	r1, r5, #12
 800342c:	300c      	adds	r0, #12
 800342e:	f000 ffaf 	bl	8004390 <memcpy>
 8003432:	2201      	movs	r2, #1
 8003434:	4631      	mov	r1, r6
 8003436:	4658      	mov	r0, fp
 8003438:	f000 fc08 	bl	8003c4c <__lshift>
 800343c:	f10a 0301 	add.w	r3, sl, #1
 8003440:	9307      	str	r3, [sp, #28]
 8003442:	9b00      	ldr	r3, [sp, #0]
 8003444:	4453      	add	r3, sl
 8003446:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003448:	9b02      	ldr	r3, [sp, #8]
 800344a:	f003 0301 	and.w	r3, r3, #1
 800344e:	462f      	mov	r7, r5
 8003450:	930a      	str	r3, [sp, #40]	@ 0x28
 8003452:	4605      	mov	r5, r0
 8003454:	9b07      	ldr	r3, [sp, #28]
 8003456:	4621      	mov	r1, r4
 8003458:	3b01      	subs	r3, #1
 800345a:	4648      	mov	r0, r9
 800345c:	9300      	str	r3, [sp, #0]
 800345e:	f7ff fa9a 	bl	8002996 <quorem>
 8003462:	4639      	mov	r1, r7
 8003464:	9002      	str	r0, [sp, #8]
 8003466:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 800346a:	4648      	mov	r0, r9
 800346c:	f000 fc5a 	bl	8003d24 <__mcmp>
 8003470:	462a      	mov	r2, r5
 8003472:	9008      	str	r0, [sp, #32]
 8003474:	4621      	mov	r1, r4
 8003476:	4658      	mov	r0, fp
 8003478:	f000 fc70 	bl	8003d5c <__mdiff>
 800347c:	68c2      	ldr	r2, [r0, #12]
 800347e:	4606      	mov	r6, r0
 8003480:	bb02      	cbnz	r2, 80034c4 <_dtoa_r+0xa1c>
 8003482:	4601      	mov	r1, r0
 8003484:	4648      	mov	r0, r9
 8003486:	f000 fc4d 	bl	8003d24 <__mcmp>
 800348a:	4602      	mov	r2, r0
 800348c:	4631      	mov	r1, r6
 800348e:	4658      	mov	r0, fp
 8003490:	920e      	str	r2, [sp, #56]	@ 0x38
 8003492:	f000 fa0d 	bl	80038b0 <_Bfree>
 8003496:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003498:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800349a:	9e07      	ldr	r6, [sp, #28]
 800349c:	ea43 0102 	orr.w	r1, r3, r2
 80034a0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80034a2:	4319      	orrs	r1, r3
 80034a4:	d110      	bne.n	80034c8 <_dtoa_r+0xa20>
 80034a6:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 80034aa:	d029      	beq.n	8003500 <_dtoa_r+0xa58>
 80034ac:	9b08      	ldr	r3, [sp, #32]
 80034ae:	2b00      	cmp	r3, #0
 80034b0:	dd02      	ble.n	80034b8 <_dtoa_r+0xa10>
 80034b2:	9b02      	ldr	r3, [sp, #8]
 80034b4:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 80034b8:	9b00      	ldr	r3, [sp, #0]
 80034ba:	f883 8000 	strb.w	r8, [r3]
 80034be:	e63f      	b.n	8003140 <_dtoa_r+0x698>
 80034c0:	4628      	mov	r0, r5
 80034c2:	e7bb      	b.n	800343c <_dtoa_r+0x994>
 80034c4:	2201      	movs	r2, #1
 80034c6:	e7e1      	b.n	800348c <_dtoa_r+0x9e4>
 80034c8:	9b08      	ldr	r3, [sp, #32]
 80034ca:	2b00      	cmp	r3, #0
 80034cc:	db04      	blt.n	80034d8 <_dtoa_r+0xa30>
 80034ce:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80034d0:	430b      	orrs	r3, r1
 80034d2:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80034d4:	430b      	orrs	r3, r1
 80034d6:	d120      	bne.n	800351a <_dtoa_r+0xa72>
 80034d8:	2a00      	cmp	r2, #0
 80034da:	dded      	ble.n	80034b8 <_dtoa_r+0xa10>
 80034dc:	4649      	mov	r1, r9
 80034de:	2201      	movs	r2, #1
 80034e0:	4658      	mov	r0, fp
 80034e2:	f000 fbb3 	bl	8003c4c <__lshift>
 80034e6:	4621      	mov	r1, r4
 80034e8:	4681      	mov	r9, r0
 80034ea:	f000 fc1b 	bl	8003d24 <__mcmp>
 80034ee:	2800      	cmp	r0, #0
 80034f0:	dc03      	bgt.n	80034fa <_dtoa_r+0xa52>
 80034f2:	d1e1      	bne.n	80034b8 <_dtoa_r+0xa10>
 80034f4:	f018 0f01 	tst.w	r8, #1
 80034f8:	d0de      	beq.n	80034b8 <_dtoa_r+0xa10>
 80034fa:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 80034fe:	d1d8      	bne.n	80034b2 <_dtoa_r+0xa0a>
 8003500:	9a00      	ldr	r2, [sp, #0]
 8003502:	2339      	movs	r3, #57	@ 0x39
 8003504:	7013      	strb	r3, [r2, #0]
 8003506:	4633      	mov	r3, r6
 8003508:	461e      	mov	r6, r3
 800350a:	3b01      	subs	r3, #1
 800350c:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8003510:	2a39      	cmp	r2, #57	@ 0x39
 8003512:	d052      	beq.n	80035ba <_dtoa_r+0xb12>
 8003514:	3201      	adds	r2, #1
 8003516:	701a      	strb	r2, [r3, #0]
 8003518:	e612      	b.n	8003140 <_dtoa_r+0x698>
 800351a:	2a00      	cmp	r2, #0
 800351c:	dd07      	ble.n	800352e <_dtoa_r+0xa86>
 800351e:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8003522:	d0ed      	beq.n	8003500 <_dtoa_r+0xa58>
 8003524:	9a00      	ldr	r2, [sp, #0]
 8003526:	f108 0301 	add.w	r3, r8, #1
 800352a:	7013      	strb	r3, [r2, #0]
 800352c:	e608      	b.n	8003140 <_dtoa_r+0x698>
 800352e:	9b07      	ldr	r3, [sp, #28]
 8003530:	9a07      	ldr	r2, [sp, #28]
 8003532:	f803 8c01 	strb.w	r8, [r3, #-1]
 8003536:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003538:	4293      	cmp	r3, r2
 800353a:	d028      	beq.n	800358e <_dtoa_r+0xae6>
 800353c:	4649      	mov	r1, r9
 800353e:	2300      	movs	r3, #0
 8003540:	220a      	movs	r2, #10
 8003542:	4658      	mov	r0, fp
 8003544:	f000 f9d6 	bl	80038f4 <__multadd>
 8003548:	42af      	cmp	r7, r5
 800354a:	4681      	mov	r9, r0
 800354c:	f04f 0300 	mov.w	r3, #0
 8003550:	f04f 020a 	mov.w	r2, #10
 8003554:	4639      	mov	r1, r7
 8003556:	4658      	mov	r0, fp
 8003558:	d107      	bne.n	800356a <_dtoa_r+0xac2>
 800355a:	f000 f9cb 	bl	80038f4 <__multadd>
 800355e:	4607      	mov	r7, r0
 8003560:	4605      	mov	r5, r0
 8003562:	9b07      	ldr	r3, [sp, #28]
 8003564:	3301      	adds	r3, #1
 8003566:	9307      	str	r3, [sp, #28]
 8003568:	e774      	b.n	8003454 <_dtoa_r+0x9ac>
 800356a:	f000 f9c3 	bl	80038f4 <__multadd>
 800356e:	4629      	mov	r1, r5
 8003570:	4607      	mov	r7, r0
 8003572:	2300      	movs	r3, #0
 8003574:	220a      	movs	r2, #10
 8003576:	4658      	mov	r0, fp
 8003578:	f000 f9bc 	bl	80038f4 <__multadd>
 800357c:	4605      	mov	r5, r0
 800357e:	e7f0      	b.n	8003562 <_dtoa_r+0xaba>
 8003580:	9b00      	ldr	r3, [sp, #0]
 8003582:	2b00      	cmp	r3, #0
 8003584:	bfcc      	ite	gt
 8003586:	461e      	movgt	r6, r3
 8003588:	2601      	movle	r6, #1
 800358a:	4456      	add	r6, sl
 800358c:	2700      	movs	r7, #0
 800358e:	4649      	mov	r1, r9
 8003590:	2201      	movs	r2, #1
 8003592:	4658      	mov	r0, fp
 8003594:	f000 fb5a 	bl	8003c4c <__lshift>
 8003598:	4621      	mov	r1, r4
 800359a:	4681      	mov	r9, r0
 800359c:	f000 fbc2 	bl	8003d24 <__mcmp>
 80035a0:	2800      	cmp	r0, #0
 80035a2:	dcb0      	bgt.n	8003506 <_dtoa_r+0xa5e>
 80035a4:	d102      	bne.n	80035ac <_dtoa_r+0xb04>
 80035a6:	f018 0f01 	tst.w	r8, #1
 80035aa:	d1ac      	bne.n	8003506 <_dtoa_r+0xa5e>
 80035ac:	4633      	mov	r3, r6
 80035ae:	461e      	mov	r6, r3
 80035b0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80035b4:	2a30      	cmp	r2, #48	@ 0x30
 80035b6:	d0fa      	beq.n	80035ae <_dtoa_r+0xb06>
 80035b8:	e5c2      	b.n	8003140 <_dtoa_r+0x698>
 80035ba:	459a      	cmp	sl, r3
 80035bc:	d1a4      	bne.n	8003508 <_dtoa_r+0xa60>
 80035be:	9b04      	ldr	r3, [sp, #16]
 80035c0:	3301      	adds	r3, #1
 80035c2:	9304      	str	r3, [sp, #16]
 80035c4:	2331      	movs	r3, #49	@ 0x31
 80035c6:	f88a 3000 	strb.w	r3, [sl]
 80035ca:	e5b9      	b.n	8003140 <_dtoa_r+0x698>
 80035cc:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80035ce:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 800362c <_dtoa_r+0xb84>
 80035d2:	b11b      	cbz	r3, 80035dc <_dtoa_r+0xb34>
 80035d4:	f10a 0308 	add.w	r3, sl, #8
 80035d8:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 80035da:	6013      	str	r3, [r2, #0]
 80035dc:	4650      	mov	r0, sl
 80035de:	b019      	add	sp, #100	@ 0x64
 80035e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80035e4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80035e6:	2b01      	cmp	r3, #1
 80035e8:	f77f ae37 	ble.w	800325a <_dtoa_r+0x7b2>
 80035ec:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80035ee:	930a      	str	r3, [sp, #40]	@ 0x28
 80035f0:	2001      	movs	r0, #1
 80035f2:	e655      	b.n	80032a0 <_dtoa_r+0x7f8>
 80035f4:	9b00      	ldr	r3, [sp, #0]
 80035f6:	2b00      	cmp	r3, #0
 80035f8:	f77f aed6 	ble.w	80033a8 <_dtoa_r+0x900>
 80035fc:	4656      	mov	r6, sl
 80035fe:	4621      	mov	r1, r4
 8003600:	4648      	mov	r0, r9
 8003602:	f7ff f9c8 	bl	8002996 <quorem>
 8003606:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 800360a:	f806 8b01 	strb.w	r8, [r6], #1
 800360e:	9b00      	ldr	r3, [sp, #0]
 8003610:	eba6 020a 	sub.w	r2, r6, sl
 8003614:	4293      	cmp	r3, r2
 8003616:	ddb3      	ble.n	8003580 <_dtoa_r+0xad8>
 8003618:	4649      	mov	r1, r9
 800361a:	2300      	movs	r3, #0
 800361c:	220a      	movs	r2, #10
 800361e:	4658      	mov	r0, fp
 8003620:	f000 f968 	bl	80038f4 <__multadd>
 8003624:	4681      	mov	r9, r0
 8003626:	e7ea      	b.n	80035fe <_dtoa_r+0xb56>
 8003628:	08004bd3 	.word	0x08004bd3
 800362c:	08004b57 	.word	0x08004b57

08003630 <_free_r>:
 8003630:	b538      	push	{r3, r4, r5, lr}
 8003632:	4605      	mov	r5, r0
 8003634:	2900      	cmp	r1, #0
 8003636:	d041      	beq.n	80036bc <_free_r+0x8c>
 8003638:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800363c:	1f0c      	subs	r4, r1, #4
 800363e:	2b00      	cmp	r3, #0
 8003640:	bfb8      	it	lt
 8003642:	18e4      	addlt	r4, r4, r3
 8003644:	f000 f8e8 	bl	8003818 <__malloc_lock>
 8003648:	4a1d      	ldr	r2, [pc, #116]	@ (80036c0 <_free_r+0x90>)
 800364a:	6813      	ldr	r3, [r2, #0]
 800364c:	b933      	cbnz	r3, 800365c <_free_r+0x2c>
 800364e:	6063      	str	r3, [r4, #4]
 8003650:	6014      	str	r4, [r2, #0]
 8003652:	4628      	mov	r0, r5
 8003654:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003658:	f000 b8e4 	b.w	8003824 <__malloc_unlock>
 800365c:	42a3      	cmp	r3, r4
 800365e:	d908      	bls.n	8003672 <_free_r+0x42>
 8003660:	6820      	ldr	r0, [r4, #0]
 8003662:	1821      	adds	r1, r4, r0
 8003664:	428b      	cmp	r3, r1
 8003666:	bf01      	itttt	eq
 8003668:	6819      	ldreq	r1, [r3, #0]
 800366a:	685b      	ldreq	r3, [r3, #4]
 800366c:	1809      	addeq	r1, r1, r0
 800366e:	6021      	streq	r1, [r4, #0]
 8003670:	e7ed      	b.n	800364e <_free_r+0x1e>
 8003672:	461a      	mov	r2, r3
 8003674:	685b      	ldr	r3, [r3, #4]
 8003676:	b10b      	cbz	r3, 800367c <_free_r+0x4c>
 8003678:	42a3      	cmp	r3, r4
 800367a:	d9fa      	bls.n	8003672 <_free_r+0x42>
 800367c:	6811      	ldr	r1, [r2, #0]
 800367e:	1850      	adds	r0, r2, r1
 8003680:	42a0      	cmp	r0, r4
 8003682:	d10b      	bne.n	800369c <_free_r+0x6c>
 8003684:	6820      	ldr	r0, [r4, #0]
 8003686:	4401      	add	r1, r0
 8003688:	1850      	adds	r0, r2, r1
 800368a:	4283      	cmp	r3, r0
 800368c:	6011      	str	r1, [r2, #0]
 800368e:	d1e0      	bne.n	8003652 <_free_r+0x22>
 8003690:	6818      	ldr	r0, [r3, #0]
 8003692:	685b      	ldr	r3, [r3, #4]
 8003694:	6053      	str	r3, [r2, #4]
 8003696:	4408      	add	r0, r1
 8003698:	6010      	str	r0, [r2, #0]
 800369a:	e7da      	b.n	8003652 <_free_r+0x22>
 800369c:	d902      	bls.n	80036a4 <_free_r+0x74>
 800369e:	230c      	movs	r3, #12
 80036a0:	602b      	str	r3, [r5, #0]
 80036a2:	e7d6      	b.n	8003652 <_free_r+0x22>
 80036a4:	6820      	ldr	r0, [r4, #0]
 80036a6:	1821      	adds	r1, r4, r0
 80036a8:	428b      	cmp	r3, r1
 80036aa:	bf04      	itt	eq
 80036ac:	6819      	ldreq	r1, [r3, #0]
 80036ae:	685b      	ldreq	r3, [r3, #4]
 80036b0:	6063      	str	r3, [r4, #4]
 80036b2:	bf04      	itt	eq
 80036b4:	1809      	addeq	r1, r1, r0
 80036b6:	6021      	streq	r1, [r4, #0]
 80036b8:	6054      	str	r4, [r2, #4]
 80036ba:	e7ca      	b.n	8003652 <_free_r+0x22>
 80036bc:	bd38      	pop	{r3, r4, r5, pc}
 80036be:	bf00      	nop
 80036c0:	20000348 	.word	0x20000348

080036c4 <malloc>:
 80036c4:	4b02      	ldr	r3, [pc, #8]	@ (80036d0 <malloc+0xc>)
 80036c6:	4601      	mov	r1, r0
 80036c8:	6818      	ldr	r0, [r3, #0]
 80036ca:	f000 b825 	b.w	8003718 <_malloc_r>
 80036ce:	bf00      	nop
 80036d0:	20000014 	.word	0x20000014

080036d4 <sbrk_aligned>:
 80036d4:	b570      	push	{r4, r5, r6, lr}
 80036d6:	4e0f      	ldr	r6, [pc, #60]	@ (8003714 <sbrk_aligned+0x40>)
 80036d8:	460c      	mov	r4, r1
 80036da:	6831      	ldr	r1, [r6, #0]
 80036dc:	4605      	mov	r5, r0
 80036de:	b911      	cbnz	r1, 80036e6 <sbrk_aligned+0x12>
 80036e0:	f000 fe46 	bl	8004370 <_sbrk_r>
 80036e4:	6030      	str	r0, [r6, #0]
 80036e6:	4621      	mov	r1, r4
 80036e8:	4628      	mov	r0, r5
 80036ea:	f000 fe41 	bl	8004370 <_sbrk_r>
 80036ee:	1c43      	adds	r3, r0, #1
 80036f0:	d103      	bne.n	80036fa <sbrk_aligned+0x26>
 80036f2:	f04f 34ff 	mov.w	r4, #4294967295
 80036f6:	4620      	mov	r0, r4
 80036f8:	bd70      	pop	{r4, r5, r6, pc}
 80036fa:	1cc4      	adds	r4, r0, #3
 80036fc:	f024 0403 	bic.w	r4, r4, #3
 8003700:	42a0      	cmp	r0, r4
 8003702:	d0f8      	beq.n	80036f6 <sbrk_aligned+0x22>
 8003704:	1a21      	subs	r1, r4, r0
 8003706:	4628      	mov	r0, r5
 8003708:	f000 fe32 	bl	8004370 <_sbrk_r>
 800370c:	3001      	adds	r0, #1
 800370e:	d1f2      	bne.n	80036f6 <sbrk_aligned+0x22>
 8003710:	e7ef      	b.n	80036f2 <sbrk_aligned+0x1e>
 8003712:	bf00      	nop
 8003714:	20000344 	.word	0x20000344

08003718 <_malloc_r>:
 8003718:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800371c:	1ccd      	adds	r5, r1, #3
 800371e:	f025 0503 	bic.w	r5, r5, #3
 8003722:	3508      	adds	r5, #8
 8003724:	2d0c      	cmp	r5, #12
 8003726:	bf38      	it	cc
 8003728:	250c      	movcc	r5, #12
 800372a:	2d00      	cmp	r5, #0
 800372c:	4606      	mov	r6, r0
 800372e:	db01      	blt.n	8003734 <_malloc_r+0x1c>
 8003730:	42a9      	cmp	r1, r5
 8003732:	d904      	bls.n	800373e <_malloc_r+0x26>
 8003734:	230c      	movs	r3, #12
 8003736:	6033      	str	r3, [r6, #0]
 8003738:	2000      	movs	r0, #0
 800373a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800373e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8003814 <_malloc_r+0xfc>
 8003742:	f000 f869 	bl	8003818 <__malloc_lock>
 8003746:	f8d8 3000 	ldr.w	r3, [r8]
 800374a:	461c      	mov	r4, r3
 800374c:	bb44      	cbnz	r4, 80037a0 <_malloc_r+0x88>
 800374e:	4629      	mov	r1, r5
 8003750:	4630      	mov	r0, r6
 8003752:	f7ff ffbf 	bl	80036d4 <sbrk_aligned>
 8003756:	1c43      	adds	r3, r0, #1
 8003758:	4604      	mov	r4, r0
 800375a:	d158      	bne.n	800380e <_malloc_r+0xf6>
 800375c:	f8d8 4000 	ldr.w	r4, [r8]
 8003760:	4627      	mov	r7, r4
 8003762:	2f00      	cmp	r7, #0
 8003764:	d143      	bne.n	80037ee <_malloc_r+0xd6>
 8003766:	2c00      	cmp	r4, #0
 8003768:	d04b      	beq.n	8003802 <_malloc_r+0xea>
 800376a:	6823      	ldr	r3, [r4, #0]
 800376c:	4639      	mov	r1, r7
 800376e:	4630      	mov	r0, r6
 8003770:	eb04 0903 	add.w	r9, r4, r3
 8003774:	f000 fdfc 	bl	8004370 <_sbrk_r>
 8003778:	4581      	cmp	r9, r0
 800377a:	d142      	bne.n	8003802 <_malloc_r+0xea>
 800377c:	6821      	ldr	r1, [r4, #0]
 800377e:	1a6d      	subs	r5, r5, r1
 8003780:	4629      	mov	r1, r5
 8003782:	4630      	mov	r0, r6
 8003784:	f7ff ffa6 	bl	80036d4 <sbrk_aligned>
 8003788:	3001      	adds	r0, #1
 800378a:	d03a      	beq.n	8003802 <_malloc_r+0xea>
 800378c:	6823      	ldr	r3, [r4, #0]
 800378e:	442b      	add	r3, r5
 8003790:	6023      	str	r3, [r4, #0]
 8003792:	f8d8 3000 	ldr.w	r3, [r8]
 8003796:	685a      	ldr	r2, [r3, #4]
 8003798:	bb62      	cbnz	r2, 80037f4 <_malloc_r+0xdc>
 800379a:	f8c8 7000 	str.w	r7, [r8]
 800379e:	e00f      	b.n	80037c0 <_malloc_r+0xa8>
 80037a0:	6822      	ldr	r2, [r4, #0]
 80037a2:	1b52      	subs	r2, r2, r5
 80037a4:	d420      	bmi.n	80037e8 <_malloc_r+0xd0>
 80037a6:	2a0b      	cmp	r2, #11
 80037a8:	d917      	bls.n	80037da <_malloc_r+0xc2>
 80037aa:	1961      	adds	r1, r4, r5
 80037ac:	42a3      	cmp	r3, r4
 80037ae:	6025      	str	r5, [r4, #0]
 80037b0:	bf18      	it	ne
 80037b2:	6059      	strne	r1, [r3, #4]
 80037b4:	6863      	ldr	r3, [r4, #4]
 80037b6:	bf08      	it	eq
 80037b8:	f8c8 1000 	streq.w	r1, [r8]
 80037bc:	5162      	str	r2, [r4, r5]
 80037be:	604b      	str	r3, [r1, #4]
 80037c0:	4630      	mov	r0, r6
 80037c2:	f000 f82f 	bl	8003824 <__malloc_unlock>
 80037c6:	f104 000b 	add.w	r0, r4, #11
 80037ca:	1d23      	adds	r3, r4, #4
 80037cc:	f020 0007 	bic.w	r0, r0, #7
 80037d0:	1ac2      	subs	r2, r0, r3
 80037d2:	bf1c      	itt	ne
 80037d4:	1a1b      	subne	r3, r3, r0
 80037d6:	50a3      	strne	r3, [r4, r2]
 80037d8:	e7af      	b.n	800373a <_malloc_r+0x22>
 80037da:	6862      	ldr	r2, [r4, #4]
 80037dc:	42a3      	cmp	r3, r4
 80037de:	bf0c      	ite	eq
 80037e0:	f8c8 2000 	streq.w	r2, [r8]
 80037e4:	605a      	strne	r2, [r3, #4]
 80037e6:	e7eb      	b.n	80037c0 <_malloc_r+0xa8>
 80037e8:	4623      	mov	r3, r4
 80037ea:	6864      	ldr	r4, [r4, #4]
 80037ec:	e7ae      	b.n	800374c <_malloc_r+0x34>
 80037ee:	463c      	mov	r4, r7
 80037f0:	687f      	ldr	r7, [r7, #4]
 80037f2:	e7b6      	b.n	8003762 <_malloc_r+0x4a>
 80037f4:	461a      	mov	r2, r3
 80037f6:	685b      	ldr	r3, [r3, #4]
 80037f8:	42a3      	cmp	r3, r4
 80037fa:	d1fb      	bne.n	80037f4 <_malloc_r+0xdc>
 80037fc:	2300      	movs	r3, #0
 80037fe:	6053      	str	r3, [r2, #4]
 8003800:	e7de      	b.n	80037c0 <_malloc_r+0xa8>
 8003802:	230c      	movs	r3, #12
 8003804:	6033      	str	r3, [r6, #0]
 8003806:	4630      	mov	r0, r6
 8003808:	f000 f80c 	bl	8003824 <__malloc_unlock>
 800380c:	e794      	b.n	8003738 <_malloc_r+0x20>
 800380e:	6005      	str	r5, [r0, #0]
 8003810:	e7d6      	b.n	80037c0 <_malloc_r+0xa8>
 8003812:	bf00      	nop
 8003814:	20000348 	.word	0x20000348

08003818 <__malloc_lock>:
 8003818:	4801      	ldr	r0, [pc, #4]	@ (8003820 <__malloc_lock+0x8>)
 800381a:	f7ff b8ba 	b.w	8002992 <__retarget_lock_acquire_recursive>
 800381e:	bf00      	nop
 8003820:	20000340 	.word	0x20000340

08003824 <__malloc_unlock>:
 8003824:	4801      	ldr	r0, [pc, #4]	@ (800382c <__malloc_unlock+0x8>)
 8003826:	f7ff b8b5 	b.w	8002994 <__retarget_lock_release_recursive>
 800382a:	bf00      	nop
 800382c:	20000340 	.word	0x20000340

08003830 <_Balloc>:
 8003830:	b570      	push	{r4, r5, r6, lr}
 8003832:	69c6      	ldr	r6, [r0, #28]
 8003834:	4604      	mov	r4, r0
 8003836:	460d      	mov	r5, r1
 8003838:	b976      	cbnz	r6, 8003858 <_Balloc+0x28>
 800383a:	2010      	movs	r0, #16
 800383c:	f7ff ff42 	bl	80036c4 <malloc>
 8003840:	4602      	mov	r2, r0
 8003842:	61e0      	str	r0, [r4, #28]
 8003844:	b920      	cbnz	r0, 8003850 <_Balloc+0x20>
 8003846:	4b18      	ldr	r3, [pc, #96]	@ (80038a8 <_Balloc+0x78>)
 8003848:	4818      	ldr	r0, [pc, #96]	@ (80038ac <_Balloc+0x7c>)
 800384a:	216b      	movs	r1, #107	@ 0x6b
 800384c:	f000 fdae 	bl	80043ac <__assert_func>
 8003850:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003854:	6006      	str	r6, [r0, #0]
 8003856:	60c6      	str	r6, [r0, #12]
 8003858:	69e6      	ldr	r6, [r4, #28]
 800385a:	68f3      	ldr	r3, [r6, #12]
 800385c:	b183      	cbz	r3, 8003880 <_Balloc+0x50>
 800385e:	69e3      	ldr	r3, [r4, #28]
 8003860:	68db      	ldr	r3, [r3, #12]
 8003862:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8003866:	b9b8      	cbnz	r0, 8003898 <_Balloc+0x68>
 8003868:	2101      	movs	r1, #1
 800386a:	fa01 f605 	lsl.w	r6, r1, r5
 800386e:	1d72      	adds	r2, r6, #5
 8003870:	0092      	lsls	r2, r2, #2
 8003872:	4620      	mov	r0, r4
 8003874:	f000 fdb8 	bl	80043e8 <_calloc_r>
 8003878:	b160      	cbz	r0, 8003894 <_Balloc+0x64>
 800387a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800387e:	e00e      	b.n	800389e <_Balloc+0x6e>
 8003880:	2221      	movs	r2, #33	@ 0x21
 8003882:	2104      	movs	r1, #4
 8003884:	4620      	mov	r0, r4
 8003886:	f000 fdaf 	bl	80043e8 <_calloc_r>
 800388a:	69e3      	ldr	r3, [r4, #28]
 800388c:	60f0      	str	r0, [r6, #12]
 800388e:	68db      	ldr	r3, [r3, #12]
 8003890:	2b00      	cmp	r3, #0
 8003892:	d1e4      	bne.n	800385e <_Balloc+0x2e>
 8003894:	2000      	movs	r0, #0
 8003896:	bd70      	pop	{r4, r5, r6, pc}
 8003898:	6802      	ldr	r2, [r0, #0]
 800389a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800389e:	2300      	movs	r3, #0
 80038a0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80038a4:	e7f7      	b.n	8003896 <_Balloc+0x66>
 80038a6:	bf00      	nop
 80038a8:	08004b64 	.word	0x08004b64
 80038ac:	08004be4 	.word	0x08004be4

080038b0 <_Bfree>:
 80038b0:	b570      	push	{r4, r5, r6, lr}
 80038b2:	69c6      	ldr	r6, [r0, #28]
 80038b4:	4605      	mov	r5, r0
 80038b6:	460c      	mov	r4, r1
 80038b8:	b976      	cbnz	r6, 80038d8 <_Bfree+0x28>
 80038ba:	2010      	movs	r0, #16
 80038bc:	f7ff ff02 	bl	80036c4 <malloc>
 80038c0:	4602      	mov	r2, r0
 80038c2:	61e8      	str	r0, [r5, #28]
 80038c4:	b920      	cbnz	r0, 80038d0 <_Bfree+0x20>
 80038c6:	4b09      	ldr	r3, [pc, #36]	@ (80038ec <_Bfree+0x3c>)
 80038c8:	4809      	ldr	r0, [pc, #36]	@ (80038f0 <_Bfree+0x40>)
 80038ca:	218f      	movs	r1, #143	@ 0x8f
 80038cc:	f000 fd6e 	bl	80043ac <__assert_func>
 80038d0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80038d4:	6006      	str	r6, [r0, #0]
 80038d6:	60c6      	str	r6, [r0, #12]
 80038d8:	b13c      	cbz	r4, 80038ea <_Bfree+0x3a>
 80038da:	69eb      	ldr	r3, [r5, #28]
 80038dc:	6862      	ldr	r2, [r4, #4]
 80038de:	68db      	ldr	r3, [r3, #12]
 80038e0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80038e4:	6021      	str	r1, [r4, #0]
 80038e6:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80038ea:	bd70      	pop	{r4, r5, r6, pc}
 80038ec:	08004b64 	.word	0x08004b64
 80038f0:	08004be4 	.word	0x08004be4

080038f4 <__multadd>:
 80038f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80038f8:	690d      	ldr	r5, [r1, #16]
 80038fa:	4607      	mov	r7, r0
 80038fc:	460c      	mov	r4, r1
 80038fe:	461e      	mov	r6, r3
 8003900:	f101 0c14 	add.w	ip, r1, #20
 8003904:	2000      	movs	r0, #0
 8003906:	f8dc 3000 	ldr.w	r3, [ip]
 800390a:	b299      	uxth	r1, r3
 800390c:	fb02 6101 	mla	r1, r2, r1, r6
 8003910:	0c1e      	lsrs	r6, r3, #16
 8003912:	0c0b      	lsrs	r3, r1, #16
 8003914:	fb02 3306 	mla	r3, r2, r6, r3
 8003918:	b289      	uxth	r1, r1
 800391a:	3001      	adds	r0, #1
 800391c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8003920:	4285      	cmp	r5, r0
 8003922:	f84c 1b04 	str.w	r1, [ip], #4
 8003926:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800392a:	dcec      	bgt.n	8003906 <__multadd+0x12>
 800392c:	b30e      	cbz	r6, 8003972 <__multadd+0x7e>
 800392e:	68a3      	ldr	r3, [r4, #8]
 8003930:	42ab      	cmp	r3, r5
 8003932:	dc19      	bgt.n	8003968 <__multadd+0x74>
 8003934:	6861      	ldr	r1, [r4, #4]
 8003936:	4638      	mov	r0, r7
 8003938:	3101      	adds	r1, #1
 800393a:	f7ff ff79 	bl	8003830 <_Balloc>
 800393e:	4680      	mov	r8, r0
 8003940:	b928      	cbnz	r0, 800394e <__multadd+0x5a>
 8003942:	4602      	mov	r2, r0
 8003944:	4b0c      	ldr	r3, [pc, #48]	@ (8003978 <__multadd+0x84>)
 8003946:	480d      	ldr	r0, [pc, #52]	@ (800397c <__multadd+0x88>)
 8003948:	21ba      	movs	r1, #186	@ 0xba
 800394a:	f000 fd2f 	bl	80043ac <__assert_func>
 800394e:	6922      	ldr	r2, [r4, #16]
 8003950:	3202      	adds	r2, #2
 8003952:	f104 010c 	add.w	r1, r4, #12
 8003956:	0092      	lsls	r2, r2, #2
 8003958:	300c      	adds	r0, #12
 800395a:	f000 fd19 	bl	8004390 <memcpy>
 800395e:	4621      	mov	r1, r4
 8003960:	4638      	mov	r0, r7
 8003962:	f7ff ffa5 	bl	80038b0 <_Bfree>
 8003966:	4644      	mov	r4, r8
 8003968:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800396c:	3501      	adds	r5, #1
 800396e:	615e      	str	r6, [r3, #20]
 8003970:	6125      	str	r5, [r4, #16]
 8003972:	4620      	mov	r0, r4
 8003974:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003978:	08004bd3 	.word	0x08004bd3
 800397c:	08004be4 	.word	0x08004be4

08003980 <__hi0bits>:
 8003980:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8003984:	4603      	mov	r3, r0
 8003986:	bf36      	itet	cc
 8003988:	0403      	lslcc	r3, r0, #16
 800398a:	2000      	movcs	r0, #0
 800398c:	2010      	movcc	r0, #16
 800398e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003992:	bf3c      	itt	cc
 8003994:	021b      	lslcc	r3, r3, #8
 8003996:	3008      	addcc	r0, #8
 8003998:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800399c:	bf3c      	itt	cc
 800399e:	011b      	lslcc	r3, r3, #4
 80039a0:	3004      	addcc	r0, #4
 80039a2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80039a6:	bf3c      	itt	cc
 80039a8:	009b      	lslcc	r3, r3, #2
 80039aa:	3002      	addcc	r0, #2
 80039ac:	2b00      	cmp	r3, #0
 80039ae:	db05      	blt.n	80039bc <__hi0bits+0x3c>
 80039b0:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 80039b4:	f100 0001 	add.w	r0, r0, #1
 80039b8:	bf08      	it	eq
 80039ba:	2020      	moveq	r0, #32
 80039bc:	4770      	bx	lr

080039be <__lo0bits>:
 80039be:	6803      	ldr	r3, [r0, #0]
 80039c0:	4602      	mov	r2, r0
 80039c2:	f013 0007 	ands.w	r0, r3, #7
 80039c6:	d00b      	beq.n	80039e0 <__lo0bits+0x22>
 80039c8:	07d9      	lsls	r1, r3, #31
 80039ca:	d421      	bmi.n	8003a10 <__lo0bits+0x52>
 80039cc:	0798      	lsls	r0, r3, #30
 80039ce:	bf49      	itett	mi
 80039d0:	085b      	lsrmi	r3, r3, #1
 80039d2:	089b      	lsrpl	r3, r3, #2
 80039d4:	2001      	movmi	r0, #1
 80039d6:	6013      	strmi	r3, [r2, #0]
 80039d8:	bf5c      	itt	pl
 80039da:	6013      	strpl	r3, [r2, #0]
 80039dc:	2002      	movpl	r0, #2
 80039de:	4770      	bx	lr
 80039e0:	b299      	uxth	r1, r3
 80039e2:	b909      	cbnz	r1, 80039e8 <__lo0bits+0x2a>
 80039e4:	0c1b      	lsrs	r3, r3, #16
 80039e6:	2010      	movs	r0, #16
 80039e8:	b2d9      	uxtb	r1, r3
 80039ea:	b909      	cbnz	r1, 80039f0 <__lo0bits+0x32>
 80039ec:	3008      	adds	r0, #8
 80039ee:	0a1b      	lsrs	r3, r3, #8
 80039f0:	0719      	lsls	r1, r3, #28
 80039f2:	bf04      	itt	eq
 80039f4:	091b      	lsreq	r3, r3, #4
 80039f6:	3004      	addeq	r0, #4
 80039f8:	0799      	lsls	r1, r3, #30
 80039fa:	bf04      	itt	eq
 80039fc:	089b      	lsreq	r3, r3, #2
 80039fe:	3002      	addeq	r0, #2
 8003a00:	07d9      	lsls	r1, r3, #31
 8003a02:	d403      	bmi.n	8003a0c <__lo0bits+0x4e>
 8003a04:	085b      	lsrs	r3, r3, #1
 8003a06:	f100 0001 	add.w	r0, r0, #1
 8003a0a:	d003      	beq.n	8003a14 <__lo0bits+0x56>
 8003a0c:	6013      	str	r3, [r2, #0]
 8003a0e:	4770      	bx	lr
 8003a10:	2000      	movs	r0, #0
 8003a12:	4770      	bx	lr
 8003a14:	2020      	movs	r0, #32
 8003a16:	4770      	bx	lr

08003a18 <__i2b>:
 8003a18:	b510      	push	{r4, lr}
 8003a1a:	460c      	mov	r4, r1
 8003a1c:	2101      	movs	r1, #1
 8003a1e:	f7ff ff07 	bl	8003830 <_Balloc>
 8003a22:	4602      	mov	r2, r0
 8003a24:	b928      	cbnz	r0, 8003a32 <__i2b+0x1a>
 8003a26:	4b05      	ldr	r3, [pc, #20]	@ (8003a3c <__i2b+0x24>)
 8003a28:	4805      	ldr	r0, [pc, #20]	@ (8003a40 <__i2b+0x28>)
 8003a2a:	f240 1145 	movw	r1, #325	@ 0x145
 8003a2e:	f000 fcbd 	bl	80043ac <__assert_func>
 8003a32:	2301      	movs	r3, #1
 8003a34:	6144      	str	r4, [r0, #20]
 8003a36:	6103      	str	r3, [r0, #16]
 8003a38:	bd10      	pop	{r4, pc}
 8003a3a:	bf00      	nop
 8003a3c:	08004bd3 	.word	0x08004bd3
 8003a40:	08004be4 	.word	0x08004be4

08003a44 <__multiply>:
 8003a44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003a48:	4614      	mov	r4, r2
 8003a4a:	690a      	ldr	r2, [r1, #16]
 8003a4c:	6923      	ldr	r3, [r4, #16]
 8003a4e:	429a      	cmp	r2, r3
 8003a50:	bfa8      	it	ge
 8003a52:	4623      	movge	r3, r4
 8003a54:	460f      	mov	r7, r1
 8003a56:	bfa4      	itt	ge
 8003a58:	460c      	movge	r4, r1
 8003a5a:	461f      	movge	r7, r3
 8003a5c:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8003a60:	f8d7 9010 	ldr.w	r9, [r7, #16]
 8003a64:	68a3      	ldr	r3, [r4, #8]
 8003a66:	6861      	ldr	r1, [r4, #4]
 8003a68:	eb0a 0609 	add.w	r6, sl, r9
 8003a6c:	42b3      	cmp	r3, r6
 8003a6e:	b085      	sub	sp, #20
 8003a70:	bfb8      	it	lt
 8003a72:	3101      	addlt	r1, #1
 8003a74:	f7ff fedc 	bl	8003830 <_Balloc>
 8003a78:	b930      	cbnz	r0, 8003a88 <__multiply+0x44>
 8003a7a:	4602      	mov	r2, r0
 8003a7c:	4b44      	ldr	r3, [pc, #272]	@ (8003b90 <__multiply+0x14c>)
 8003a7e:	4845      	ldr	r0, [pc, #276]	@ (8003b94 <__multiply+0x150>)
 8003a80:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8003a84:	f000 fc92 	bl	80043ac <__assert_func>
 8003a88:	f100 0514 	add.w	r5, r0, #20
 8003a8c:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8003a90:	462b      	mov	r3, r5
 8003a92:	2200      	movs	r2, #0
 8003a94:	4543      	cmp	r3, r8
 8003a96:	d321      	bcc.n	8003adc <__multiply+0x98>
 8003a98:	f107 0114 	add.w	r1, r7, #20
 8003a9c:	f104 0214 	add.w	r2, r4, #20
 8003aa0:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 8003aa4:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 8003aa8:	9302      	str	r3, [sp, #8]
 8003aaa:	1b13      	subs	r3, r2, r4
 8003aac:	3b15      	subs	r3, #21
 8003aae:	f023 0303 	bic.w	r3, r3, #3
 8003ab2:	3304      	adds	r3, #4
 8003ab4:	f104 0715 	add.w	r7, r4, #21
 8003ab8:	42ba      	cmp	r2, r7
 8003aba:	bf38      	it	cc
 8003abc:	2304      	movcc	r3, #4
 8003abe:	9301      	str	r3, [sp, #4]
 8003ac0:	9b02      	ldr	r3, [sp, #8]
 8003ac2:	9103      	str	r1, [sp, #12]
 8003ac4:	428b      	cmp	r3, r1
 8003ac6:	d80c      	bhi.n	8003ae2 <__multiply+0x9e>
 8003ac8:	2e00      	cmp	r6, #0
 8003aca:	dd03      	ble.n	8003ad4 <__multiply+0x90>
 8003acc:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8003ad0:	2b00      	cmp	r3, #0
 8003ad2:	d05b      	beq.n	8003b8c <__multiply+0x148>
 8003ad4:	6106      	str	r6, [r0, #16]
 8003ad6:	b005      	add	sp, #20
 8003ad8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003adc:	f843 2b04 	str.w	r2, [r3], #4
 8003ae0:	e7d8      	b.n	8003a94 <__multiply+0x50>
 8003ae2:	f8b1 a000 	ldrh.w	sl, [r1]
 8003ae6:	f1ba 0f00 	cmp.w	sl, #0
 8003aea:	d024      	beq.n	8003b36 <__multiply+0xf2>
 8003aec:	f104 0e14 	add.w	lr, r4, #20
 8003af0:	46a9      	mov	r9, r5
 8003af2:	f04f 0c00 	mov.w	ip, #0
 8003af6:	f85e 7b04 	ldr.w	r7, [lr], #4
 8003afa:	f8d9 3000 	ldr.w	r3, [r9]
 8003afe:	fa1f fb87 	uxth.w	fp, r7
 8003b02:	b29b      	uxth	r3, r3
 8003b04:	fb0a 330b 	mla	r3, sl, fp, r3
 8003b08:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 8003b0c:	f8d9 7000 	ldr.w	r7, [r9]
 8003b10:	4463      	add	r3, ip
 8003b12:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8003b16:	fb0a c70b 	mla	r7, sl, fp, ip
 8003b1a:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 8003b1e:	b29b      	uxth	r3, r3
 8003b20:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8003b24:	4572      	cmp	r2, lr
 8003b26:	f849 3b04 	str.w	r3, [r9], #4
 8003b2a:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8003b2e:	d8e2      	bhi.n	8003af6 <__multiply+0xb2>
 8003b30:	9b01      	ldr	r3, [sp, #4]
 8003b32:	f845 c003 	str.w	ip, [r5, r3]
 8003b36:	9b03      	ldr	r3, [sp, #12]
 8003b38:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8003b3c:	3104      	adds	r1, #4
 8003b3e:	f1b9 0f00 	cmp.w	r9, #0
 8003b42:	d021      	beq.n	8003b88 <__multiply+0x144>
 8003b44:	682b      	ldr	r3, [r5, #0]
 8003b46:	f104 0c14 	add.w	ip, r4, #20
 8003b4a:	46ae      	mov	lr, r5
 8003b4c:	f04f 0a00 	mov.w	sl, #0
 8003b50:	f8bc b000 	ldrh.w	fp, [ip]
 8003b54:	f8be 7002 	ldrh.w	r7, [lr, #2]
 8003b58:	fb09 770b 	mla	r7, r9, fp, r7
 8003b5c:	4457      	add	r7, sl
 8003b5e:	b29b      	uxth	r3, r3
 8003b60:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8003b64:	f84e 3b04 	str.w	r3, [lr], #4
 8003b68:	f85c 3b04 	ldr.w	r3, [ip], #4
 8003b6c:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003b70:	f8be 3000 	ldrh.w	r3, [lr]
 8003b74:	fb09 330a 	mla	r3, r9, sl, r3
 8003b78:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 8003b7c:	4562      	cmp	r2, ip
 8003b7e:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003b82:	d8e5      	bhi.n	8003b50 <__multiply+0x10c>
 8003b84:	9f01      	ldr	r7, [sp, #4]
 8003b86:	51eb      	str	r3, [r5, r7]
 8003b88:	3504      	adds	r5, #4
 8003b8a:	e799      	b.n	8003ac0 <__multiply+0x7c>
 8003b8c:	3e01      	subs	r6, #1
 8003b8e:	e79b      	b.n	8003ac8 <__multiply+0x84>
 8003b90:	08004bd3 	.word	0x08004bd3
 8003b94:	08004be4 	.word	0x08004be4

08003b98 <__pow5mult>:
 8003b98:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003b9c:	4615      	mov	r5, r2
 8003b9e:	f012 0203 	ands.w	r2, r2, #3
 8003ba2:	4607      	mov	r7, r0
 8003ba4:	460e      	mov	r6, r1
 8003ba6:	d007      	beq.n	8003bb8 <__pow5mult+0x20>
 8003ba8:	4c25      	ldr	r4, [pc, #148]	@ (8003c40 <__pow5mult+0xa8>)
 8003baa:	3a01      	subs	r2, #1
 8003bac:	2300      	movs	r3, #0
 8003bae:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8003bb2:	f7ff fe9f 	bl	80038f4 <__multadd>
 8003bb6:	4606      	mov	r6, r0
 8003bb8:	10ad      	asrs	r5, r5, #2
 8003bba:	d03d      	beq.n	8003c38 <__pow5mult+0xa0>
 8003bbc:	69fc      	ldr	r4, [r7, #28]
 8003bbe:	b97c      	cbnz	r4, 8003be0 <__pow5mult+0x48>
 8003bc0:	2010      	movs	r0, #16
 8003bc2:	f7ff fd7f 	bl	80036c4 <malloc>
 8003bc6:	4602      	mov	r2, r0
 8003bc8:	61f8      	str	r0, [r7, #28]
 8003bca:	b928      	cbnz	r0, 8003bd8 <__pow5mult+0x40>
 8003bcc:	4b1d      	ldr	r3, [pc, #116]	@ (8003c44 <__pow5mult+0xac>)
 8003bce:	481e      	ldr	r0, [pc, #120]	@ (8003c48 <__pow5mult+0xb0>)
 8003bd0:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8003bd4:	f000 fbea 	bl	80043ac <__assert_func>
 8003bd8:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8003bdc:	6004      	str	r4, [r0, #0]
 8003bde:	60c4      	str	r4, [r0, #12]
 8003be0:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8003be4:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8003be8:	b94c      	cbnz	r4, 8003bfe <__pow5mult+0x66>
 8003bea:	f240 2171 	movw	r1, #625	@ 0x271
 8003bee:	4638      	mov	r0, r7
 8003bf0:	f7ff ff12 	bl	8003a18 <__i2b>
 8003bf4:	2300      	movs	r3, #0
 8003bf6:	f8c8 0008 	str.w	r0, [r8, #8]
 8003bfa:	4604      	mov	r4, r0
 8003bfc:	6003      	str	r3, [r0, #0]
 8003bfe:	f04f 0900 	mov.w	r9, #0
 8003c02:	07eb      	lsls	r3, r5, #31
 8003c04:	d50a      	bpl.n	8003c1c <__pow5mult+0x84>
 8003c06:	4631      	mov	r1, r6
 8003c08:	4622      	mov	r2, r4
 8003c0a:	4638      	mov	r0, r7
 8003c0c:	f7ff ff1a 	bl	8003a44 <__multiply>
 8003c10:	4631      	mov	r1, r6
 8003c12:	4680      	mov	r8, r0
 8003c14:	4638      	mov	r0, r7
 8003c16:	f7ff fe4b 	bl	80038b0 <_Bfree>
 8003c1a:	4646      	mov	r6, r8
 8003c1c:	106d      	asrs	r5, r5, #1
 8003c1e:	d00b      	beq.n	8003c38 <__pow5mult+0xa0>
 8003c20:	6820      	ldr	r0, [r4, #0]
 8003c22:	b938      	cbnz	r0, 8003c34 <__pow5mult+0x9c>
 8003c24:	4622      	mov	r2, r4
 8003c26:	4621      	mov	r1, r4
 8003c28:	4638      	mov	r0, r7
 8003c2a:	f7ff ff0b 	bl	8003a44 <__multiply>
 8003c2e:	6020      	str	r0, [r4, #0]
 8003c30:	f8c0 9000 	str.w	r9, [r0]
 8003c34:	4604      	mov	r4, r0
 8003c36:	e7e4      	b.n	8003c02 <__pow5mult+0x6a>
 8003c38:	4630      	mov	r0, r6
 8003c3a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003c3e:	bf00      	nop
 8003c40:	08004c40 	.word	0x08004c40
 8003c44:	08004b64 	.word	0x08004b64
 8003c48:	08004be4 	.word	0x08004be4

08003c4c <__lshift>:
 8003c4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003c50:	460c      	mov	r4, r1
 8003c52:	6849      	ldr	r1, [r1, #4]
 8003c54:	6923      	ldr	r3, [r4, #16]
 8003c56:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8003c5a:	68a3      	ldr	r3, [r4, #8]
 8003c5c:	4607      	mov	r7, r0
 8003c5e:	4691      	mov	r9, r2
 8003c60:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003c64:	f108 0601 	add.w	r6, r8, #1
 8003c68:	42b3      	cmp	r3, r6
 8003c6a:	db0b      	blt.n	8003c84 <__lshift+0x38>
 8003c6c:	4638      	mov	r0, r7
 8003c6e:	f7ff fddf 	bl	8003830 <_Balloc>
 8003c72:	4605      	mov	r5, r0
 8003c74:	b948      	cbnz	r0, 8003c8a <__lshift+0x3e>
 8003c76:	4602      	mov	r2, r0
 8003c78:	4b28      	ldr	r3, [pc, #160]	@ (8003d1c <__lshift+0xd0>)
 8003c7a:	4829      	ldr	r0, [pc, #164]	@ (8003d20 <__lshift+0xd4>)
 8003c7c:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8003c80:	f000 fb94 	bl	80043ac <__assert_func>
 8003c84:	3101      	adds	r1, #1
 8003c86:	005b      	lsls	r3, r3, #1
 8003c88:	e7ee      	b.n	8003c68 <__lshift+0x1c>
 8003c8a:	2300      	movs	r3, #0
 8003c8c:	f100 0114 	add.w	r1, r0, #20
 8003c90:	f100 0210 	add.w	r2, r0, #16
 8003c94:	4618      	mov	r0, r3
 8003c96:	4553      	cmp	r3, sl
 8003c98:	db33      	blt.n	8003d02 <__lshift+0xb6>
 8003c9a:	6920      	ldr	r0, [r4, #16]
 8003c9c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003ca0:	f104 0314 	add.w	r3, r4, #20
 8003ca4:	f019 091f 	ands.w	r9, r9, #31
 8003ca8:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8003cac:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8003cb0:	d02b      	beq.n	8003d0a <__lshift+0xbe>
 8003cb2:	f1c9 0e20 	rsb	lr, r9, #32
 8003cb6:	468a      	mov	sl, r1
 8003cb8:	2200      	movs	r2, #0
 8003cba:	6818      	ldr	r0, [r3, #0]
 8003cbc:	fa00 f009 	lsl.w	r0, r0, r9
 8003cc0:	4310      	orrs	r0, r2
 8003cc2:	f84a 0b04 	str.w	r0, [sl], #4
 8003cc6:	f853 2b04 	ldr.w	r2, [r3], #4
 8003cca:	459c      	cmp	ip, r3
 8003ccc:	fa22 f20e 	lsr.w	r2, r2, lr
 8003cd0:	d8f3      	bhi.n	8003cba <__lshift+0x6e>
 8003cd2:	ebac 0304 	sub.w	r3, ip, r4
 8003cd6:	3b15      	subs	r3, #21
 8003cd8:	f023 0303 	bic.w	r3, r3, #3
 8003cdc:	3304      	adds	r3, #4
 8003cde:	f104 0015 	add.w	r0, r4, #21
 8003ce2:	4584      	cmp	ip, r0
 8003ce4:	bf38      	it	cc
 8003ce6:	2304      	movcc	r3, #4
 8003ce8:	50ca      	str	r2, [r1, r3]
 8003cea:	b10a      	cbz	r2, 8003cf0 <__lshift+0xa4>
 8003cec:	f108 0602 	add.w	r6, r8, #2
 8003cf0:	3e01      	subs	r6, #1
 8003cf2:	4638      	mov	r0, r7
 8003cf4:	612e      	str	r6, [r5, #16]
 8003cf6:	4621      	mov	r1, r4
 8003cf8:	f7ff fdda 	bl	80038b0 <_Bfree>
 8003cfc:	4628      	mov	r0, r5
 8003cfe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003d02:	f842 0f04 	str.w	r0, [r2, #4]!
 8003d06:	3301      	adds	r3, #1
 8003d08:	e7c5      	b.n	8003c96 <__lshift+0x4a>
 8003d0a:	3904      	subs	r1, #4
 8003d0c:	f853 2b04 	ldr.w	r2, [r3], #4
 8003d10:	f841 2f04 	str.w	r2, [r1, #4]!
 8003d14:	459c      	cmp	ip, r3
 8003d16:	d8f9      	bhi.n	8003d0c <__lshift+0xc0>
 8003d18:	e7ea      	b.n	8003cf0 <__lshift+0xa4>
 8003d1a:	bf00      	nop
 8003d1c:	08004bd3 	.word	0x08004bd3
 8003d20:	08004be4 	.word	0x08004be4

08003d24 <__mcmp>:
 8003d24:	690a      	ldr	r2, [r1, #16]
 8003d26:	4603      	mov	r3, r0
 8003d28:	6900      	ldr	r0, [r0, #16]
 8003d2a:	1a80      	subs	r0, r0, r2
 8003d2c:	b530      	push	{r4, r5, lr}
 8003d2e:	d10e      	bne.n	8003d4e <__mcmp+0x2a>
 8003d30:	3314      	adds	r3, #20
 8003d32:	3114      	adds	r1, #20
 8003d34:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8003d38:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8003d3c:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8003d40:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8003d44:	4295      	cmp	r5, r2
 8003d46:	d003      	beq.n	8003d50 <__mcmp+0x2c>
 8003d48:	d205      	bcs.n	8003d56 <__mcmp+0x32>
 8003d4a:	f04f 30ff 	mov.w	r0, #4294967295
 8003d4e:	bd30      	pop	{r4, r5, pc}
 8003d50:	42a3      	cmp	r3, r4
 8003d52:	d3f3      	bcc.n	8003d3c <__mcmp+0x18>
 8003d54:	e7fb      	b.n	8003d4e <__mcmp+0x2a>
 8003d56:	2001      	movs	r0, #1
 8003d58:	e7f9      	b.n	8003d4e <__mcmp+0x2a>
	...

08003d5c <__mdiff>:
 8003d5c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003d60:	4689      	mov	r9, r1
 8003d62:	4606      	mov	r6, r0
 8003d64:	4611      	mov	r1, r2
 8003d66:	4648      	mov	r0, r9
 8003d68:	4614      	mov	r4, r2
 8003d6a:	f7ff ffdb 	bl	8003d24 <__mcmp>
 8003d6e:	1e05      	subs	r5, r0, #0
 8003d70:	d112      	bne.n	8003d98 <__mdiff+0x3c>
 8003d72:	4629      	mov	r1, r5
 8003d74:	4630      	mov	r0, r6
 8003d76:	f7ff fd5b 	bl	8003830 <_Balloc>
 8003d7a:	4602      	mov	r2, r0
 8003d7c:	b928      	cbnz	r0, 8003d8a <__mdiff+0x2e>
 8003d7e:	4b3f      	ldr	r3, [pc, #252]	@ (8003e7c <__mdiff+0x120>)
 8003d80:	f240 2137 	movw	r1, #567	@ 0x237
 8003d84:	483e      	ldr	r0, [pc, #248]	@ (8003e80 <__mdiff+0x124>)
 8003d86:	f000 fb11 	bl	80043ac <__assert_func>
 8003d8a:	2301      	movs	r3, #1
 8003d8c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8003d90:	4610      	mov	r0, r2
 8003d92:	b003      	add	sp, #12
 8003d94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003d98:	bfbc      	itt	lt
 8003d9a:	464b      	movlt	r3, r9
 8003d9c:	46a1      	movlt	r9, r4
 8003d9e:	4630      	mov	r0, r6
 8003da0:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8003da4:	bfba      	itte	lt
 8003da6:	461c      	movlt	r4, r3
 8003da8:	2501      	movlt	r5, #1
 8003daa:	2500      	movge	r5, #0
 8003dac:	f7ff fd40 	bl	8003830 <_Balloc>
 8003db0:	4602      	mov	r2, r0
 8003db2:	b918      	cbnz	r0, 8003dbc <__mdiff+0x60>
 8003db4:	4b31      	ldr	r3, [pc, #196]	@ (8003e7c <__mdiff+0x120>)
 8003db6:	f240 2145 	movw	r1, #581	@ 0x245
 8003dba:	e7e3      	b.n	8003d84 <__mdiff+0x28>
 8003dbc:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8003dc0:	6926      	ldr	r6, [r4, #16]
 8003dc2:	60c5      	str	r5, [r0, #12]
 8003dc4:	f109 0310 	add.w	r3, r9, #16
 8003dc8:	f109 0514 	add.w	r5, r9, #20
 8003dcc:	f104 0e14 	add.w	lr, r4, #20
 8003dd0:	f100 0b14 	add.w	fp, r0, #20
 8003dd4:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8003dd8:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8003ddc:	9301      	str	r3, [sp, #4]
 8003dde:	46d9      	mov	r9, fp
 8003de0:	f04f 0c00 	mov.w	ip, #0
 8003de4:	9b01      	ldr	r3, [sp, #4]
 8003de6:	f85e 0b04 	ldr.w	r0, [lr], #4
 8003dea:	f853 af04 	ldr.w	sl, [r3, #4]!
 8003dee:	9301      	str	r3, [sp, #4]
 8003df0:	fa1f f38a 	uxth.w	r3, sl
 8003df4:	4619      	mov	r1, r3
 8003df6:	b283      	uxth	r3, r0
 8003df8:	1acb      	subs	r3, r1, r3
 8003dfa:	0c00      	lsrs	r0, r0, #16
 8003dfc:	4463      	add	r3, ip
 8003dfe:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8003e02:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8003e06:	b29b      	uxth	r3, r3
 8003e08:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8003e0c:	4576      	cmp	r6, lr
 8003e0e:	f849 3b04 	str.w	r3, [r9], #4
 8003e12:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003e16:	d8e5      	bhi.n	8003de4 <__mdiff+0x88>
 8003e18:	1b33      	subs	r3, r6, r4
 8003e1a:	3b15      	subs	r3, #21
 8003e1c:	f023 0303 	bic.w	r3, r3, #3
 8003e20:	3415      	adds	r4, #21
 8003e22:	3304      	adds	r3, #4
 8003e24:	42a6      	cmp	r6, r4
 8003e26:	bf38      	it	cc
 8003e28:	2304      	movcc	r3, #4
 8003e2a:	441d      	add	r5, r3
 8003e2c:	445b      	add	r3, fp
 8003e2e:	461e      	mov	r6, r3
 8003e30:	462c      	mov	r4, r5
 8003e32:	4544      	cmp	r4, r8
 8003e34:	d30e      	bcc.n	8003e54 <__mdiff+0xf8>
 8003e36:	f108 0103 	add.w	r1, r8, #3
 8003e3a:	1b49      	subs	r1, r1, r5
 8003e3c:	f021 0103 	bic.w	r1, r1, #3
 8003e40:	3d03      	subs	r5, #3
 8003e42:	45a8      	cmp	r8, r5
 8003e44:	bf38      	it	cc
 8003e46:	2100      	movcc	r1, #0
 8003e48:	440b      	add	r3, r1
 8003e4a:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8003e4e:	b191      	cbz	r1, 8003e76 <__mdiff+0x11a>
 8003e50:	6117      	str	r7, [r2, #16]
 8003e52:	e79d      	b.n	8003d90 <__mdiff+0x34>
 8003e54:	f854 1b04 	ldr.w	r1, [r4], #4
 8003e58:	46e6      	mov	lr, ip
 8003e5a:	0c08      	lsrs	r0, r1, #16
 8003e5c:	fa1c fc81 	uxtah	ip, ip, r1
 8003e60:	4471      	add	r1, lr
 8003e62:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8003e66:	b289      	uxth	r1, r1
 8003e68:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8003e6c:	f846 1b04 	str.w	r1, [r6], #4
 8003e70:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003e74:	e7dd      	b.n	8003e32 <__mdiff+0xd6>
 8003e76:	3f01      	subs	r7, #1
 8003e78:	e7e7      	b.n	8003e4a <__mdiff+0xee>
 8003e7a:	bf00      	nop
 8003e7c:	08004bd3 	.word	0x08004bd3
 8003e80:	08004be4 	.word	0x08004be4

08003e84 <__d2b>:
 8003e84:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8003e88:	460f      	mov	r7, r1
 8003e8a:	2101      	movs	r1, #1
 8003e8c:	ec59 8b10 	vmov	r8, r9, d0
 8003e90:	4616      	mov	r6, r2
 8003e92:	f7ff fccd 	bl	8003830 <_Balloc>
 8003e96:	4604      	mov	r4, r0
 8003e98:	b930      	cbnz	r0, 8003ea8 <__d2b+0x24>
 8003e9a:	4602      	mov	r2, r0
 8003e9c:	4b23      	ldr	r3, [pc, #140]	@ (8003f2c <__d2b+0xa8>)
 8003e9e:	4824      	ldr	r0, [pc, #144]	@ (8003f30 <__d2b+0xac>)
 8003ea0:	f240 310f 	movw	r1, #783	@ 0x30f
 8003ea4:	f000 fa82 	bl	80043ac <__assert_func>
 8003ea8:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8003eac:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003eb0:	b10d      	cbz	r5, 8003eb6 <__d2b+0x32>
 8003eb2:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8003eb6:	9301      	str	r3, [sp, #4]
 8003eb8:	f1b8 0300 	subs.w	r3, r8, #0
 8003ebc:	d023      	beq.n	8003f06 <__d2b+0x82>
 8003ebe:	4668      	mov	r0, sp
 8003ec0:	9300      	str	r3, [sp, #0]
 8003ec2:	f7ff fd7c 	bl	80039be <__lo0bits>
 8003ec6:	e9dd 1200 	ldrd	r1, r2, [sp]
 8003eca:	b1d0      	cbz	r0, 8003f02 <__d2b+0x7e>
 8003ecc:	f1c0 0320 	rsb	r3, r0, #32
 8003ed0:	fa02 f303 	lsl.w	r3, r2, r3
 8003ed4:	430b      	orrs	r3, r1
 8003ed6:	40c2      	lsrs	r2, r0
 8003ed8:	6163      	str	r3, [r4, #20]
 8003eda:	9201      	str	r2, [sp, #4]
 8003edc:	9b01      	ldr	r3, [sp, #4]
 8003ede:	61a3      	str	r3, [r4, #24]
 8003ee0:	2b00      	cmp	r3, #0
 8003ee2:	bf0c      	ite	eq
 8003ee4:	2201      	moveq	r2, #1
 8003ee6:	2202      	movne	r2, #2
 8003ee8:	6122      	str	r2, [r4, #16]
 8003eea:	b1a5      	cbz	r5, 8003f16 <__d2b+0x92>
 8003eec:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8003ef0:	4405      	add	r5, r0
 8003ef2:	603d      	str	r5, [r7, #0]
 8003ef4:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8003ef8:	6030      	str	r0, [r6, #0]
 8003efa:	4620      	mov	r0, r4
 8003efc:	b003      	add	sp, #12
 8003efe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003f02:	6161      	str	r1, [r4, #20]
 8003f04:	e7ea      	b.n	8003edc <__d2b+0x58>
 8003f06:	a801      	add	r0, sp, #4
 8003f08:	f7ff fd59 	bl	80039be <__lo0bits>
 8003f0c:	9b01      	ldr	r3, [sp, #4]
 8003f0e:	6163      	str	r3, [r4, #20]
 8003f10:	3020      	adds	r0, #32
 8003f12:	2201      	movs	r2, #1
 8003f14:	e7e8      	b.n	8003ee8 <__d2b+0x64>
 8003f16:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8003f1a:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8003f1e:	6038      	str	r0, [r7, #0]
 8003f20:	6918      	ldr	r0, [r3, #16]
 8003f22:	f7ff fd2d 	bl	8003980 <__hi0bits>
 8003f26:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8003f2a:	e7e5      	b.n	8003ef8 <__d2b+0x74>
 8003f2c:	08004bd3 	.word	0x08004bd3
 8003f30:	08004be4 	.word	0x08004be4

08003f34 <__ssputs_r>:
 8003f34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003f38:	688e      	ldr	r6, [r1, #8]
 8003f3a:	461f      	mov	r7, r3
 8003f3c:	42be      	cmp	r6, r7
 8003f3e:	680b      	ldr	r3, [r1, #0]
 8003f40:	4682      	mov	sl, r0
 8003f42:	460c      	mov	r4, r1
 8003f44:	4690      	mov	r8, r2
 8003f46:	d82d      	bhi.n	8003fa4 <__ssputs_r+0x70>
 8003f48:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003f4c:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8003f50:	d026      	beq.n	8003fa0 <__ssputs_r+0x6c>
 8003f52:	6965      	ldr	r5, [r4, #20]
 8003f54:	6909      	ldr	r1, [r1, #16]
 8003f56:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003f5a:	eba3 0901 	sub.w	r9, r3, r1
 8003f5e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8003f62:	1c7b      	adds	r3, r7, #1
 8003f64:	444b      	add	r3, r9
 8003f66:	106d      	asrs	r5, r5, #1
 8003f68:	429d      	cmp	r5, r3
 8003f6a:	bf38      	it	cc
 8003f6c:	461d      	movcc	r5, r3
 8003f6e:	0553      	lsls	r3, r2, #21
 8003f70:	d527      	bpl.n	8003fc2 <__ssputs_r+0x8e>
 8003f72:	4629      	mov	r1, r5
 8003f74:	f7ff fbd0 	bl	8003718 <_malloc_r>
 8003f78:	4606      	mov	r6, r0
 8003f7a:	b360      	cbz	r0, 8003fd6 <__ssputs_r+0xa2>
 8003f7c:	6921      	ldr	r1, [r4, #16]
 8003f7e:	464a      	mov	r2, r9
 8003f80:	f000 fa06 	bl	8004390 <memcpy>
 8003f84:	89a3      	ldrh	r3, [r4, #12]
 8003f86:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8003f8a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003f8e:	81a3      	strh	r3, [r4, #12]
 8003f90:	6126      	str	r6, [r4, #16]
 8003f92:	6165      	str	r5, [r4, #20]
 8003f94:	444e      	add	r6, r9
 8003f96:	eba5 0509 	sub.w	r5, r5, r9
 8003f9a:	6026      	str	r6, [r4, #0]
 8003f9c:	60a5      	str	r5, [r4, #8]
 8003f9e:	463e      	mov	r6, r7
 8003fa0:	42be      	cmp	r6, r7
 8003fa2:	d900      	bls.n	8003fa6 <__ssputs_r+0x72>
 8003fa4:	463e      	mov	r6, r7
 8003fa6:	6820      	ldr	r0, [r4, #0]
 8003fa8:	4632      	mov	r2, r6
 8003faa:	4641      	mov	r1, r8
 8003fac:	f000 f9c6 	bl	800433c <memmove>
 8003fb0:	68a3      	ldr	r3, [r4, #8]
 8003fb2:	1b9b      	subs	r3, r3, r6
 8003fb4:	60a3      	str	r3, [r4, #8]
 8003fb6:	6823      	ldr	r3, [r4, #0]
 8003fb8:	4433      	add	r3, r6
 8003fba:	6023      	str	r3, [r4, #0]
 8003fbc:	2000      	movs	r0, #0
 8003fbe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003fc2:	462a      	mov	r2, r5
 8003fc4:	f000 fa36 	bl	8004434 <_realloc_r>
 8003fc8:	4606      	mov	r6, r0
 8003fca:	2800      	cmp	r0, #0
 8003fcc:	d1e0      	bne.n	8003f90 <__ssputs_r+0x5c>
 8003fce:	6921      	ldr	r1, [r4, #16]
 8003fd0:	4650      	mov	r0, sl
 8003fd2:	f7ff fb2d 	bl	8003630 <_free_r>
 8003fd6:	230c      	movs	r3, #12
 8003fd8:	f8ca 3000 	str.w	r3, [sl]
 8003fdc:	89a3      	ldrh	r3, [r4, #12]
 8003fde:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003fe2:	81a3      	strh	r3, [r4, #12]
 8003fe4:	f04f 30ff 	mov.w	r0, #4294967295
 8003fe8:	e7e9      	b.n	8003fbe <__ssputs_r+0x8a>
	...

08003fec <_svfiprintf_r>:
 8003fec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003ff0:	4698      	mov	r8, r3
 8003ff2:	898b      	ldrh	r3, [r1, #12]
 8003ff4:	061b      	lsls	r3, r3, #24
 8003ff6:	b09d      	sub	sp, #116	@ 0x74
 8003ff8:	4607      	mov	r7, r0
 8003ffa:	460d      	mov	r5, r1
 8003ffc:	4614      	mov	r4, r2
 8003ffe:	d510      	bpl.n	8004022 <_svfiprintf_r+0x36>
 8004000:	690b      	ldr	r3, [r1, #16]
 8004002:	b973      	cbnz	r3, 8004022 <_svfiprintf_r+0x36>
 8004004:	2140      	movs	r1, #64	@ 0x40
 8004006:	f7ff fb87 	bl	8003718 <_malloc_r>
 800400a:	6028      	str	r0, [r5, #0]
 800400c:	6128      	str	r0, [r5, #16]
 800400e:	b930      	cbnz	r0, 800401e <_svfiprintf_r+0x32>
 8004010:	230c      	movs	r3, #12
 8004012:	603b      	str	r3, [r7, #0]
 8004014:	f04f 30ff 	mov.w	r0, #4294967295
 8004018:	b01d      	add	sp, #116	@ 0x74
 800401a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800401e:	2340      	movs	r3, #64	@ 0x40
 8004020:	616b      	str	r3, [r5, #20]
 8004022:	2300      	movs	r3, #0
 8004024:	9309      	str	r3, [sp, #36]	@ 0x24
 8004026:	2320      	movs	r3, #32
 8004028:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800402c:	f8cd 800c 	str.w	r8, [sp, #12]
 8004030:	2330      	movs	r3, #48	@ 0x30
 8004032:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 80041d0 <_svfiprintf_r+0x1e4>
 8004036:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800403a:	f04f 0901 	mov.w	r9, #1
 800403e:	4623      	mov	r3, r4
 8004040:	469a      	mov	sl, r3
 8004042:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004046:	b10a      	cbz	r2, 800404c <_svfiprintf_r+0x60>
 8004048:	2a25      	cmp	r2, #37	@ 0x25
 800404a:	d1f9      	bne.n	8004040 <_svfiprintf_r+0x54>
 800404c:	ebba 0b04 	subs.w	fp, sl, r4
 8004050:	d00b      	beq.n	800406a <_svfiprintf_r+0x7e>
 8004052:	465b      	mov	r3, fp
 8004054:	4622      	mov	r2, r4
 8004056:	4629      	mov	r1, r5
 8004058:	4638      	mov	r0, r7
 800405a:	f7ff ff6b 	bl	8003f34 <__ssputs_r>
 800405e:	3001      	adds	r0, #1
 8004060:	f000 80a7 	beq.w	80041b2 <_svfiprintf_r+0x1c6>
 8004064:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004066:	445a      	add	r2, fp
 8004068:	9209      	str	r2, [sp, #36]	@ 0x24
 800406a:	f89a 3000 	ldrb.w	r3, [sl]
 800406e:	2b00      	cmp	r3, #0
 8004070:	f000 809f 	beq.w	80041b2 <_svfiprintf_r+0x1c6>
 8004074:	2300      	movs	r3, #0
 8004076:	f04f 32ff 	mov.w	r2, #4294967295
 800407a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800407e:	f10a 0a01 	add.w	sl, sl, #1
 8004082:	9304      	str	r3, [sp, #16]
 8004084:	9307      	str	r3, [sp, #28]
 8004086:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800408a:	931a      	str	r3, [sp, #104]	@ 0x68
 800408c:	4654      	mov	r4, sl
 800408e:	2205      	movs	r2, #5
 8004090:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004094:	484e      	ldr	r0, [pc, #312]	@ (80041d0 <_svfiprintf_r+0x1e4>)
 8004096:	f7fc f8a3 	bl	80001e0 <memchr>
 800409a:	9a04      	ldr	r2, [sp, #16]
 800409c:	b9d8      	cbnz	r0, 80040d6 <_svfiprintf_r+0xea>
 800409e:	06d0      	lsls	r0, r2, #27
 80040a0:	bf44      	itt	mi
 80040a2:	2320      	movmi	r3, #32
 80040a4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80040a8:	0711      	lsls	r1, r2, #28
 80040aa:	bf44      	itt	mi
 80040ac:	232b      	movmi	r3, #43	@ 0x2b
 80040ae:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80040b2:	f89a 3000 	ldrb.w	r3, [sl]
 80040b6:	2b2a      	cmp	r3, #42	@ 0x2a
 80040b8:	d015      	beq.n	80040e6 <_svfiprintf_r+0xfa>
 80040ba:	9a07      	ldr	r2, [sp, #28]
 80040bc:	4654      	mov	r4, sl
 80040be:	2000      	movs	r0, #0
 80040c0:	f04f 0c0a 	mov.w	ip, #10
 80040c4:	4621      	mov	r1, r4
 80040c6:	f811 3b01 	ldrb.w	r3, [r1], #1
 80040ca:	3b30      	subs	r3, #48	@ 0x30
 80040cc:	2b09      	cmp	r3, #9
 80040ce:	d94b      	bls.n	8004168 <_svfiprintf_r+0x17c>
 80040d0:	b1b0      	cbz	r0, 8004100 <_svfiprintf_r+0x114>
 80040d2:	9207      	str	r2, [sp, #28]
 80040d4:	e014      	b.n	8004100 <_svfiprintf_r+0x114>
 80040d6:	eba0 0308 	sub.w	r3, r0, r8
 80040da:	fa09 f303 	lsl.w	r3, r9, r3
 80040de:	4313      	orrs	r3, r2
 80040e0:	9304      	str	r3, [sp, #16]
 80040e2:	46a2      	mov	sl, r4
 80040e4:	e7d2      	b.n	800408c <_svfiprintf_r+0xa0>
 80040e6:	9b03      	ldr	r3, [sp, #12]
 80040e8:	1d19      	adds	r1, r3, #4
 80040ea:	681b      	ldr	r3, [r3, #0]
 80040ec:	9103      	str	r1, [sp, #12]
 80040ee:	2b00      	cmp	r3, #0
 80040f0:	bfbb      	ittet	lt
 80040f2:	425b      	neglt	r3, r3
 80040f4:	f042 0202 	orrlt.w	r2, r2, #2
 80040f8:	9307      	strge	r3, [sp, #28]
 80040fa:	9307      	strlt	r3, [sp, #28]
 80040fc:	bfb8      	it	lt
 80040fe:	9204      	strlt	r2, [sp, #16]
 8004100:	7823      	ldrb	r3, [r4, #0]
 8004102:	2b2e      	cmp	r3, #46	@ 0x2e
 8004104:	d10a      	bne.n	800411c <_svfiprintf_r+0x130>
 8004106:	7863      	ldrb	r3, [r4, #1]
 8004108:	2b2a      	cmp	r3, #42	@ 0x2a
 800410a:	d132      	bne.n	8004172 <_svfiprintf_r+0x186>
 800410c:	9b03      	ldr	r3, [sp, #12]
 800410e:	1d1a      	adds	r2, r3, #4
 8004110:	681b      	ldr	r3, [r3, #0]
 8004112:	9203      	str	r2, [sp, #12]
 8004114:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8004118:	3402      	adds	r4, #2
 800411a:	9305      	str	r3, [sp, #20]
 800411c:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 80041e0 <_svfiprintf_r+0x1f4>
 8004120:	7821      	ldrb	r1, [r4, #0]
 8004122:	2203      	movs	r2, #3
 8004124:	4650      	mov	r0, sl
 8004126:	f7fc f85b 	bl	80001e0 <memchr>
 800412a:	b138      	cbz	r0, 800413c <_svfiprintf_r+0x150>
 800412c:	9b04      	ldr	r3, [sp, #16]
 800412e:	eba0 000a 	sub.w	r0, r0, sl
 8004132:	2240      	movs	r2, #64	@ 0x40
 8004134:	4082      	lsls	r2, r0
 8004136:	4313      	orrs	r3, r2
 8004138:	3401      	adds	r4, #1
 800413a:	9304      	str	r3, [sp, #16]
 800413c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004140:	4824      	ldr	r0, [pc, #144]	@ (80041d4 <_svfiprintf_r+0x1e8>)
 8004142:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8004146:	2206      	movs	r2, #6
 8004148:	f7fc f84a 	bl	80001e0 <memchr>
 800414c:	2800      	cmp	r0, #0
 800414e:	d036      	beq.n	80041be <_svfiprintf_r+0x1d2>
 8004150:	4b21      	ldr	r3, [pc, #132]	@ (80041d8 <_svfiprintf_r+0x1ec>)
 8004152:	bb1b      	cbnz	r3, 800419c <_svfiprintf_r+0x1b0>
 8004154:	9b03      	ldr	r3, [sp, #12]
 8004156:	3307      	adds	r3, #7
 8004158:	f023 0307 	bic.w	r3, r3, #7
 800415c:	3308      	adds	r3, #8
 800415e:	9303      	str	r3, [sp, #12]
 8004160:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004162:	4433      	add	r3, r6
 8004164:	9309      	str	r3, [sp, #36]	@ 0x24
 8004166:	e76a      	b.n	800403e <_svfiprintf_r+0x52>
 8004168:	fb0c 3202 	mla	r2, ip, r2, r3
 800416c:	460c      	mov	r4, r1
 800416e:	2001      	movs	r0, #1
 8004170:	e7a8      	b.n	80040c4 <_svfiprintf_r+0xd8>
 8004172:	2300      	movs	r3, #0
 8004174:	3401      	adds	r4, #1
 8004176:	9305      	str	r3, [sp, #20]
 8004178:	4619      	mov	r1, r3
 800417a:	f04f 0c0a 	mov.w	ip, #10
 800417e:	4620      	mov	r0, r4
 8004180:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004184:	3a30      	subs	r2, #48	@ 0x30
 8004186:	2a09      	cmp	r2, #9
 8004188:	d903      	bls.n	8004192 <_svfiprintf_r+0x1a6>
 800418a:	2b00      	cmp	r3, #0
 800418c:	d0c6      	beq.n	800411c <_svfiprintf_r+0x130>
 800418e:	9105      	str	r1, [sp, #20]
 8004190:	e7c4      	b.n	800411c <_svfiprintf_r+0x130>
 8004192:	fb0c 2101 	mla	r1, ip, r1, r2
 8004196:	4604      	mov	r4, r0
 8004198:	2301      	movs	r3, #1
 800419a:	e7f0      	b.n	800417e <_svfiprintf_r+0x192>
 800419c:	ab03      	add	r3, sp, #12
 800419e:	9300      	str	r3, [sp, #0]
 80041a0:	462a      	mov	r2, r5
 80041a2:	4b0e      	ldr	r3, [pc, #56]	@ (80041dc <_svfiprintf_r+0x1f0>)
 80041a4:	a904      	add	r1, sp, #16
 80041a6:	4638      	mov	r0, r7
 80041a8:	f7fd fe84 	bl	8001eb4 <_printf_float>
 80041ac:	1c42      	adds	r2, r0, #1
 80041ae:	4606      	mov	r6, r0
 80041b0:	d1d6      	bne.n	8004160 <_svfiprintf_r+0x174>
 80041b2:	89ab      	ldrh	r3, [r5, #12]
 80041b4:	065b      	lsls	r3, r3, #25
 80041b6:	f53f af2d 	bmi.w	8004014 <_svfiprintf_r+0x28>
 80041ba:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80041bc:	e72c      	b.n	8004018 <_svfiprintf_r+0x2c>
 80041be:	ab03      	add	r3, sp, #12
 80041c0:	9300      	str	r3, [sp, #0]
 80041c2:	462a      	mov	r2, r5
 80041c4:	4b05      	ldr	r3, [pc, #20]	@ (80041dc <_svfiprintf_r+0x1f0>)
 80041c6:	a904      	add	r1, sp, #16
 80041c8:	4638      	mov	r0, r7
 80041ca:	f7fe f90b 	bl	80023e4 <_printf_i>
 80041ce:	e7ed      	b.n	80041ac <_svfiprintf_r+0x1c0>
 80041d0:	08004d40 	.word	0x08004d40
 80041d4:	08004d4a 	.word	0x08004d4a
 80041d8:	08001eb5 	.word	0x08001eb5
 80041dc:	08003f35 	.word	0x08003f35
 80041e0:	08004d46 	.word	0x08004d46

080041e4 <__sflush_r>:
 80041e4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80041e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80041ec:	0716      	lsls	r6, r2, #28
 80041ee:	4605      	mov	r5, r0
 80041f0:	460c      	mov	r4, r1
 80041f2:	d454      	bmi.n	800429e <__sflush_r+0xba>
 80041f4:	684b      	ldr	r3, [r1, #4]
 80041f6:	2b00      	cmp	r3, #0
 80041f8:	dc02      	bgt.n	8004200 <__sflush_r+0x1c>
 80041fa:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80041fc:	2b00      	cmp	r3, #0
 80041fe:	dd48      	ble.n	8004292 <__sflush_r+0xae>
 8004200:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8004202:	2e00      	cmp	r6, #0
 8004204:	d045      	beq.n	8004292 <__sflush_r+0xae>
 8004206:	2300      	movs	r3, #0
 8004208:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800420c:	682f      	ldr	r7, [r5, #0]
 800420e:	6a21      	ldr	r1, [r4, #32]
 8004210:	602b      	str	r3, [r5, #0]
 8004212:	d030      	beq.n	8004276 <__sflush_r+0x92>
 8004214:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8004216:	89a3      	ldrh	r3, [r4, #12]
 8004218:	0759      	lsls	r1, r3, #29
 800421a:	d505      	bpl.n	8004228 <__sflush_r+0x44>
 800421c:	6863      	ldr	r3, [r4, #4]
 800421e:	1ad2      	subs	r2, r2, r3
 8004220:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8004222:	b10b      	cbz	r3, 8004228 <__sflush_r+0x44>
 8004224:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004226:	1ad2      	subs	r2, r2, r3
 8004228:	2300      	movs	r3, #0
 800422a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800422c:	6a21      	ldr	r1, [r4, #32]
 800422e:	4628      	mov	r0, r5
 8004230:	47b0      	blx	r6
 8004232:	1c43      	adds	r3, r0, #1
 8004234:	89a3      	ldrh	r3, [r4, #12]
 8004236:	d106      	bne.n	8004246 <__sflush_r+0x62>
 8004238:	6829      	ldr	r1, [r5, #0]
 800423a:	291d      	cmp	r1, #29
 800423c:	d82b      	bhi.n	8004296 <__sflush_r+0xb2>
 800423e:	4a2a      	ldr	r2, [pc, #168]	@ (80042e8 <__sflush_r+0x104>)
 8004240:	410a      	asrs	r2, r1
 8004242:	07d6      	lsls	r6, r2, #31
 8004244:	d427      	bmi.n	8004296 <__sflush_r+0xb2>
 8004246:	2200      	movs	r2, #0
 8004248:	6062      	str	r2, [r4, #4]
 800424a:	04d9      	lsls	r1, r3, #19
 800424c:	6922      	ldr	r2, [r4, #16]
 800424e:	6022      	str	r2, [r4, #0]
 8004250:	d504      	bpl.n	800425c <__sflush_r+0x78>
 8004252:	1c42      	adds	r2, r0, #1
 8004254:	d101      	bne.n	800425a <__sflush_r+0x76>
 8004256:	682b      	ldr	r3, [r5, #0]
 8004258:	b903      	cbnz	r3, 800425c <__sflush_r+0x78>
 800425a:	6560      	str	r0, [r4, #84]	@ 0x54
 800425c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800425e:	602f      	str	r7, [r5, #0]
 8004260:	b1b9      	cbz	r1, 8004292 <__sflush_r+0xae>
 8004262:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8004266:	4299      	cmp	r1, r3
 8004268:	d002      	beq.n	8004270 <__sflush_r+0x8c>
 800426a:	4628      	mov	r0, r5
 800426c:	f7ff f9e0 	bl	8003630 <_free_r>
 8004270:	2300      	movs	r3, #0
 8004272:	6363      	str	r3, [r4, #52]	@ 0x34
 8004274:	e00d      	b.n	8004292 <__sflush_r+0xae>
 8004276:	2301      	movs	r3, #1
 8004278:	4628      	mov	r0, r5
 800427a:	47b0      	blx	r6
 800427c:	4602      	mov	r2, r0
 800427e:	1c50      	adds	r0, r2, #1
 8004280:	d1c9      	bne.n	8004216 <__sflush_r+0x32>
 8004282:	682b      	ldr	r3, [r5, #0]
 8004284:	2b00      	cmp	r3, #0
 8004286:	d0c6      	beq.n	8004216 <__sflush_r+0x32>
 8004288:	2b1d      	cmp	r3, #29
 800428a:	d001      	beq.n	8004290 <__sflush_r+0xac>
 800428c:	2b16      	cmp	r3, #22
 800428e:	d11e      	bne.n	80042ce <__sflush_r+0xea>
 8004290:	602f      	str	r7, [r5, #0]
 8004292:	2000      	movs	r0, #0
 8004294:	e022      	b.n	80042dc <__sflush_r+0xf8>
 8004296:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800429a:	b21b      	sxth	r3, r3
 800429c:	e01b      	b.n	80042d6 <__sflush_r+0xf2>
 800429e:	690f      	ldr	r7, [r1, #16]
 80042a0:	2f00      	cmp	r7, #0
 80042a2:	d0f6      	beq.n	8004292 <__sflush_r+0xae>
 80042a4:	0793      	lsls	r3, r2, #30
 80042a6:	680e      	ldr	r6, [r1, #0]
 80042a8:	bf08      	it	eq
 80042aa:	694b      	ldreq	r3, [r1, #20]
 80042ac:	600f      	str	r7, [r1, #0]
 80042ae:	bf18      	it	ne
 80042b0:	2300      	movne	r3, #0
 80042b2:	eba6 0807 	sub.w	r8, r6, r7
 80042b6:	608b      	str	r3, [r1, #8]
 80042b8:	f1b8 0f00 	cmp.w	r8, #0
 80042bc:	dde9      	ble.n	8004292 <__sflush_r+0xae>
 80042be:	6a21      	ldr	r1, [r4, #32]
 80042c0:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80042c2:	4643      	mov	r3, r8
 80042c4:	463a      	mov	r2, r7
 80042c6:	4628      	mov	r0, r5
 80042c8:	47b0      	blx	r6
 80042ca:	2800      	cmp	r0, #0
 80042cc:	dc08      	bgt.n	80042e0 <__sflush_r+0xfc>
 80042ce:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80042d2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80042d6:	81a3      	strh	r3, [r4, #12]
 80042d8:	f04f 30ff 	mov.w	r0, #4294967295
 80042dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80042e0:	4407      	add	r7, r0
 80042e2:	eba8 0800 	sub.w	r8, r8, r0
 80042e6:	e7e7      	b.n	80042b8 <__sflush_r+0xd4>
 80042e8:	dfbffffe 	.word	0xdfbffffe

080042ec <_fflush_r>:
 80042ec:	b538      	push	{r3, r4, r5, lr}
 80042ee:	690b      	ldr	r3, [r1, #16]
 80042f0:	4605      	mov	r5, r0
 80042f2:	460c      	mov	r4, r1
 80042f4:	b913      	cbnz	r3, 80042fc <_fflush_r+0x10>
 80042f6:	2500      	movs	r5, #0
 80042f8:	4628      	mov	r0, r5
 80042fa:	bd38      	pop	{r3, r4, r5, pc}
 80042fc:	b118      	cbz	r0, 8004306 <_fflush_r+0x1a>
 80042fe:	6a03      	ldr	r3, [r0, #32]
 8004300:	b90b      	cbnz	r3, 8004306 <_fflush_r+0x1a>
 8004302:	f7fe fa1b 	bl	800273c <__sinit>
 8004306:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800430a:	2b00      	cmp	r3, #0
 800430c:	d0f3      	beq.n	80042f6 <_fflush_r+0xa>
 800430e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8004310:	07d0      	lsls	r0, r2, #31
 8004312:	d404      	bmi.n	800431e <_fflush_r+0x32>
 8004314:	0599      	lsls	r1, r3, #22
 8004316:	d402      	bmi.n	800431e <_fflush_r+0x32>
 8004318:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800431a:	f7fe fb3a 	bl	8002992 <__retarget_lock_acquire_recursive>
 800431e:	4628      	mov	r0, r5
 8004320:	4621      	mov	r1, r4
 8004322:	f7ff ff5f 	bl	80041e4 <__sflush_r>
 8004326:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8004328:	07da      	lsls	r2, r3, #31
 800432a:	4605      	mov	r5, r0
 800432c:	d4e4      	bmi.n	80042f8 <_fflush_r+0xc>
 800432e:	89a3      	ldrh	r3, [r4, #12]
 8004330:	059b      	lsls	r3, r3, #22
 8004332:	d4e1      	bmi.n	80042f8 <_fflush_r+0xc>
 8004334:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8004336:	f7fe fb2d 	bl	8002994 <__retarget_lock_release_recursive>
 800433a:	e7dd      	b.n	80042f8 <_fflush_r+0xc>

0800433c <memmove>:
 800433c:	4288      	cmp	r0, r1
 800433e:	b510      	push	{r4, lr}
 8004340:	eb01 0402 	add.w	r4, r1, r2
 8004344:	d902      	bls.n	800434c <memmove+0x10>
 8004346:	4284      	cmp	r4, r0
 8004348:	4623      	mov	r3, r4
 800434a:	d807      	bhi.n	800435c <memmove+0x20>
 800434c:	1e43      	subs	r3, r0, #1
 800434e:	42a1      	cmp	r1, r4
 8004350:	d008      	beq.n	8004364 <memmove+0x28>
 8004352:	f811 2b01 	ldrb.w	r2, [r1], #1
 8004356:	f803 2f01 	strb.w	r2, [r3, #1]!
 800435a:	e7f8      	b.n	800434e <memmove+0x12>
 800435c:	4402      	add	r2, r0
 800435e:	4601      	mov	r1, r0
 8004360:	428a      	cmp	r2, r1
 8004362:	d100      	bne.n	8004366 <memmove+0x2a>
 8004364:	bd10      	pop	{r4, pc}
 8004366:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800436a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800436e:	e7f7      	b.n	8004360 <memmove+0x24>

08004370 <_sbrk_r>:
 8004370:	b538      	push	{r3, r4, r5, lr}
 8004372:	4d06      	ldr	r5, [pc, #24]	@ (800438c <_sbrk_r+0x1c>)
 8004374:	2300      	movs	r3, #0
 8004376:	4604      	mov	r4, r0
 8004378:	4608      	mov	r0, r1
 800437a:	602b      	str	r3, [r5, #0]
 800437c:	f7fd fc8a 	bl	8001c94 <_sbrk>
 8004380:	1c43      	adds	r3, r0, #1
 8004382:	d102      	bne.n	800438a <_sbrk_r+0x1a>
 8004384:	682b      	ldr	r3, [r5, #0]
 8004386:	b103      	cbz	r3, 800438a <_sbrk_r+0x1a>
 8004388:	6023      	str	r3, [r4, #0]
 800438a:	bd38      	pop	{r3, r4, r5, pc}
 800438c:	2000033c 	.word	0x2000033c

08004390 <memcpy>:
 8004390:	440a      	add	r2, r1
 8004392:	4291      	cmp	r1, r2
 8004394:	f100 33ff 	add.w	r3, r0, #4294967295
 8004398:	d100      	bne.n	800439c <memcpy+0xc>
 800439a:	4770      	bx	lr
 800439c:	b510      	push	{r4, lr}
 800439e:	f811 4b01 	ldrb.w	r4, [r1], #1
 80043a2:	f803 4f01 	strb.w	r4, [r3, #1]!
 80043a6:	4291      	cmp	r1, r2
 80043a8:	d1f9      	bne.n	800439e <memcpy+0xe>
 80043aa:	bd10      	pop	{r4, pc}

080043ac <__assert_func>:
 80043ac:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80043ae:	4614      	mov	r4, r2
 80043b0:	461a      	mov	r2, r3
 80043b2:	4b09      	ldr	r3, [pc, #36]	@ (80043d8 <__assert_func+0x2c>)
 80043b4:	681b      	ldr	r3, [r3, #0]
 80043b6:	4605      	mov	r5, r0
 80043b8:	68d8      	ldr	r0, [r3, #12]
 80043ba:	b954      	cbnz	r4, 80043d2 <__assert_func+0x26>
 80043bc:	4b07      	ldr	r3, [pc, #28]	@ (80043dc <__assert_func+0x30>)
 80043be:	461c      	mov	r4, r3
 80043c0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80043c4:	9100      	str	r1, [sp, #0]
 80043c6:	462b      	mov	r3, r5
 80043c8:	4905      	ldr	r1, [pc, #20]	@ (80043e0 <__assert_func+0x34>)
 80043ca:	f000 f86f 	bl	80044ac <fiprintf>
 80043ce:	f000 f87f 	bl	80044d0 <abort>
 80043d2:	4b04      	ldr	r3, [pc, #16]	@ (80043e4 <__assert_func+0x38>)
 80043d4:	e7f4      	b.n	80043c0 <__assert_func+0x14>
 80043d6:	bf00      	nop
 80043d8:	20000014 	.word	0x20000014
 80043dc:	08004d96 	.word	0x08004d96
 80043e0:	08004d68 	.word	0x08004d68
 80043e4:	08004d5b 	.word	0x08004d5b

080043e8 <_calloc_r>:
 80043e8:	b570      	push	{r4, r5, r6, lr}
 80043ea:	fba1 5402 	umull	r5, r4, r1, r2
 80043ee:	b93c      	cbnz	r4, 8004400 <_calloc_r+0x18>
 80043f0:	4629      	mov	r1, r5
 80043f2:	f7ff f991 	bl	8003718 <_malloc_r>
 80043f6:	4606      	mov	r6, r0
 80043f8:	b928      	cbnz	r0, 8004406 <_calloc_r+0x1e>
 80043fa:	2600      	movs	r6, #0
 80043fc:	4630      	mov	r0, r6
 80043fe:	bd70      	pop	{r4, r5, r6, pc}
 8004400:	220c      	movs	r2, #12
 8004402:	6002      	str	r2, [r0, #0]
 8004404:	e7f9      	b.n	80043fa <_calloc_r+0x12>
 8004406:	462a      	mov	r2, r5
 8004408:	4621      	mov	r1, r4
 800440a:	f7fe fa44 	bl	8002896 <memset>
 800440e:	e7f5      	b.n	80043fc <_calloc_r+0x14>

08004410 <__ascii_mbtowc>:
 8004410:	b082      	sub	sp, #8
 8004412:	b901      	cbnz	r1, 8004416 <__ascii_mbtowc+0x6>
 8004414:	a901      	add	r1, sp, #4
 8004416:	b142      	cbz	r2, 800442a <__ascii_mbtowc+0x1a>
 8004418:	b14b      	cbz	r3, 800442e <__ascii_mbtowc+0x1e>
 800441a:	7813      	ldrb	r3, [r2, #0]
 800441c:	600b      	str	r3, [r1, #0]
 800441e:	7812      	ldrb	r2, [r2, #0]
 8004420:	1e10      	subs	r0, r2, #0
 8004422:	bf18      	it	ne
 8004424:	2001      	movne	r0, #1
 8004426:	b002      	add	sp, #8
 8004428:	4770      	bx	lr
 800442a:	4610      	mov	r0, r2
 800442c:	e7fb      	b.n	8004426 <__ascii_mbtowc+0x16>
 800442e:	f06f 0001 	mvn.w	r0, #1
 8004432:	e7f8      	b.n	8004426 <__ascii_mbtowc+0x16>

08004434 <_realloc_r>:
 8004434:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004438:	4680      	mov	r8, r0
 800443a:	4615      	mov	r5, r2
 800443c:	460c      	mov	r4, r1
 800443e:	b921      	cbnz	r1, 800444a <_realloc_r+0x16>
 8004440:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004444:	4611      	mov	r1, r2
 8004446:	f7ff b967 	b.w	8003718 <_malloc_r>
 800444a:	b92a      	cbnz	r2, 8004458 <_realloc_r+0x24>
 800444c:	f7ff f8f0 	bl	8003630 <_free_r>
 8004450:	2400      	movs	r4, #0
 8004452:	4620      	mov	r0, r4
 8004454:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004458:	f000 f841 	bl	80044de <_malloc_usable_size_r>
 800445c:	4285      	cmp	r5, r0
 800445e:	4606      	mov	r6, r0
 8004460:	d802      	bhi.n	8004468 <_realloc_r+0x34>
 8004462:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 8004466:	d8f4      	bhi.n	8004452 <_realloc_r+0x1e>
 8004468:	4629      	mov	r1, r5
 800446a:	4640      	mov	r0, r8
 800446c:	f7ff f954 	bl	8003718 <_malloc_r>
 8004470:	4607      	mov	r7, r0
 8004472:	2800      	cmp	r0, #0
 8004474:	d0ec      	beq.n	8004450 <_realloc_r+0x1c>
 8004476:	42b5      	cmp	r5, r6
 8004478:	462a      	mov	r2, r5
 800447a:	4621      	mov	r1, r4
 800447c:	bf28      	it	cs
 800447e:	4632      	movcs	r2, r6
 8004480:	f7ff ff86 	bl	8004390 <memcpy>
 8004484:	4621      	mov	r1, r4
 8004486:	4640      	mov	r0, r8
 8004488:	f7ff f8d2 	bl	8003630 <_free_r>
 800448c:	463c      	mov	r4, r7
 800448e:	e7e0      	b.n	8004452 <_realloc_r+0x1e>

08004490 <__ascii_wctomb>:
 8004490:	4603      	mov	r3, r0
 8004492:	4608      	mov	r0, r1
 8004494:	b141      	cbz	r1, 80044a8 <__ascii_wctomb+0x18>
 8004496:	2aff      	cmp	r2, #255	@ 0xff
 8004498:	d904      	bls.n	80044a4 <__ascii_wctomb+0x14>
 800449a:	228a      	movs	r2, #138	@ 0x8a
 800449c:	601a      	str	r2, [r3, #0]
 800449e:	f04f 30ff 	mov.w	r0, #4294967295
 80044a2:	4770      	bx	lr
 80044a4:	700a      	strb	r2, [r1, #0]
 80044a6:	2001      	movs	r0, #1
 80044a8:	4770      	bx	lr
	...

080044ac <fiprintf>:
 80044ac:	b40e      	push	{r1, r2, r3}
 80044ae:	b503      	push	{r0, r1, lr}
 80044b0:	4601      	mov	r1, r0
 80044b2:	ab03      	add	r3, sp, #12
 80044b4:	4805      	ldr	r0, [pc, #20]	@ (80044cc <fiprintf+0x20>)
 80044b6:	f853 2b04 	ldr.w	r2, [r3], #4
 80044ba:	6800      	ldr	r0, [r0, #0]
 80044bc:	9301      	str	r3, [sp, #4]
 80044be:	f000 f83f 	bl	8004540 <_vfiprintf_r>
 80044c2:	b002      	add	sp, #8
 80044c4:	f85d eb04 	ldr.w	lr, [sp], #4
 80044c8:	b003      	add	sp, #12
 80044ca:	4770      	bx	lr
 80044cc:	20000014 	.word	0x20000014

080044d0 <abort>:
 80044d0:	b508      	push	{r3, lr}
 80044d2:	2006      	movs	r0, #6
 80044d4:	f000 fa08 	bl	80048e8 <raise>
 80044d8:	2001      	movs	r0, #1
 80044da:	f7fd fb62 	bl	8001ba2 <_exit>

080044de <_malloc_usable_size_r>:
 80044de:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80044e2:	1f18      	subs	r0, r3, #4
 80044e4:	2b00      	cmp	r3, #0
 80044e6:	bfbc      	itt	lt
 80044e8:	580b      	ldrlt	r3, [r1, r0]
 80044ea:	18c0      	addlt	r0, r0, r3
 80044ec:	4770      	bx	lr

080044ee <__sfputc_r>:
 80044ee:	6893      	ldr	r3, [r2, #8]
 80044f0:	3b01      	subs	r3, #1
 80044f2:	2b00      	cmp	r3, #0
 80044f4:	b410      	push	{r4}
 80044f6:	6093      	str	r3, [r2, #8]
 80044f8:	da08      	bge.n	800450c <__sfputc_r+0x1e>
 80044fa:	6994      	ldr	r4, [r2, #24]
 80044fc:	42a3      	cmp	r3, r4
 80044fe:	db01      	blt.n	8004504 <__sfputc_r+0x16>
 8004500:	290a      	cmp	r1, #10
 8004502:	d103      	bne.n	800450c <__sfputc_r+0x1e>
 8004504:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004508:	f000 b932 	b.w	8004770 <__swbuf_r>
 800450c:	6813      	ldr	r3, [r2, #0]
 800450e:	1c58      	adds	r0, r3, #1
 8004510:	6010      	str	r0, [r2, #0]
 8004512:	7019      	strb	r1, [r3, #0]
 8004514:	4608      	mov	r0, r1
 8004516:	f85d 4b04 	ldr.w	r4, [sp], #4
 800451a:	4770      	bx	lr

0800451c <__sfputs_r>:
 800451c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800451e:	4606      	mov	r6, r0
 8004520:	460f      	mov	r7, r1
 8004522:	4614      	mov	r4, r2
 8004524:	18d5      	adds	r5, r2, r3
 8004526:	42ac      	cmp	r4, r5
 8004528:	d101      	bne.n	800452e <__sfputs_r+0x12>
 800452a:	2000      	movs	r0, #0
 800452c:	e007      	b.n	800453e <__sfputs_r+0x22>
 800452e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004532:	463a      	mov	r2, r7
 8004534:	4630      	mov	r0, r6
 8004536:	f7ff ffda 	bl	80044ee <__sfputc_r>
 800453a:	1c43      	adds	r3, r0, #1
 800453c:	d1f3      	bne.n	8004526 <__sfputs_r+0xa>
 800453e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08004540 <_vfiprintf_r>:
 8004540:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004544:	460d      	mov	r5, r1
 8004546:	b09d      	sub	sp, #116	@ 0x74
 8004548:	4614      	mov	r4, r2
 800454a:	4698      	mov	r8, r3
 800454c:	4606      	mov	r6, r0
 800454e:	b118      	cbz	r0, 8004558 <_vfiprintf_r+0x18>
 8004550:	6a03      	ldr	r3, [r0, #32]
 8004552:	b90b      	cbnz	r3, 8004558 <_vfiprintf_r+0x18>
 8004554:	f7fe f8f2 	bl	800273c <__sinit>
 8004558:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800455a:	07d9      	lsls	r1, r3, #31
 800455c:	d405      	bmi.n	800456a <_vfiprintf_r+0x2a>
 800455e:	89ab      	ldrh	r3, [r5, #12]
 8004560:	059a      	lsls	r2, r3, #22
 8004562:	d402      	bmi.n	800456a <_vfiprintf_r+0x2a>
 8004564:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8004566:	f7fe fa14 	bl	8002992 <__retarget_lock_acquire_recursive>
 800456a:	89ab      	ldrh	r3, [r5, #12]
 800456c:	071b      	lsls	r3, r3, #28
 800456e:	d501      	bpl.n	8004574 <_vfiprintf_r+0x34>
 8004570:	692b      	ldr	r3, [r5, #16]
 8004572:	b99b      	cbnz	r3, 800459c <_vfiprintf_r+0x5c>
 8004574:	4629      	mov	r1, r5
 8004576:	4630      	mov	r0, r6
 8004578:	f000 f938 	bl	80047ec <__swsetup_r>
 800457c:	b170      	cbz	r0, 800459c <_vfiprintf_r+0x5c>
 800457e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8004580:	07dc      	lsls	r4, r3, #31
 8004582:	d504      	bpl.n	800458e <_vfiprintf_r+0x4e>
 8004584:	f04f 30ff 	mov.w	r0, #4294967295
 8004588:	b01d      	add	sp, #116	@ 0x74
 800458a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800458e:	89ab      	ldrh	r3, [r5, #12]
 8004590:	0598      	lsls	r0, r3, #22
 8004592:	d4f7      	bmi.n	8004584 <_vfiprintf_r+0x44>
 8004594:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8004596:	f7fe f9fd 	bl	8002994 <__retarget_lock_release_recursive>
 800459a:	e7f3      	b.n	8004584 <_vfiprintf_r+0x44>
 800459c:	2300      	movs	r3, #0
 800459e:	9309      	str	r3, [sp, #36]	@ 0x24
 80045a0:	2320      	movs	r3, #32
 80045a2:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80045a6:	f8cd 800c 	str.w	r8, [sp, #12]
 80045aa:	2330      	movs	r3, #48	@ 0x30
 80045ac:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 800475c <_vfiprintf_r+0x21c>
 80045b0:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80045b4:	f04f 0901 	mov.w	r9, #1
 80045b8:	4623      	mov	r3, r4
 80045ba:	469a      	mov	sl, r3
 80045bc:	f813 2b01 	ldrb.w	r2, [r3], #1
 80045c0:	b10a      	cbz	r2, 80045c6 <_vfiprintf_r+0x86>
 80045c2:	2a25      	cmp	r2, #37	@ 0x25
 80045c4:	d1f9      	bne.n	80045ba <_vfiprintf_r+0x7a>
 80045c6:	ebba 0b04 	subs.w	fp, sl, r4
 80045ca:	d00b      	beq.n	80045e4 <_vfiprintf_r+0xa4>
 80045cc:	465b      	mov	r3, fp
 80045ce:	4622      	mov	r2, r4
 80045d0:	4629      	mov	r1, r5
 80045d2:	4630      	mov	r0, r6
 80045d4:	f7ff ffa2 	bl	800451c <__sfputs_r>
 80045d8:	3001      	adds	r0, #1
 80045da:	f000 80a7 	beq.w	800472c <_vfiprintf_r+0x1ec>
 80045de:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80045e0:	445a      	add	r2, fp
 80045e2:	9209      	str	r2, [sp, #36]	@ 0x24
 80045e4:	f89a 3000 	ldrb.w	r3, [sl]
 80045e8:	2b00      	cmp	r3, #0
 80045ea:	f000 809f 	beq.w	800472c <_vfiprintf_r+0x1ec>
 80045ee:	2300      	movs	r3, #0
 80045f0:	f04f 32ff 	mov.w	r2, #4294967295
 80045f4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80045f8:	f10a 0a01 	add.w	sl, sl, #1
 80045fc:	9304      	str	r3, [sp, #16]
 80045fe:	9307      	str	r3, [sp, #28]
 8004600:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8004604:	931a      	str	r3, [sp, #104]	@ 0x68
 8004606:	4654      	mov	r4, sl
 8004608:	2205      	movs	r2, #5
 800460a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800460e:	4853      	ldr	r0, [pc, #332]	@ (800475c <_vfiprintf_r+0x21c>)
 8004610:	f7fb fde6 	bl	80001e0 <memchr>
 8004614:	9a04      	ldr	r2, [sp, #16]
 8004616:	b9d8      	cbnz	r0, 8004650 <_vfiprintf_r+0x110>
 8004618:	06d1      	lsls	r1, r2, #27
 800461a:	bf44      	itt	mi
 800461c:	2320      	movmi	r3, #32
 800461e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004622:	0713      	lsls	r3, r2, #28
 8004624:	bf44      	itt	mi
 8004626:	232b      	movmi	r3, #43	@ 0x2b
 8004628:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800462c:	f89a 3000 	ldrb.w	r3, [sl]
 8004630:	2b2a      	cmp	r3, #42	@ 0x2a
 8004632:	d015      	beq.n	8004660 <_vfiprintf_r+0x120>
 8004634:	9a07      	ldr	r2, [sp, #28]
 8004636:	4654      	mov	r4, sl
 8004638:	2000      	movs	r0, #0
 800463a:	f04f 0c0a 	mov.w	ip, #10
 800463e:	4621      	mov	r1, r4
 8004640:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004644:	3b30      	subs	r3, #48	@ 0x30
 8004646:	2b09      	cmp	r3, #9
 8004648:	d94b      	bls.n	80046e2 <_vfiprintf_r+0x1a2>
 800464a:	b1b0      	cbz	r0, 800467a <_vfiprintf_r+0x13a>
 800464c:	9207      	str	r2, [sp, #28]
 800464e:	e014      	b.n	800467a <_vfiprintf_r+0x13a>
 8004650:	eba0 0308 	sub.w	r3, r0, r8
 8004654:	fa09 f303 	lsl.w	r3, r9, r3
 8004658:	4313      	orrs	r3, r2
 800465a:	9304      	str	r3, [sp, #16]
 800465c:	46a2      	mov	sl, r4
 800465e:	e7d2      	b.n	8004606 <_vfiprintf_r+0xc6>
 8004660:	9b03      	ldr	r3, [sp, #12]
 8004662:	1d19      	adds	r1, r3, #4
 8004664:	681b      	ldr	r3, [r3, #0]
 8004666:	9103      	str	r1, [sp, #12]
 8004668:	2b00      	cmp	r3, #0
 800466a:	bfbb      	ittet	lt
 800466c:	425b      	neglt	r3, r3
 800466e:	f042 0202 	orrlt.w	r2, r2, #2
 8004672:	9307      	strge	r3, [sp, #28]
 8004674:	9307      	strlt	r3, [sp, #28]
 8004676:	bfb8      	it	lt
 8004678:	9204      	strlt	r2, [sp, #16]
 800467a:	7823      	ldrb	r3, [r4, #0]
 800467c:	2b2e      	cmp	r3, #46	@ 0x2e
 800467e:	d10a      	bne.n	8004696 <_vfiprintf_r+0x156>
 8004680:	7863      	ldrb	r3, [r4, #1]
 8004682:	2b2a      	cmp	r3, #42	@ 0x2a
 8004684:	d132      	bne.n	80046ec <_vfiprintf_r+0x1ac>
 8004686:	9b03      	ldr	r3, [sp, #12]
 8004688:	1d1a      	adds	r2, r3, #4
 800468a:	681b      	ldr	r3, [r3, #0]
 800468c:	9203      	str	r2, [sp, #12]
 800468e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8004692:	3402      	adds	r4, #2
 8004694:	9305      	str	r3, [sp, #20]
 8004696:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 800476c <_vfiprintf_r+0x22c>
 800469a:	7821      	ldrb	r1, [r4, #0]
 800469c:	2203      	movs	r2, #3
 800469e:	4650      	mov	r0, sl
 80046a0:	f7fb fd9e 	bl	80001e0 <memchr>
 80046a4:	b138      	cbz	r0, 80046b6 <_vfiprintf_r+0x176>
 80046a6:	9b04      	ldr	r3, [sp, #16]
 80046a8:	eba0 000a 	sub.w	r0, r0, sl
 80046ac:	2240      	movs	r2, #64	@ 0x40
 80046ae:	4082      	lsls	r2, r0
 80046b0:	4313      	orrs	r3, r2
 80046b2:	3401      	adds	r4, #1
 80046b4:	9304      	str	r3, [sp, #16]
 80046b6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80046ba:	4829      	ldr	r0, [pc, #164]	@ (8004760 <_vfiprintf_r+0x220>)
 80046bc:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80046c0:	2206      	movs	r2, #6
 80046c2:	f7fb fd8d 	bl	80001e0 <memchr>
 80046c6:	2800      	cmp	r0, #0
 80046c8:	d03f      	beq.n	800474a <_vfiprintf_r+0x20a>
 80046ca:	4b26      	ldr	r3, [pc, #152]	@ (8004764 <_vfiprintf_r+0x224>)
 80046cc:	bb1b      	cbnz	r3, 8004716 <_vfiprintf_r+0x1d6>
 80046ce:	9b03      	ldr	r3, [sp, #12]
 80046d0:	3307      	adds	r3, #7
 80046d2:	f023 0307 	bic.w	r3, r3, #7
 80046d6:	3308      	adds	r3, #8
 80046d8:	9303      	str	r3, [sp, #12]
 80046da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80046dc:	443b      	add	r3, r7
 80046de:	9309      	str	r3, [sp, #36]	@ 0x24
 80046e0:	e76a      	b.n	80045b8 <_vfiprintf_r+0x78>
 80046e2:	fb0c 3202 	mla	r2, ip, r2, r3
 80046e6:	460c      	mov	r4, r1
 80046e8:	2001      	movs	r0, #1
 80046ea:	e7a8      	b.n	800463e <_vfiprintf_r+0xfe>
 80046ec:	2300      	movs	r3, #0
 80046ee:	3401      	adds	r4, #1
 80046f0:	9305      	str	r3, [sp, #20]
 80046f2:	4619      	mov	r1, r3
 80046f4:	f04f 0c0a 	mov.w	ip, #10
 80046f8:	4620      	mov	r0, r4
 80046fa:	f810 2b01 	ldrb.w	r2, [r0], #1
 80046fe:	3a30      	subs	r2, #48	@ 0x30
 8004700:	2a09      	cmp	r2, #9
 8004702:	d903      	bls.n	800470c <_vfiprintf_r+0x1cc>
 8004704:	2b00      	cmp	r3, #0
 8004706:	d0c6      	beq.n	8004696 <_vfiprintf_r+0x156>
 8004708:	9105      	str	r1, [sp, #20]
 800470a:	e7c4      	b.n	8004696 <_vfiprintf_r+0x156>
 800470c:	fb0c 2101 	mla	r1, ip, r1, r2
 8004710:	4604      	mov	r4, r0
 8004712:	2301      	movs	r3, #1
 8004714:	e7f0      	b.n	80046f8 <_vfiprintf_r+0x1b8>
 8004716:	ab03      	add	r3, sp, #12
 8004718:	9300      	str	r3, [sp, #0]
 800471a:	462a      	mov	r2, r5
 800471c:	4b12      	ldr	r3, [pc, #72]	@ (8004768 <_vfiprintf_r+0x228>)
 800471e:	a904      	add	r1, sp, #16
 8004720:	4630      	mov	r0, r6
 8004722:	f7fd fbc7 	bl	8001eb4 <_printf_float>
 8004726:	4607      	mov	r7, r0
 8004728:	1c78      	adds	r0, r7, #1
 800472a:	d1d6      	bne.n	80046da <_vfiprintf_r+0x19a>
 800472c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800472e:	07d9      	lsls	r1, r3, #31
 8004730:	d405      	bmi.n	800473e <_vfiprintf_r+0x1fe>
 8004732:	89ab      	ldrh	r3, [r5, #12]
 8004734:	059a      	lsls	r2, r3, #22
 8004736:	d402      	bmi.n	800473e <_vfiprintf_r+0x1fe>
 8004738:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800473a:	f7fe f92b 	bl	8002994 <__retarget_lock_release_recursive>
 800473e:	89ab      	ldrh	r3, [r5, #12]
 8004740:	065b      	lsls	r3, r3, #25
 8004742:	f53f af1f 	bmi.w	8004584 <_vfiprintf_r+0x44>
 8004746:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004748:	e71e      	b.n	8004588 <_vfiprintf_r+0x48>
 800474a:	ab03      	add	r3, sp, #12
 800474c:	9300      	str	r3, [sp, #0]
 800474e:	462a      	mov	r2, r5
 8004750:	4b05      	ldr	r3, [pc, #20]	@ (8004768 <_vfiprintf_r+0x228>)
 8004752:	a904      	add	r1, sp, #16
 8004754:	4630      	mov	r0, r6
 8004756:	f7fd fe45 	bl	80023e4 <_printf_i>
 800475a:	e7e4      	b.n	8004726 <_vfiprintf_r+0x1e6>
 800475c:	08004d40 	.word	0x08004d40
 8004760:	08004d4a 	.word	0x08004d4a
 8004764:	08001eb5 	.word	0x08001eb5
 8004768:	0800451d 	.word	0x0800451d
 800476c:	08004d46 	.word	0x08004d46

08004770 <__swbuf_r>:
 8004770:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004772:	460e      	mov	r6, r1
 8004774:	4614      	mov	r4, r2
 8004776:	4605      	mov	r5, r0
 8004778:	b118      	cbz	r0, 8004782 <__swbuf_r+0x12>
 800477a:	6a03      	ldr	r3, [r0, #32]
 800477c:	b90b      	cbnz	r3, 8004782 <__swbuf_r+0x12>
 800477e:	f7fd ffdd 	bl	800273c <__sinit>
 8004782:	69a3      	ldr	r3, [r4, #24]
 8004784:	60a3      	str	r3, [r4, #8]
 8004786:	89a3      	ldrh	r3, [r4, #12]
 8004788:	071a      	lsls	r2, r3, #28
 800478a:	d501      	bpl.n	8004790 <__swbuf_r+0x20>
 800478c:	6923      	ldr	r3, [r4, #16]
 800478e:	b943      	cbnz	r3, 80047a2 <__swbuf_r+0x32>
 8004790:	4621      	mov	r1, r4
 8004792:	4628      	mov	r0, r5
 8004794:	f000 f82a 	bl	80047ec <__swsetup_r>
 8004798:	b118      	cbz	r0, 80047a2 <__swbuf_r+0x32>
 800479a:	f04f 37ff 	mov.w	r7, #4294967295
 800479e:	4638      	mov	r0, r7
 80047a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80047a2:	6823      	ldr	r3, [r4, #0]
 80047a4:	6922      	ldr	r2, [r4, #16]
 80047a6:	1a98      	subs	r0, r3, r2
 80047a8:	6963      	ldr	r3, [r4, #20]
 80047aa:	b2f6      	uxtb	r6, r6
 80047ac:	4283      	cmp	r3, r0
 80047ae:	4637      	mov	r7, r6
 80047b0:	dc05      	bgt.n	80047be <__swbuf_r+0x4e>
 80047b2:	4621      	mov	r1, r4
 80047b4:	4628      	mov	r0, r5
 80047b6:	f7ff fd99 	bl	80042ec <_fflush_r>
 80047ba:	2800      	cmp	r0, #0
 80047bc:	d1ed      	bne.n	800479a <__swbuf_r+0x2a>
 80047be:	68a3      	ldr	r3, [r4, #8]
 80047c0:	3b01      	subs	r3, #1
 80047c2:	60a3      	str	r3, [r4, #8]
 80047c4:	6823      	ldr	r3, [r4, #0]
 80047c6:	1c5a      	adds	r2, r3, #1
 80047c8:	6022      	str	r2, [r4, #0]
 80047ca:	701e      	strb	r6, [r3, #0]
 80047cc:	6962      	ldr	r2, [r4, #20]
 80047ce:	1c43      	adds	r3, r0, #1
 80047d0:	429a      	cmp	r2, r3
 80047d2:	d004      	beq.n	80047de <__swbuf_r+0x6e>
 80047d4:	89a3      	ldrh	r3, [r4, #12]
 80047d6:	07db      	lsls	r3, r3, #31
 80047d8:	d5e1      	bpl.n	800479e <__swbuf_r+0x2e>
 80047da:	2e0a      	cmp	r6, #10
 80047dc:	d1df      	bne.n	800479e <__swbuf_r+0x2e>
 80047de:	4621      	mov	r1, r4
 80047e0:	4628      	mov	r0, r5
 80047e2:	f7ff fd83 	bl	80042ec <_fflush_r>
 80047e6:	2800      	cmp	r0, #0
 80047e8:	d0d9      	beq.n	800479e <__swbuf_r+0x2e>
 80047ea:	e7d6      	b.n	800479a <__swbuf_r+0x2a>

080047ec <__swsetup_r>:
 80047ec:	b538      	push	{r3, r4, r5, lr}
 80047ee:	4b29      	ldr	r3, [pc, #164]	@ (8004894 <__swsetup_r+0xa8>)
 80047f0:	4605      	mov	r5, r0
 80047f2:	6818      	ldr	r0, [r3, #0]
 80047f4:	460c      	mov	r4, r1
 80047f6:	b118      	cbz	r0, 8004800 <__swsetup_r+0x14>
 80047f8:	6a03      	ldr	r3, [r0, #32]
 80047fa:	b90b      	cbnz	r3, 8004800 <__swsetup_r+0x14>
 80047fc:	f7fd ff9e 	bl	800273c <__sinit>
 8004800:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004804:	0719      	lsls	r1, r3, #28
 8004806:	d422      	bmi.n	800484e <__swsetup_r+0x62>
 8004808:	06da      	lsls	r2, r3, #27
 800480a:	d407      	bmi.n	800481c <__swsetup_r+0x30>
 800480c:	2209      	movs	r2, #9
 800480e:	602a      	str	r2, [r5, #0]
 8004810:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8004814:	81a3      	strh	r3, [r4, #12]
 8004816:	f04f 30ff 	mov.w	r0, #4294967295
 800481a:	e033      	b.n	8004884 <__swsetup_r+0x98>
 800481c:	0758      	lsls	r0, r3, #29
 800481e:	d512      	bpl.n	8004846 <__swsetup_r+0x5a>
 8004820:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8004822:	b141      	cbz	r1, 8004836 <__swsetup_r+0x4a>
 8004824:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8004828:	4299      	cmp	r1, r3
 800482a:	d002      	beq.n	8004832 <__swsetup_r+0x46>
 800482c:	4628      	mov	r0, r5
 800482e:	f7fe feff 	bl	8003630 <_free_r>
 8004832:	2300      	movs	r3, #0
 8004834:	6363      	str	r3, [r4, #52]	@ 0x34
 8004836:	89a3      	ldrh	r3, [r4, #12]
 8004838:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 800483c:	81a3      	strh	r3, [r4, #12]
 800483e:	2300      	movs	r3, #0
 8004840:	6063      	str	r3, [r4, #4]
 8004842:	6923      	ldr	r3, [r4, #16]
 8004844:	6023      	str	r3, [r4, #0]
 8004846:	89a3      	ldrh	r3, [r4, #12]
 8004848:	f043 0308 	orr.w	r3, r3, #8
 800484c:	81a3      	strh	r3, [r4, #12]
 800484e:	6923      	ldr	r3, [r4, #16]
 8004850:	b94b      	cbnz	r3, 8004866 <__swsetup_r+0x7a>
 8004852:	89a3      	ldrh	r3, [r4, #12]
 8004854:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8004858:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800485c:	d003      	beq.n	8004866 <__swsetup_r+0x7a>
 800485e:	4621      	mov	r1, r4
 8004860:	4628      	mov	r0, r5
 8004862:	f000 f883 	bl	800496c <__smakebuf_r>
 8004866:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800486a:	f013 0201 	ands.w	r2, r3, #1
 800486e:	d00a      	beq.n	8004886 <__swsetup_r+0x9a>
 8004870:	2200      	movs	r2, #0
 8004872:	60a2      	str	r2, [r4, #8]
 8004874:	6962      	ldr	r2, [r4, #20]
 8004876:	4252      	negs	r2, r2
 8004878:	61a2      	str	r2, [r4, #24]
 800487a:	6922      	ldr	r2, [r4, #16]
 800487c:	b942      	cbnz	r2, 8004890 <__swsetup_r+0xa4>
 800487e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8004882:	d1c5      	bne.n	8004810 <__swsetup_r+0x24>
 8004884:	bd38      	pop	{r3, r4, r5, pc}
 8004886:	0799      	lsls	r1, r3, #30
 8004888:	bf58      	it	pl
 800488a:	6962      	ldrpl	r2, [r4, #20]
 800488c:	60a2      	str	r2, [r4, #8]
 800488e:	e7f4      	b.n	800487a <__swsetup_r+0x8e>
 8004890:	2000      	movs	r0, #0
 8004892:	e7f7      	b.n	8004884 <__swsetup_r+0x98>
 8004894:	20000014 	.word	0x20000014

08004898 <_raise_r>:
 8004898:	291f      	cmp	r1, #31
 800489a:	b538      	push	{r3, r4, r5, lr}
 800489c:	4605      	mov	r5, r0
 800489e:	460c      	mov	r4, r1
 80048a0:	d904      	bls.n	80048ac <_raise_r+0x14>
 80048a2:	2316      	movs	r3, #22
 80048a4:	6003      	str	r3, [r0, #0]
 80048a6:	f04f 30ff 	mov.w	r0, #4294967295
 80048aa:	bd38      	pop	{r3, r4, r5, pc}
 80048ac:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80048ae:	b112      	cbz	r2, 80048b6 <_raise_r+0x1e>
 80048b0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80048b4:	b94b      	cbnz	r3, 80048ca <_raise_r+0x32>
 80048b6:	4628      	mov	r0, r5
 80048b8:	f000 f830 	bl	800491c <_getpid_r>
 80048bc:	4622      	mov	r2, r4
 80048be:	4601      	mov	r1, r0
 80048c0:	4628      	mov	r0, r5
 80048c2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80048c6:	f000 b817 	b.w	80048f8 <_kill_r>
 80048ca:	2b01      	cmp	r3, #1
 80048cc:	d00a      	beq.n	80048e4 <_raise_r+0x4c>
 80048ce:	1c59      	adds	r1, r3, #1
 80048d0:	d103      	bne.n	80048da <_raise_r+0x42>
 80048d2:	2316      	movs	r3, #22
 80048d4:	6003      	str	r3, [r0, #0]
 80048d6:	2001      	movs	r0, #1
 80048d8:	e7e7      	b.n	80048aa <_raise_r+0x12>
 80048da:	2100      	movs	r1, #0
 80048dc:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 80048e0:	4620      	mov	r0, r4
 80048e2:	4798      	blx	r3
 80048e4:	2000      	movs	r0, #0
 80048e6:	e7e0      	b.n	80048aa <_raise_r+0x12>

080048e8 <raise>:
 80048e8:	4b02      	ldr	r3, [pc, #8]	@ (80048f4 <raise+0xc>)
 80048ea:	4601      	mov	r1, r0
 80048ec:	6818      	ldr	r0, [r3, #0]
 80048ee:	f7ff bfd3 	b.w	8004898 <_raise_r>
 80048f2:	bf00      	nop
 80048f4:	20000014 	.word	0x20000014

080048f8 <_kill_r>:
 80048f8:	b538      	push	{r3, r4, r5, lr}
 80048fa:	4d07      	ldr	r5, [pc, #28]	@ (8004918 <_kill_r+0x20>)
 80048fc:	2300      	movs	r3, #0
 80048fe:	4604      	mov	r4, r0
 8004900:	4608      	mov	r0, r1
 8004902:	4611      	mov	r1, r2
 8004904:	602b      	str	r3, [r5, #0]
 8004906:	f7fd f93c 	bl	8001b82 <_kill>
 800490a:	1c43      	adds	r3, r0, #1
 800490c:	d102      	bne.n	8004914 <_kill_r+0x1c>
 800490e:	682b      	ldr	r3, [r5, #0]
 8004910:	b103      	cbz	r3, 8004914 <_kill_r+0x1c>
 8004912:	6023      	str	r3, [r4, #0]
 8004914:	bd38      	pop	{r3, r4, r5, pc}
 8004916:	bf00      	nop
 8004918:	2000033c 	.word	0x2000033c

0800491c <_getpid_r>:
 800491c:	f7fd b929 	b.w	8001b72 <_getpid>

08004920 <__swhatbuf_r>:
 8004920:	b570      	push	{r4, r5, r6, lr}
 8004922:	460c      	mov	r4, r1
 8004924:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004928:	2900      	cmp	r1, #0
 800492a:	b096      	sub	sp, #88	@ 0x58
 800492c:	4615      	mov	r5, r2
 800492e:	461e      	mov	r6, r3
 8004930:	da0d      	bge.n	800494e <__swhatbuf_r+0x2e>
 8004932:	89a3      	ldrh	r3, [r4, #12]
 8004934:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8004938:	f04f 0100 	mov.w	r1, #0
 800493c:	bf14      	ite	ne
 800493e:	2340      	movne	r3, #64	@ 0x40
 8004940:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8004944:	2000      	movs	r0, #0
 8004946:	6031      	str	r1, [r6, #0]
 8004948:	602b      	str	r3, [r5, #0]
 800494a:	b016      	add	sp, #88	@ 0x58
 800494c:	bd70      	pop	{r4, r5, r6, pc}
 800494e:	466a      	mov	r2, sp
 8004950:	f000 f848 	bl	80049e4 <_fstat_r>
 8004954:	2800      	cmp	r0, #0
 8004956:	dbec      	blt.n	8004932 <__swhatbuf_r+0x12>
 8004958:	9901      	ldr	r1, [sp, #4]
 800495a:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800495e:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8004962:	4259      	negs	r1, r3
 8004964:	4159      	adcs	r1, r3
 8004966:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800496a:	e7eb      	b.n	8004944 <__swhatbuf_r+0x24>

0800496c <__smakebuf_r>:
 800496c:	898b      	ldrh	r3, [r1, #12]
 800496e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004970:	079d      	lsls	r5, r3, #30
 8004972:	4606      	mov	r6, r0
 8004974:	460c      	mov	r4, r1
 8004976:	d507      	bpl.n	8004988 <__smakebuf_r+0x1c>
 8004978:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800497c:	6023      	str	r3, [r4, #0]
 800497e:	6123      	str	r3, [r4, #16]
 8004980:	2301      	movs	r3, #1
 8004982:	6163      	str	r3, [r4, #20]
 8004984:	b003      	add	sp, #12
 8004986:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004988:	ab01      	add	r3, sp, #4
 800498a:	466a      	mov	r2, sp
 800498c:	f7ff ffc8 	bl	8004920 <__swhatbuf_r>
 8004990:	9f00      	ldr	r7, [sp, #0]
 8004992:	4605      	mov	r5, r0
 8004994:	4639      	mov	r1, r7
 8004996:	4630      	mov	r0, r6
 8004998:	f7fe febe 	bl	8003718 <_malloc_r>
 800499c:	b948      	cbnz	r0, 80049b2 <__smakebuf_r+0x46>
 800499e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80049a2:	059a      	lsls	r2, r3, #22
 80049a4:	d4ee      	bmi.n	8004984 <__smakebuf_r+0x18>
 80049a6:	f023 0303 	bic.w	r3, r3, #3
 80049aa:	f043 0302 	orr.w	r3, r3, #2
 80049ae:	81a3      	strh	r3, [r4, #12]
 80049b0:	e7e2      	b.n	8004978 <__smakebuf_r+0xc>
 80049b2:	89a3      	ldrh	r3, [r4, #12]
 80049b4:	6020      	str	r0, [r4, #0]
 80049b6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80049ba:	81a3      	strh	r3, [r4, #12]
 80049bc:	9b01      	ldr	r3, [sp, #4]
 80049be:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80049c2:	b15b      	cbz	r3, 80049dc <__smakebuf_r+0x70>
 80049c4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80049c8:	4630      	mov	r0, r6
 80049ca:	f000 f81d 	bl	8004a08 <_isatty_r>
 80049ce:	b128      	cbz	r0, 80049dc <__smakebuf_r+0x70>
 80049d0:	89a3      	ldrh	r3, [r4, #12]
 80049d2:	f023 0303 	bic.w	r3, r3, #3
 80049d6:	f043 0301 	orr.w	r3, r3, #1
 80049da:	81a3      	strh	r3, [r4, #12]
 80049dc:	89a3      	ldrh	r3, [r4, #12]
 80049de:	431d      	orrs	r5, r3
 80049e0:	81a5      	strh	r5, [r4, #12]
 80049e2:	e7cf      	b.n	8004984 <__smakebuf_r+0x18>

080049e4 <_fstat_r>:
 80049e4:	b538      	push	{r3, r4, r5, lr}
 80049e6:	4d07      	ldr	r5, [pc, #28]	@ (8004a04 <_fstat_r+0x20>)
 80049e8:	2300      	movs	r3, #0
 80049ea:	4604      	mov	r4, r0
 80049ec:	4608      	mov	r0, r1
 80049ee:	4611      	mov	r1, r2
 80049f0:	602b      	str	r3, [r5, #0]
 80049f2:	f7fd f926 	bl	8001c42 <_fstat>
 80049f6:	1c43      	adds	r3, r0, #1
 80049f8:	d102      	bne.n	8004a00 <_fstat_r+0x1c>
 80049fa:	682b      	ldr	r3, [r5, #0]
 80049fc:	b103      	cbz	r3, 8004a00 <_fstat_r+0x1c>
 80049fe:	6023      	str	r3, [r4, #0]
 8004a00:	bd38      	pop	{r3, r4, r5, pc}
 8004a02:	bf00      	nop
 8004a04:	2000033c 	.word	0x2000033c

08004a08 <_isatty_r>:
 8004a08:	b538      	push	{r3, r4, r5, lr}
 8004a0a:	4d06      	ldr	r5, [pc, #24]	@ (8004a24 <_isatty_r+0x1c>)
 8004a0c:	2300      	movs	r3, #0
 8004a0e:	4604      	mov	r4, r0
 8004a10:	4608      	mov	r0, r1
 8004a12:	602b      	str	r3, [r5, #0]
 8004a14:	f7fd f925 	bl	8001c62 <_isatty>
 8004a18:	1c43      	adds	r3, r0, #1
 8004a1a:	d102      	bne.n	8004a22 <_isatty_r+0x1a>
 8004a1c:	682b      	ldr	r3, [r5, #0]
 8004a1e:	b103      	cbz	r3, 8004a22 <_isatty_r+0x1a>
 8004a20:	6023      	str	r3, [r4, #0]
 8004a22:	bd38      	pop	{r3, r4, r5, pc}
 8004a24:	2000033c 	.word	0x2000033c

08004a28 <_init>:
 8004a28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004a2a:	bf00      	nop
 8004a2c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004a2e:	bc08      	pop	{r3}
 8004a30:	469e      	mov	lr, r3
 8004a32:	4770      	bx	lr

08004a34 <_fini>:
 8004a34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004a36:	bf00      	nop
 8004a38:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004a3a:	bc08      	pop	{r3}
 8004a3c:	469e      	mov	lr, r3
 8004a3e:	4770      	bx	lr
