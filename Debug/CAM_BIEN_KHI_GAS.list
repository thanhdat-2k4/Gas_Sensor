
CAM_BIEN_KHI_GAS.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004838  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000045c  080049d8  080049d8  000059d8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004e34  08004e34  000061cc  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08004e34  08004e34  00005e34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08004e3c  08004e3c  000061cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004e3c  08004e3c  00005e3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08004e40  08004e40  00005e40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001cc  20000000  08004e44  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000017c  200001cc  08005010  000061cc  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000348  08005010  00006348  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000061cc  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001e16  00000000  00000000  000061fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000006ce  00000000  00000000  00008012  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000250  00000000  00000000  000086e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000001a6  00000000  00000000  00008930  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000158cb  00000000  00000000  00008ad6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00002f2a  00000000  00000000  0001e3a1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00085de8  00000000  00000000  000212cb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000a70b3  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001964  00000000  00000000  000a70f8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000047  00000000  00000000  000a8a5c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200001cc 	.word	0x200001cc
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080049c0 	.word	0x080049c0

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200001d0 	.word	0x200001d0
 80001dc:	080049c0 	.word	0x080049c0

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <strlen>:
 8000280:	4603      	mov	r3, r0
 8000282:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000286:	2a00      	cmp	r2, #0
 8000288:	d1fb      	bne.n	8000282 <strlen+0x2>
 800028a:	1a18      	subs	r0, r3, r0
 800028c:	3801      	subs	r0, #1
 800028e:	4770      	bx	lr

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	@ 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000bb8:	b480      	push	{r7}
 8000bba:	b083      	sub	sp, #12
 8000bbc:	af00      	add	r7, sp, #0
 8000bbe:	4603      	mov	r3, r0
 8000bc0:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000bc2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000bc6:	2b00      	cmp	r3, #0
 8000bc8:	db0b      	blt.n	8000be2 <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000bca:	79fb      	ldrb	r3, [r7, #7]
 8000bcc:	f003 021f 	and.w	r2, r3, #31
 8000bd0:	4907      	ldr	r1, [pc, #28]	@ (8000bf0 <__NVIC_EnableIRQ+0x38>)
 8000bd2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000bd6:	095b      	lsrs	r3, r3, #5
 8000bd8:	2001      	movs	r0, #1
 8000bda:	fa00 f202 	lsl.w	r2, r0, r2
 8000bde:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 8000be2:	bf00      	nop
 8000be4:	370c      	adds	r7, #12
 8000be6:	46bd      	mov	sp, r7
 8000be8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bec:	4770      	bx	lr
 8000bee:	bf00      	nop
 8000bf0:	e000e100 	.word	0xe000e100

08000bf4 <delay_ms>:
volatile uint32_t tick_count = 0;
volatile uint8_t tim2_blink_state = 0;

void SystemClock_Config(void);
void UART_Transmit(const char *data);
void delay_ms(uint32_t ms) {
 8000bf4:	b480      	push	{r7}
 8000bf6:	b085      	sub	sp, #20
 8000bf8:	af00      	add	r7, sp, #0
 8000bfa:	6078      	str	r0, [r7, #4]
    uint32_t start = tick_count;
 8000bfc:	4b09      	ldr	r3, [pc, #36]	@ (8000c24 <delay_ms+0x30>)
 8000bfe:	681b      	ldr	r3, [r3, #0]
 8000c00:	60fb      	str	r3, [r7, #12]
    while (tick_count - start < ms) __NOP();
 8000c02:	e000      	b.n	8000c06 <delay_ms+0x12>
 8000c04:	bf00      	nop
 8000c06:	4b07      	ldr	r3, [pc, #28]	@ (8000c24 <delay_ms+0x30>)
 8000c08:	681a      	ldr	r2, [r3, #0]
 8000c0a:	68fb      	ldr	r3, [r7, #12]
 8000c0c:	1ad3      	subs	r3, r2, r3
 8000c0e:	687a      	ldr	r2, [r7, #4]
 8000c10:	429a      	cmp	r2, r3
 8000c12:	d8f7      	bhi.n	8000c04 <delay_ms+0x10>
}
 8000c14:	bf00      	nop
 8000c16:	bf00      	nop
 8000c18:	3714      	adds	r7, #20
 8000c1a:	46bd      	mov	sp, r7
 8000c1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c20:	4770      	bx	lr
 8000c22:	bf00      	nop
 8000c24:	200001ec 	.word	0x200001ec

08000c28 <delay_us>:
void delay_us(uint32_t us) {
 8000c28:	b480      	push	{r7}
 8000c2a:	b085      	sub	sp, #20
 8000c2c:	af00      	add	r7, sp, #0
 8000c2e:	6078      	str	r0, [r7, #4]
    for (uint32_t i = 0; i < us * 8; i++) __NOP();
 8000c30:	2300      	movs	r3, #0
 8000c32:	60fb      	str	r3, [r7, #12]
 8000c34:	e003      	b.n	8000c3e <delay_us+0x16>
 8000c36:	bf00      	nop
 8000c38:	68fb      	ldr	r3, [r7, #12]
 8000c3a:	3301      	adds	r3, #1
 8000c3c:	60fb      	str	r3, [r7, #12]
 8000c3e:	687b      	ldr	r3, [r7, #4]
 8000c40:	00db      	lsls	r3, r3, #3
 8000c42:	68fa      	ldr	r2, [r7, #12]
 8000c44:	429a      	cmp	r2, r3
 8000c46:	d3f6      	bcc.n	8000c36 <delay_us+0xe>
}
 8000c48:	bf00      	nop
 8000c4a:	bf00      	nop
 8000c4c:	3714      	adds	r7, #20
 8000c4e:	46bd      	mov	sp, r7
 8000c50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c54:	4770      	bx	lr
	...

08000c58 <SystemClock_Config>:

void SystemClock_Config(void) {
 8000c58:	b480      	push	{r7}
 8000c5a:	af00      	add	r7, sp, #0
    RCC->CR |= RCC_CR_HSEON;
 8000c5c:	4b1a      	ldr	r3, [pc, #104]	@ (8000cc8 <SystemClock_Config+0x70>)
 8000c5e:	681b      	ldr	r3, [r3, #0]
 8000c60:	4a19      	ldr	r2, [pc, #100]	@ (8000cc8 <SystemClock_Config+0x70>)
 8000c62:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8000c66:	6013      	str	r3, [r2, #0]
    while (!(RCC->CR & RCC_CR_HSERDY));
 8000c68:	bf00      	nop
 8000c6a:	4b17      	ldr	r3, [pc, #92]	@ (8000cc8 <SystemClock_Config+0x70>)
 8000c6c:	681b      	ldr	r3, [r3, #0]
 8000c6e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8000c72:	2b00      	cmp	r3, #0
 8000c74:	d0f9      	beq.n	8000c6a <SystemClock_Config+0x12>
    RCC->PLLCFGR = (8 << 0) | (336 << 6) | (1 << 16);
 8000c76:	4b14      	ldr	r3, [pc, #80]	@ (8000cc8 <SystemClock_Config+0x70>)
 8000c78:	4a14      	ldr	r2, [pc, #80]	@ (8000ccc <SystemClock_Config+0x74>)
 8000c7a:	605a      	str	r2, [r3, #4]
    RCC->CR |= RCC_CR_PLLON;
 8000c7c:	4b12      	ldr	r3, [pc, #72]	@ (8000cc8 <SystemClock_Config+0x70>)
 8000c7e:	681b      	ldr	r3, [r3, #0]
 8000c80:	4a11      	ldr	r2, [pc, #68]	@ (8000cc8 <SystemClock_Config+0x70>)
 8000c82:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8000c86:	6013      	str	r3, [r2, #0]
    while (!(RCC->CR & RCC_CR_PLLRDY));
 8000c88:	bf00      	nop
 8000c8a:	4b0f      	ldr	r3, [pc, #60]	@ (8000cc8 <SystemClock_Config+0x70>)
 8000c8c:	681b      	ldr	r3, [r3, #0]
 8000c8e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8000c92:	2b00      	cmp	r3, #0
 8000c94:	d0f9      	beq.n	8000c8a <SystemClock_Config+0x32>
    RCC->CFGR |= RCC_CFGR_SW_PLL;
 8000c96:	4b0c      	ldr	r3, [pc, #48]	@ (8000cc8 <SystemClock_Config+0x70>)
 8000c98:	689b      	ldr	r3, [r3, #8]
 8000c9a:	4a0b      	ldr	r2, [pc, #44]	@ (8000cc8 <SystemClock_Config+0x70>)
 8000c9c:	f043 0302 	orr.w	r3, r3, #2
 8000ca0:	6093      	str	r3, [r2, #8]
    while ((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_PLL);
 8000ca2:	bf00      	nop
 8000ca4:	4b08      	ldr	r3, [pc, #32]	@ (8000cc8 <SystemClock_Config+0x70>)
 8000ca6:	689b      	ldr	r3, [r3, #8]
 8000ca8:	f003 030c 	and.w	r3, r3, #12
 8000cac:	2b08      	cmp	r3, #8
 8000cae:	d1f9      	bne.n	8000ca4 <SystemClock_Config+0x4c>
    RCC->CFGR |= RCC_CFGR_HPRE_DIV1 | RCC_CFGR_PPRE1_DIV2 | RCC_CFGR_PPRE2_DIV1;
 8000cb0:	4b05      	ldr	r3, [pc, #20]	@ (8000cc8 <SystemClock_Config+0x70>)
 8000cb2:	689b      	ldr	r3, [r3, #8]
 8000cb4:	4a04      	ldr	r2, [pc, #16]	@ (8000cc8 <SystemClock_Config+0x70>)
 8000cb6:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8000cba:	6093      	str	r3, [r2, #8]
}
 8000cbc:	bf00      	nop
 8000cbe:	46bd      	mov	sp, r7
 8000cc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cc4:	4770      	bx	lr
 8000cc6:	bf00      	nop
 8000cc8:	40023800 	.word	0x40023800
 8000ccc:	00015408 	.word	0x00015408

08000cd0 <GPIO_Config>:

void GPIO_Config(void) {
 8000cd0:	b480      	push	{r7}
 8000cd2:	af00      	add	r7, sp, #0
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN | RCC_AHB1ENR_GPIOBEN | RCC_AHB1ENR_GPIOCEN;
 8000cd4:	4b26      	ldr	r3, [pc, #152]	@ (8000d70 <GPIO_Config+0xa0>)
 8000cd6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000cd8:	4a25      	ldr	r2, [pc, #148]	@ (8000d70 <GPIO_Config+0xa0>)
 8000cda:	f043 0307 	orr.w	r3, r3, #7
 8000cde:	6313      	str	r3, [r2, #48]	@ 0x30
    GPIOA->MODER |= (3 << (MQ2_CHANNEL * 2));
 8000ce0:	4b24      	ldr	r3, [pc, #144]	@ (8000d74 <GPIO_Config+0xa4>)
 8000ce2:	681b      	ldr	r3, [r3, #0]
 8000ce4:	4a23      	ldr	r2, [pc, #140]	@ (8000d74 <GPIO_Config+0xa4>)
 8000ce6:	f043 0303 	orr.w	r3, r3, #3
 8000cea:	6013      	str	r3, [r2, #0]
    GPIOA->MODER &= ~((3 << (RELAY_PIN * 2)) | (3 << (BUZZER_PIN * 2)) | (3 << (LED_BLUE_PIN * 2)));
 8000cec:	4b21      	ldr	r3, [pc, #132]	@ (8000d74 <GPIO_Config+0xa4>)
 8000cee:	681b      	ldr	r3, [r3, #0]
 8000cf0:	4a20      	ldr	r2, [pc, #128]	@ (8000d74 <GPIO_Config+0xa4>)
 8000cf2:	f423 437c 	bic.w	r3, r3, #64512	@ 0xfc00
 8000cf6:	6013      	str	r3, [r2, #0]
    GPIOA->MODER |= ((1 << (RELAY_PIN * 2)) | (1 << (BUZZER_PIN * 2)) | (1 << (LED_BLUE_PIN * 2)));
 8000cf8:	4b1e      	ldr	r3, [pc, #120]	@ (8000d74 <GPIO_Config+0xa4>)
 8000cfa:	681b      	ldr	r3, [r3, #0]
 8000cfc:	4a1d      	ldr	r2, [pc, #116]	@ (8000d74 <GPIO_Config+0xa4>)
 8000cfe:	f443 43a8 	orr.w	r3, r3, #21504	@ 0x5400
 8000d02:	6013      	str	r3, [r2, #0]
    GPIOA->ODR &= ~(1 << RELAY_PIN | 1 << BUZZER_PIN | 1 << LED_BLUE_PIN);
 8000d04:	4b1b      	ldr	r3, [pc, #108]	@ (8000d74 <GPIO_Config+0xa4>)
 8000d06:	695b      	ldr	r3, [r3, #20]
 8000d08:	4a1a      	ldr	r2, [pc, #104]	@ (8000d74 <GPIO_Config+0xa4>)
 8000d0a:	f023 03e0 	bic.w	r3, r3, #224	@ 0xe0
 8000d0e:	6153      	str	r3, [r2, #20]
    GPIOB->MODER &= ~((3 << (LED_YELLOW_PIN * 2)) | (3 << (LED_RED_PIN * 2)) | (3 << (LED_GREEN_PIN * 2)));
 8000d10:	4b19      	ldr	r3, [pc, #100]	@ (8000d78 <GPIO_Config+0xa8>)
 8000d12:	681b      	ldr	r3, [r3, #0]
 8000d14:	4a18      	ldr	r2, [pc, #96]	@ (8000d78 <GPIO_Config+0xa8>)
 8000d16:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 8000d1a:	f023 030f 	bic.w	r3, r3, #15
 8000d1e:	6013      	str	r3, [r2, #0]
    GPIOB->MODER |= ((1 << (LED_YELLOW_PIN * 2)) | (1 << (LED_RED_PIN * 2)) | (1 << (LED_GREEN_PIN * 2)));
 8000d20:	4b15      	ldr	r3, [pc, #84]	@ (8000d78 <GPIO_Config+0xa8>)
 8000d22:	681b      	ldr	r3, [r3, #0]
 8000d24:	4a14      	ldr	r2, [pc, #80]	@ (8000d78 <GPIO_Config+0xa8>)
 8000d26:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000d2a:	f043 0305 	orr.w	r3, r3, #5
 8000d2e:	6013      	str	r3, [r2, #0]
    GPIOB->ODR &= ~(1 << LED_YELLOW_PIN | 1 << LED_RED_PIN | 1 << LED_GREEN_PIN);
 8000d30:	4b11      	ldr	r3, [pc, #68]	@ (8000d78 <GPIO_Config+0xa8>)
 8000d32:	695b      	ldr	r3, [r3, #20]
 8000d34:	4a10      	ldr	r2, [pc, #64]	@ (8000d78 <GPIO_Config+0xa8>)
 8000d36:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8000d3a:	f023 0303 	bic.w	r3, r3, #3
 8000d3e:	6153      	str	r3, [r2, #20]
    GPIOC->MODER &= ~((3 << (SW1_PIN * 2)) | (3 << (SW2_PIN * 2)));
 8000d40:	4b0e      	ldr	r3, [pc, #56]	@ (8000d7c <GPIO_Config+0xac>)
 8000d42:	681b      	ldr	r3, [r3, #0]
 8000d44:	4a0d      	ldr	r2, [pc, #52]	@ (8000d7c <GPIO_Config+0xac>)
 8000d46:	f023 6370 	bic.w	r3, r3, #251658240	@ 0xf000000
 8000d4a:	6013      	str	r3, [r2, #0]
    GPIOC->PUPDR &= ~((3 << (SW1_PIN * 2)) | (3 << (SW2_PIN * 2)));
 8000d4c:	4b0b      	ldr	r3, [pc, #44]	@ (8000d7c <GPIO_Config+0xac>)
 8000d4e:	68db      	ldr	r3, [r3, #12]
 8000d50:	4a0a      	ldr	r2, [pc, #40]	@ (8000d7c <GPIO_Config+0xac>)
 8000d52:	f023 6370 	bic.w	r3, r3, #251658240	@ 0xf000000
 8000d56:	60d3      	str	r3, [r2, #12]
    GPIOC->PUPDR |= ((1 << (SW1_PIN * 2)) | (1 << (SW2_PIN * 2)));
 8000d58:	4b08      	ldr	r3, [pc, #32]	@ (8000d7c <GPIO_Config+0xac>)
 8000d5a:	68db      	ldr	r3, [r3, #12]
 8000d5c:	4a07      	ldr	r2, [pc, #28]	@ (8000d7c <GPIO_Config+0xac>)
 8000d5e:	f043 63a0 	orr.w	r3, r3, #83886080	@ 0x5000000
 8000d62:	60d3      	str	r3, [r2, #12]
}
 8000d64:	bf00      	nop
 8000d66:	46bd      	mov	sp, r7
 8000d68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d6c:	4770      	bx	lr
 8000d6e:	bf00      	nop
 8000d70:	40023800 	.word	0x40023800
 8000d74:	40020000 	.word	0x40020000
 8000d78:	40020400 	.word	0x40020400
 8000d7c:	40020800 	.word	0x40020800

08000d80 <I2C_Config>:

void I2C_Config(void) {
 8000d80:	b480      	push	{r7}
 8000d82:	af00      	add	r7, sp, #0
    RCC->APB1ENR |= RCC_APB1ENR_I2C1EN;
 8000d84:	4b20      	ldr	r3, [pc, #128]	@ (8000e08 <I2C_Config+0x88>)
 8000d86:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000d88:	4a1f      	ldr	r2, [pc, #124]	@ (8000e08 <I2C_Config+0x88>)
 8000d8a:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8000d8e:	6413      	str	r3, [r2, #64]	@ 0x40
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN;
 8000d90:	4b1d      	ldr	r3, [pc, #116]	@ (8000e08 <I2C_Config+0x88>)
 8000d92:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d94:	4a1c      	ldr	r2, [pc, #112]	@ (8000e08 <I2C_Config+0x88>)
 8000d96:	f043 0302 	orr.w	r3, r3, #2
 8000d9a:	6313      	str	r3, [r2, #48]	@ 0x30
    GPIOB->MODER &= ~((3 << (8 * 2)) | (3 << (9 * 2)));
 8000d9c:	4b1b      	ldr	r3, [pc, #108]	@ (8000e0c <I2C_Config+0x8c>)
 8000d9e:	681b      	ldr	r3, [r3, #0]
 8000da0:	4a1a      	ldr	r2, [pc, #104]	@ (8000e0c <I2C_Config+0x8c>)
 8000da2:	f423 2370 	bic.w	r3, r3, #983040	@ 0xf0000
 8000da6:	6013      	str	r3, [r2, #0]
    GPIOB->MODER |= ((2 << (8 * 2)) | (2 << (9 * 2)));
 8000da8:	4b18      	ldr	r3, [pc, #96]	@ (8000e0c <I2C_Config+0x8c>)
 8000daa:	681b      	ldr	r3, [r3, #0]
 8000dac:	4a17      	ldr	r2, [pc, #92]	@ (8000e0c <I2C_Config+0x8c>)
 8000dae:	f443 2320 	orr.w	r3, r3, #655360	@ 0xa0000
 8000db2:	6013      	str	r3, [r2, #0]
    GPIOB->OTYPER |= (1 << 8) | (1 << 9);
 8000db4:	4b15      	ldr	r3, [pc, #84]	@ (8000e0c <I2C_Config+0x8c>)
 8000db6:	685b      	ldr	r3, [r3, #4]
 8000db8:	4a14      	ldr	r2, [pc, #80]	@ (8000e0c <I2C_Config+0x8c>)
 8000dba:	f443 7340 	orr.w	r3, r3, #768	@ 0x300
 8000dbe:	6053      	str	r3, [r2, #4]
    GPIOB->PUPDR |= ((1 << (8 * 2)) | (1 << (9 * 2)));
 8000dc0:	4b12      	ldr	r3, [pc, #72]	@ (8000e0c <I2C_Config+0x8c>)
 8000dc2:	68db      	ldr	r3, [r3, #12]
 8000dc4:	4a11      	ldr	r2, [pc, #68]	@ (8000e0c <I2C_Config+0x8c>)
 8000dc6:	f443 23a0 	orr.w	r3, r3, #327680	@ 0x50000
 8000dca:	60d3      	str	r3, [r2, #12]
    GPIOB->AFR[1] |= ((4 << ((8 - 8) * 4)) | (4 << ((9 - 8) * 4)));
 8000dcc:	4b0f      	ldr	r3, [pc, #60]	@ (8000e0c <I2C_Config+0x8c>)
 8000dce:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000dd0:	4a0e      	ldr	r2, [pc, #56]	@ (8000e0c <I2C_Config+0x8c>)
 8000dd2:	f043 0344 	orr.w	r3, r3, #68	@ 0x44
 8000dd6:	6253      	str	r3, [r2, #36]	@ 0x24
    I2C1->CR1 = 0;
 8000dd8:	4b0d      	ldr	r3, [pc, #52]	@ (8000e10 <I2C_Config+0x90>)
 8000dda:	2200      	movs	r2, #0
 8000ddc:	601a      	str	r2, [r3, #0]
    I2C1->CR2 = 42;
 8000dde:	4b0c      	ldr	r3, [pc, #48]	@ (8000e10 <I2C_Config+0x90>)
 8000de0:	222a      	movs	r2, #42	@ 0x2a
 8000de2:	605a      	str	r2, [r3, #4]
    I2C1->CCR = 210;
 8000de4:	4b0a      	ldr	r3, [pc, #40]	@ (8000e10 <I2C_Config+0x90>)
 8000de6:	22d2      	movs	r2, #210	@ 0xd2
 8000de8:	61da      	str	r2, [r3, #28]
    I2C1->TRISE = 43;
 8000dea:	4b09      	ldr	r3, [pc, #36]	@ (8000e10 <I2C_Config+0x90>)
 8000dec:	222b      	movs	r2, #43	@ 0x2b
 8000dee:	621a      	str	r2, [r3, #32]
    I2C1->CR1 |= I2C_CR1_PE;
 8000df0:	4b07      	ldr	r3, [pc, #28]	@ (8000e10 <I2C_Config+0x90>)
 8000df2:	681b      	ldr	r3, [r3, #0]
 8000df4:	4a06      	ldr	r2, [pc, #24]	@ (8000e10 <I2C_Config+0x90>)
 8000df6:	f043 0301 	orr.w	r3, r3, #1
 8000dfa:	6013      	str	r3, [r2, #0]
}
 8000dfc:	bf00      	nop
 8000dfe:	46bd      	mov	sp, r7
 8000e00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e04:	4770      	bx	lr
 8000e06:	bf00      	nop
 8000e08:	40023800 	.word	0x40023800
 8000e0c:	40020400 	.word	0x40020400
 8000e10:	40005400 	.word	0x40005400

08000e14 <I2C_WriteByte>:

uint8_t I2C_WriteByte(uint8_t addr, uint8_t data, const char *context) {
 8000e14:	b480      	push	{r7}
 8000e16:	b085      	sub	sp, #20
 8000e18:	af00      	add	r7, sp, #0
 8000e1a:	4603      	mov	r3, r0
 8000e1c:	603a      	str	r2, [r7, #0]
 8000e1e:	71fb      	strb	r3, [r7, #7]
 8000e20:	460b      	mov	r3, r1
 8000e22:	71bb      	strb	r3, [r7, #6]
    uint32_t timeout = 100000;
 8000e24:	4b39      	ldr	r3, [pc, #228]	@ (8000f0c <I2C_WriteByte+0xf8>)
 8000e26:	60fb      	str	r3, [r7, #12]
    while (I2C1->SR2 & I2C_SR2_BUSY && timeout--);
 8000e28:	bf00      	nop
 8000e2a:	4b39      	ldr	r3, [pc, #228]	@ (8000f10 <I2C_WriteByte+0xfc>)
 8000e2c:	699b      	ldr	r3, [r3, #24]
 8000e2e:	f003 0302 	and.w	r3, r3, #2
 8000e32:	2b00      	cmp	r3, #0
 8000e34:	d004      	beq.n	8000e40 <I2C_WriteByte+0x2c>
 8000e36:	68fb      	ldr	r3, [r7, #12]
 8000e38:	1e5a      	subs	r2, r3, #1
 8000e3a:	60fa      	str	r2, [r7, #12]
 8000e3c:	2b00      	cmp	r3, #0
 8000e3e:	d1f4      	bne.n	8000e2a <I2C_WriteByte+0x16>
    if (!timeout) return 1;
 8000e40:	68fb      	ldr	r3, [r7, #12]
 8000e42:	2b00      	cmp	r3, #0
 8000e44:	d101      	bne.n	8000e4a <I2C_WriteByte+0x36>
 8000e46:	2301      	movs	r3, #1
 8000e48:	e059      	b.n	8000efe <I2C_WriteByte+0xea>
    I2C1->CR1 |= I2C_CR1_START;
 8000e4a:	4b31      	ldr	r3, [pc, #196]	@ (8000f10 <I2C_WriteByte+0xfc>)
 8000e4c:	681b      	ldr	r3, [r3, #0]
 8000e4e:	4a30      	ldr	r2, [pc, #192]	@ (8000f10 <I2C_WriteByte+0xfc>)
 8000e50:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000e54:	6013      	str	r3, [r2, #0]
    while (!(I2C1->SR1 & I2C_SR1_SB) && timeout--);
 8000e56:	bf00      	nop
 8000e58:	4b2d      	ldr	r3, [pc, #180]	@ (8000f10 <I2C_WriteByte+0xfc>)
 8000e5a:	695b      	ldr	r3, [r3, #20]
 8000e5c:	f003 0301 	and.w	r3, r3, #1
 8000e60:	2b00      	cmp	r3, #0
 8000e62:	d104      	bne.n	8000e6e <I2C_WriteByte+0x5a>
 8000e64:	68fb      	ldr	r3, [r7, #12]
 8000e66:	1e5a      	subs	r2, r3, #1
 8000e68:	60fa      	str	r2, [r7, #12]
 8000e6a:	2b00      	cmp	r3, #0
 8000e6c:	d1f4      	bne.n	8000e58 <I2C_WriteByte+0x44>
    if (!timeout) return 2;
 8000e6e:	68fb      	ldr	r3, [r7, #12]
 8000e70:	2b00      	cmp	r3, #0
 8000e72:	d101      	bne.n	8000e78 <I2C_WriteByte+0x64>
 8000e74:	2302      	movs	r3, #2
 8000e76:	e042      	b.n	8000efe <I2C_WriteByte+0xea>
    I2C1->DR = (addr << 1);
 8000e78:	79fb      	ldrb	r3, [r7, #7]
 8000e7a:	4a25      	ldr	r2, [pc, #148]	@ (8000f10 <I2C_WriteByte+0xfc>)
 8000e7c:	005b      	lsls	r3, r3, #1
 8000e7e:	6113      	str	r3, [r2, #16]
    while (!(I2C1->SR1 & I2C_SR1_ADDR) && timeout--);
 8000e80:	bf00      	nop
 8000e82:	4b23      	ldr	r3, [pc, #140]	@ (8000f10 <I2C_WriteByte+0xfc>)
 8000e84:	695b      	ldr	r3, [r3, #20]
 8000e86:	f003 0302 	and.w	r3, r3, #2
 8000e8a:	2b00      	cmp	r3, #0
 8000e8c:	d104      	bne.n	8000e98 <I2C_WriteByte+0x84>
 8000e8e:	68fb      	ldr	r3, [r7, #12]
 8000e90:	1e5a      	subs	r2, r3, #1
 8000e92:	60fa      	str	r2, [r7, #12]
 8000e94:	2b00      	cmp	r3, #0
 8000e96:	d1f4      	bne.n	8000e82 <I2C_WriteByte+0x6e>
    if (!timeout) return 3;
 8000e98:	68fb      	ldr	r3, [r7, #12]
 8000e9a:	2b00      	cmp	r3, #0
 8000e9c:	d101      	bne.n	8000ea2 <I2C_WriteByte+0x8e>
 8000e9e:	2303      	movs	r3, #3
 8000ea0:	e02d      	b.n	8000efe <I2C_WriteByte+0xea>
    (void)I2C1->SR2;
 8000ea2:	4b1b      	ldr	r3, [pc, #108]	@ (8000f10 <I2C_WriteByte+0xfc>)
 8000ea4:	699b      	ldr	r3, [r3, #24]
    while (!(I2C1->SR1 & I2C_SR1_TXE) && timeout--);
 8000ea6:	bf00      	nop
 8000ea8:	4b19      	ldr	r3, [pc, #100]	@ (8000f10 <I2C_WriteByte+0xfc>)
 8000eaa:	695b      	ldr	r3, [r3, #20]
 8000eac:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000eb0:	2b00      	cmp	r3, #0
 8000eb2:	d104      	bne.n	8000ebe <I2C_WriteByte+0xaa>
 8000eb4:	68fb      	ldr	r3, [r7, #12]
 8000eb6:	1e5a      	subs	r2, r3, #1
 8000eb8:	60fa      	str	r2, [r7, #12]
 8000eba:	2b00      	cmp	r3, #0
 8000ebc:	d1f4      	bne.n	8000ea8 <I2C_WriteByte+0x94>
    if (!timeout) return 4;
 8000ebe:	68fb      	ldr	r3, [r7, #12]
 8000ec0:	2b00      	cmp	r3, #0
 8000ec2:	d101      	bne.n	8000ec8 <I2C_WriteByte+0xb4>
 8000ec4:	2304      	movs	r3, #4
 8000ec6:	e01a      	b.n	8000efe <I2C_WriteByte+0xea>
    I2C1->DR = data;
 8000ec8:	4a11      	ldr	r2, [pc, #68]	@ (8000f10 <I2C_WriteByte+0xfc>)
 8000eca:	79bb      	ldrb	r3, [r7, #6]
 8000ecc:	6113      	str	r3, [r2, #16]
    while (!(I2C1->SR1 & I2C_SR1_BTF) && timeout--);
 8000ece:	bf00      	nop
 8000ed0:	4b0f      	ldr	r3, [pc, #60]	@ (8000f10 <I2C_WriteByte+0xfc>)
 8000ed2:	695b      	ldr	r3, [r3, #20]
 8000ed4:	f003 0304 	and.w	r3, r3, #4
 8000ed8:	2b00      	cmp	r3, #0
 8000eda:	d104      	bne.n	8000ee6 <I2C_WriteByte+0xd2>
 8000edc:	68fb      	ldr	r3, [r7, #12]
 8000ede:	1e5a      	subs	r2, r3, #1
 8000ee0:	60fa      	str	r2, [r7, #12]
 8000ee2:	2b00      	cmp	r3, #0
 8000ee4:	d1f4      	bne.n	8000ed0 <I2C_WriteByte+0xbc>
    if (!timeout) return 5;
 8000ee6:	68fb      	ldr	r3, [r7, #12]
 8000ee8:	2b00      	cmp	r3, #0
 8000eea:	d101      	bne.n	8000ef0 <I2C_WriteByte+0xdc>
 8000eec:	2305      	movs	r3, #5
 8000eee:	e006      	b.n	8000efe <I2C_WriteByte+0xea>
    I2C1->CR1 |= I2C_CR1_STOP;
 8000ef0:	4b07      	ldr	r3, [pc, #28]	@ (8000f10 <I2C_WriteByte+0xfc>)
 8000ef2:	681b      	ldr	r3, [r3, #0]
 8000ef4:	4a06      	ldr	r2, [pc, #24]	@ (8000f10 <I2C_WriteByte+0xfc>)
 8000ef6:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000efa:	6013      	str	r3, [r2, #0]
    return 0;
 8000efc:	2300      	movs	r3, #0
}
 8000efe:	4618      	mov	r0, r3
 8000f00:	3714      	adds	r7, #20
 8000f02:	46bd      	mov	sp, r7
 8000f04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f08:	4770      	bx	lr
 8000f0a:	bf00      	nop
 8000f0c:	000186a0 	.word	0x000186a0
 8000f10:	40005400 	.word	0x40005400

08000f14 <LCD_SendCommand>:

void LCD_SendCommand(uint8_t cmd) {
 8000f14:	b580      	push	{r7, lr}
 8000f16:	b086      	sub	sp, #24
 8000f18:	af00      	add	r7, sp, #0
 8000f1a:	4603      	mov	r3, r0
 8000f1c:	71fb      	strb	r3, [r7, #7]
    uint8_t data_u = (cmd & 0xF0);
 8000f1e:	79fb      	ldrb	r3, [r7, #7]
 8000f20:	f023 030f 	bic.w	r3, r3, #15
 8000f24:	74fb      	strb	r3, [r7, #19]
    uint8_t data_l = ((cmd << 4) & 0xF0);
 8000f26:	79fb      	ldrb	r3, [r7, #7]
 8000f28:	011b      	lsls	r3, r3, #4
 8000f2a:	74bb      	strb	r3, [r7, #18]
    uint8_t data_t[4] = { data_u | 0x0C, data_u | 0x08, data_l | 0x0C, data_l | 0x08 };
 8000f2c:	7cfb      	ldrb	r3, [r7, #19]
 8000f2e:	f043 030c 	orr.w	r3, r3, #12
 8000f32:	b2db      	uxtb	r3, r3
 8000f34:	733b      	strb	r3, [r7, #12]
 8000f36:	7cfb      	ldrb	r3, [r7, #19]
 8000f38:	f043 0308 	orr.w	r3, r3, #8
 8000f3c:	b2db      	uxtb	r3, r3
 8000f3e:	737b      	strb	r3, [r7, #13]
 8000f40:	7cbb      	ldrb	r3, [r7, #18]
 8000f42:	f043 030c 	orr.w	r3, r3, #12
 8000f46:	b2db      	uxtb	r3, r3
 8000f48:	73bb      	strb	r3, [r7, #14]
 8000f4a:	7cbb      	ldrb	r3, [r7, #18]
 8000f4c:	f043 0308 	orr.w	r3, r3, #8
 8000f50:	b2db      	uxtb	r3, r3
 8000f52:	73fb      	strb	r3, [r7, #15]
    for (int i = 0; i < 4; i++) {
 8000f54:	2300      	movs	r3, #0
 8000f56:	617b      	str	r3, [r7, #20]
 8000f58:	e00f      	b.n	8000f7a <LCD_SendCommand+0x66>
        I2C_WriteByte(LCD_I2C_ADDR, data_t[i], "CMD");
 8000f5a:	f107 020c 	add.w	r2, r7, #12
 8000f5e:	697b      	ldr	r3, [r7, #20]
 8000f60:	4413      	add	r3, r2
 8000f62:	781b      	ldrb	r3, [r3, #0]
 8000f64:	4a09      	ldr	r2, [pc, #36]	@ (8000f8c <LCD_SendCommand+0x78>)
 8000f66:	4619      	mov	r1, r3
 8000f68:	2027      	movs	r0, #39	@ 0x27
 8000f6a:	f7ff ff53 	bl	8000e14 <I2C_WriteByte>
        delay_us(50);
 8000f6e:	2032      	movs	r0, #50	@ 0x32
 8000f70:	f7ff fe5a 	bl	8000c28 <delay_us>
    for (int i = 0; i < 4; i++) {
 8000f74:	697b      	ldr	r3, [r7, #20]
 8000f76:	3301      	adds	r3, #1
 8000f78:	617b      	str	r3, [r7, #20]
 8000f7a:	697b      	ldr	r3, [r7, #20]
 8000f7c:	2b03      	cmp	r3, #3
 8000f7e:	ddec      	ble.n	8000f5a <LCD_SendCommand+0x46>
    }
}
 8000f80:	bf00      	nop
 8000f82:	bf00      	nop
 8000f84:	3718      	adds	r7, #24
 8000f86:	46bd      	mov	sp, r7
 8000f88:	bd80      	pop	{r7, pc}
 8000f8a:	bf00      	nop
 8000f8c:	080049d8 	.word	0x080049d8

08000f90 <LCD_SendData>:

void LCD_SendData(uint8_t data) {
 8000f90:	b580      	push	{r7, lr}
 8000f92:	b086      	sub	sp, #24
 8000f94:	af00      	add	r7, sp, #0
 8000f96:	4603      	mov	r3, r0
 8000f98:	71fb      	strb	r3, [r7, #7]
    uint8_t data_u = (data & 0xF0);
 8000f9a:	79fb      	ldrb	r3, [r7, #7]
 8000f9c:	f023 030f 	bic.w	r3, r3, #15
 8000fa0:	74fb      	strb	r3, [r7, #19]
    uint8_t data_l = ((data << 4) & 0xF0);
 8000fa2:	79fb      	ldrb	r3, [r7, #7]
 8000fa4:	011b      	lsls	r3, r3, #4
 8000fa6:	74bb      	strb	r3, [r7, #18]
    uint8_t data_t[4] = { data_u | 0x0D, data_u | 0x09, data_l | 0x0D, data_l | 0x09 };
 8000fa8:	7cfb      	ldrb	r3, [r7, #19]
 8000faa:	f043 030d 	orr.w	r3, r3, #13
 8000fae:	b2db      	uxtb	r3, r3
 8000fb0:	733b      	strb	r3, [r7, #12]
 8000fb2:	7cfb      	ldrb	r3, [r7, #19]
 8000fb4:	f043 0309 	orr.w	r3, r3, #9
 8000fb8:	b2db      	uxtb	r3, r3
 8000fba:	737b      	strb	r3, [r7, #13]
 8000fbc:	7cbb      	ldrb	r3, [r7, #18]
 8000fbe:	f043 030d 	orr.w	r3, r3, #13
 8000fc2:	b2db      	uxtb	r3, r3
 8000fc4:	73bb      	strb	r3, [r7, #14]
 8000fc6:	7cbb      	ldrb	r3, [r7, #18]
 8000fc8:	f043 0309 	orr.w	r3, r3, #9
 8000fcc:	b2db      	uxtb	r3, r3
 8000fce:	73fb      	strb	r3, [r7, #15]
    for (int i = 0; i < 4; i++) {
 8000fd0:	2300      	movs	r3, #0
 8000fd2:	617b      	str	r3, [r7, #20]
 8000fd4:	e00f      	b.n	8000ff6 <LCD_SendData+0x66>
        I2C_WriteByte(LCD_I2C_ADDR, data_t[i], "DATA");
 8000fd6:	f107 020c 	add.w	r2, r7, #12
 8000fda:	697b      	ldr	r3, [r7, #20]
 8000fdc:	4413      	add	r3, r2
 8000fde:	781b      	ldrb	r3, [r3, #0]
 8000fe0:	4a09      	ldr	r2, [pc, #36]	@ (8001008 <LCD_SendData+0x78>)
 8000fe2:	4619      	mov	r1, r3
 8000fe4:	2027      	movs	r0, #39	@ 0x27
 8000fe6:	f7ff ff15 	bl	8000e14 <I2C_WriteByte>
        delay_us(50);
 8000fea:	2032      	movs	r0, #50	@ 0x32
 8000fec:	f7ff fe1c 	bl	8000c28 <delay_us>
    for (int i = 0; i < 4; i++) {
 8000ff0:	697b      	ldr	r3, [r7, #20]
 8000ff2:	3301      	adds	r3, #1
 8000ff4:	617b      	str	r3, [r7, #20]
 8000ff6:	697b      	ldr	r3, [r7, #20]
 8000ff8:	2b03      	cmp	r3, #3
 8000ffa:	ddec      	ble.n	8000fd6 <LCD_SendData+0x46>
    }
}
 8000ffc:	bf00      	nop
 8000ffe:	bf00      	nop
 8001000:	3718      	adds	r7, #24
 8001002:	46bd      	mov	sp, r7
 8001004:	bd80      	pop	{r7, pc}
 8001006:	bf00      	nop
 8001008:	080049dc 	.word	0x080049dc

0800100c <LCD_Init>:

uint8_t LCD_Init(void) {
 800100c:	b580      	push	{r7, lr}
 800100e:	b082      	sub	sp, #8
 8001010:	af00      	add	r7, sp, #0
    uint8_t retry = 3;
 8001012:	2303      	movs	r3, #3
 8001014:	71fb      	strb	r3, [r7, #7]
    while (retry--) {
 8001016:	e033      	b.n	8001080 <LCD_Init+0x74>
        delay_ms(50);
 8001018:	2032      	movs	r0, #50	@ 0x32
 800101a:	f7ff fdeb 	bl	8000bf4 <delay_ms>
        if (I2C_WriteByte(LCD_I2C_ADDR, 0x00, "INIT") == 0) {
 800101e:	4a1d      	ldr	r2, [pc, #116]	@ (8001094 <LCD_Init+0x88>)
 8001020:	2100      	movs	r1, #0
 8001022:	2027      	movs	r0, #39	@ 0x27
 8001024:	f7ff fef6 	bl	8000e14 <I2C_WriteByte>
 8001028:	4603      	mov	r3, r0
 800102a:	2b00      	cmp	r3, #0
 800102c:	d125      	bne.n	800107a <LCD_Init+0x6e>
            LCD_SendCommand(0x33);
 800102e:	2033      	movs	r0, #51	@ 0x33
 8001030:	f7ff ff70 	bl	8000f14 <LCD_SendCommand>
            delay_ms(5);
 8001034:	2005      	movs	r0, #5
 8001036:	f7ff fddd 	bl	8000bf4 <delay_ms>
            LCD_SendCommand(0x32);
 800103a:	2032      	movs	r0, #50	@ 0x32
 800103c:	f7ff ff6a 	bl	8000f14 <LCD_SendCommand>
            delay_us(50);
 8001040:	2032      	movs	r0, #50	@ 0x32
 8001042:	f7ff fdf1 	bl	8000c28 <delay_us>
            LCD_SendCommand(0x28);
 8001046:	2028      	movs	r0, #40	@ 0x28
 8001048:	f7ff ff64 	bl	8000f14 <LCD_SendCommand>
            delay_us(50);
 800104c:	2032      	movs	r0, #50	@ 0x32
 800104e:	f7ff fdeb 	bl	8000c28 <delay_us>
            LCD_SendCommand(0x0C);
 8001052:	200c      	movs	r0, #12
 8001054:	f7ff ff5e 	bl	8000f14 <LCD_SendCommand>
            delay_us(50);
 8001058:	2032      	movs	r0, #50	@ 0x32
 800105a:	f7ff fde5 	bl	8000c28 <delay_us>
            LCD_SendCommand(0x06);
 800105e:	2006      	movs	r0, #6
 8001060:	f7ff ff58 	bl	8000f14 <LCD_SendCommand>
            delay_us(50);
 8001064:	2032      	movs	r0, #50	@ 0x32
 8001066:	f7ff fddf 	bl	8000c28 <delay_us>
            LCD_SendCommand(0x01);
 800106a:	2001      	movs	r0, #1
 800106c:	f7ff ff52 	bl	8000f14 <LCD_SendCommand>
            delay_ms(2);
 8001070:	2002      	movs	r0, #2
 8001072:	f7ff fdbf 	bl	8000bf4 <delay_ms>
            return 0;
 8001076:	2300      	movs	r3, #0
 8001078:	e008      	b.n	800108c <LCD_Init+0x80>
        }
        delay_ms(50);
 800107a:	2032      	movs	r0, #50	@ 0x32
 800107c:	f7ff fdba 	bl	8000bf4 <delay_ms>
    while (retry--) {
 8001080:	79fb      	ldrb	r3, [r7, #7]
 8001082:	1e5a      	subs	r2, r3, #1
 8001084:	71fa      	strb	r2, [r7, #7]
 8001086:	2b00      	cmp	r3, #0
 8001088:	d1c6      	bne.n	8001018 <LCD_Init+0xc>
    }
    return 1;
 800108a:	2301      	movs	r3, #1
}
 800108c:	4618      	mov	r0, r3
 800108e:	3708      	adds	r7, #8
 8001090:	46bd      	mov	sp, r7
 8001092:	bd80      	pop	{r7, pc}
 8001094:	080049e4 	.word	0x080049e4

08001098 <LCD_SendString>:

void LCD_SendString(const char *str) {
 8001098:	b580      	push	{r7, lr}
 800109a:	b082      	sub	sp, #8
 800109c:	af00      	add	r7, sp, #0
 800109e:	6078      	str	r0, [r7, #4]
    while (*str && *str != '\0') LCD_SendData(*str++);
 80010a0:	e006      	b.n	80010b0 <LCD_SendString+0x18>
 80010a2:	687b      	ldr	r3, [r7, #4]
 80010a4:	1c5a      	adds	r2, r3, #1
 80010a6:	607a      	str	r2, [r7, #4]
 80010a8:	781b      	ldrb	r3, [r3, #0]
 80010aa:	4618      	mov	r0, r3
 80010ac:	f7ff ff70 	bl	8000f90 <LCD_SendData>
 80010b0:	687b      	ldr	r3, [r7, #4]
 80010b2:	781b      	ldrb	r3, [r3, #0]
 80010b4:	2b00      	cmp	r3, #0
 80010b6:	d003      	beq.n	80010c0 <LCD_SendString+0x28>
 80010b8:	687b      	ldr	r3, [r7, #4]
 80010ba:	781b      	ldrb	r3, [r3, #0]
 80010bc:	2b00      	cmp	r3, #0
 80010be:	d1f0      	bne.n	80010a2 <LCD_SendString+0xa>
}
 80010c0:	bf00      	nop
 80010c2:	3708      	adds	r7, #8
 80010c4:	46bd      	mov	sp, r7
 80010c6:	bd80      	pop	{r7, pc}

080010c8 <ADC_Config>:

void ADC_Config(void) {
 80010c8:	b580      	push	{r7, lr}
 80010ca:	af00      	add	r7, sp, #0
    RCC->APB2ENR |= RCC_APB2ENR_ADC1EN;
 80010cc:	4b0e      	ldr	r3, [pc, #56]	@ (8001108 <ADC_Config+0x40>)
 80010ce:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80010d0:	4a0d      	ldr	r2, [pc, #52]	@ (8001108 <ADC_Config+0x40>)
 80010d2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80010d6:	6453      	str	r3, [r2, #68]	@ 0x44
    ADC1->CR2 = 0;
 80010d8:	4b0c      	ldr	r3, [pc, #48]	@ (800110c <ADC_Config+0x44>)
 80010da:	2200      	movs	r2, #0
 80010dc:	609a      	str	r2, [r3, #8]
    ADC1->SQR3 = MQ2_CHANNEL;
 80010de:	4b0b      	ldr	r3, [pc, #44]	@ (800110c <ADC_Config+0x44>)
 80010e0:	2200      	movs	r2, #0
 80010e2:	635a      	str	r2, [r3, #52]	@ 0x34
    ADC1->SMPR2 |= (7 << (MQ2_CHANNEL * 3));
 80010e4:	4b09      	ldr	r3, [pc, #36]	@ (800110c <ADC_Config+0x44>)
 80010e6:	691b      	ldr	r3, [r3, #16]
 80010e8:	4a08      	ldr	r2, [pc, #32]	@ (800110c <ADC_Config+0x44>)
 80010ea:	f043 0307 	orr.w	r3, r3, #7
 80010ee:	6113      	str	r3, [r2, #16]
    ADC1->CR2 |= ADC_CR2_ADON;
 80010f0:	4b06      	ldr	r3, [pc, #24]	@ (800110c <ADC_Config+0x44>)
 80010f2:	689b      	ldr	r3, [r3, #8]
 80010f4:	4a05      	ldr	r2, [pc, #20]	@ (800110c <ADC_Config+0x44>)
 80010f6:	f043 0301 	orr.w	r3, r3, #1
 80010fa:	6093      	str	r3, [r2, #8]
    delay_us(10);
 80010fc:	200a      	movs	r0, #10
 80010fe:	f7ff fd93 	bl	8000c28 <delay_us>
}
 8001102:	bf00      	nop
 8001104:	bd80      	pop	{r7, pc}
 8001106:	bf00      	nop
 8001108:	40023800 	.word	0x40023800
 800110c:	40012000 	.word	0x40012000

08001110 <ADC_Read>:

uint16_t ADC_Read(void) {
 8001110:	b480      	push	{r7}
 8001112:	af00      	add	r7, sp, #0
    ADC1->CR2 |= ADC_CR2_SWSTART;
 8001114:	4b0a      	ldr	r3, [pc, #40]	@ (8001140 <ADC_Read+0x30>)
 8001116:	689b      	ldr	r3, [r3, #8]
 8001118:	4a09      	ldr	r2, [pc, #36]	@ (8001140 <ADC_Read+0x30>)
 800111a:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 800111e:	6093      	str	r3, [r2, #8]
    while (!(ADC1->SR & ADC_SR_EOC));
 8001120:	bf00      	nop
 8001122:	4b07      	ldr	r3, [pc, #28]	@ (8001140 <ADC_Read+0x30>)
 8001124:	681b      	ldr	r3, [r3, #0]
 8001126:	f003 0302 	and.w	r3, r3, #2
 800112a:	2b00      	cmp	r3, #0
 800112c:	d0f9      	beq.n	8001122 <ADC_Read+0x12>
    return ADC1->DR;
 800112e:	4b04      	ldr	r3, [pc, #16]	@ (8001140 <ADC_Read+0x30>)
 8001130:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001132:	b29b      	uxth	r3, r3
}
 8001134:	4618      	mov	r0, r3
 8001136:	46bd      	mov	sp, r7
 8001138:	f85d 7b04 	ldr.w	r7, [sp], #4
 800113c:	4770      	bx	lr
 800113e:	bf00      	nop
 8001140:	40012000 	.word	0x40012000

08001144 <UART_Config>:

void UART_Config(void) {
 8001144:	b480      	push	{r7}
 8001146:	af00      	add	r7, sp, #0
    RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 8001148:	4b17      	ldr	r3, [pc, #92]	@ (80011a8 <UART_Config+0x64>)
 800114a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800114c:	4a16      	ldr	r2, [pc, #88]	@ (80011a8 <UART_Config+0x64>)
 800114e:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001152:	6413      	str	r3, [r2, #64]	@ 0x40
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
 8001154:	4b14      	ldr	r3, [pc, #80]	@ (80011a8 <UART_Config+0x64>)
 8001156:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001158:	4a13      	ldr	r2, [pc, #76]	@ (80011a8 <UART_Config+0x64>)
 800115a:	f043 0301 	orr.w	r3, r3, #1
 800115e:	6313      	str	r3, [r2, #48]	@ 0x30
    GPIOA->MODER &= ~((3 << (2 * 2)) | (3 << (3 * 2)));
 8001160:	4b12      	ldr	r3, [pc, #72]	@ (80011ac <UART_Config+0x68>)
 8001162:	681b      	ldr	r3, [r3, #0]
 8001164:	4a11      	ldr	r2, [pc, #68]	@ (80011ac <UART_Config+0x68>)
 8001166:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800116a:	6013      	str	r3, [r2, #0]
    GPIOA->MODER |= ((2 << (2 * 2)) | (2 << (3 * 2)));
 800116c:	4b0f      	ldr	r3, [pc, #60]	@ (80011ac <UART_Config+0x68>)
 800116e:	681b      	ldr	r3, [r3, #0]
 8001170:	4a0e      	ldr	r2, [pc, #56]	@ (80011ac <UART_Config+0x68>)
 8001172:	f043 03a0 	orr.w	r3, r3, #160	@ 0xa0
 8001176:	6013      	str	r3, [r2, #0]
    GPIOA->AFR[0] |= ((7 << (2 * 4)) | (7 << (3 * 4)));
 8001178:	4b0c      	ldr	r3, [pc, #48]	@ (80011ac <UART_Config+0x68>)
 800117a:	6a1b      	ldr	r3, [r3, #32]
 800117c:	4a0b      	ldr	r2, [pc, #44]	@ (80011ac <UART_Config+0x68>)
 800117e:	f443 43ee 	orr.w	r3, r3, #30464	@ 0x7700
 8001182:	6213      	str	r3, [r2, #32]
    USART2->BRR = (uint32_t)(16000000.0f / 9600.0f + 0.5f); // HSI = 16 MHz
 8001184:	4b0a      	ldr	r3, [pc, #40]	@ (80011b0 <UART_Config+0x6c>)
 8001186:	f240 6283 	movw	r2, #1667	@ 0x683
 800118a:	609a      	str	r2, [r3, #8]
    USART2->CR1 |= USART_CR1_UE | USART_CR1_TE | USART_CR1_RE;
 800118c:	4b08      	ldr	r3, [pc, #32]	@ (80011b0 <UART_Config+0x6c>)
 800118e:	68db      	ldr	r3, [r3, #12]
 8001190:	4a07      	ldr	r2, [pc, #28]	@ (80011b0 <UART_Config+0x6c>)
 8001192:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8001196:	f043 030c 	orr.w	r3, r3, #12
 800119a:	60d3      	str	r3, [r2, #12]
}
 800119c:	bf00      	nop
 800119e:	46bd      	mov	sp, r7
 80011a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011a4:	4770      	bx	lr
 80011a6:	bf00      	nop
 80011a8:	40023800 	.word	0x40023800
 80011ac:	40020000 	.word	0x40020000
 80011b0:	40004400 	.word	0x40004400

080011b4 <UART_Transmit>:

void UART_Transmit(const char *data) {
 80011b4:	b480      	push	{r7}
 80011b6:	b083      	sub	sp, #12
 80011b8:	af00      	add	r7, sp, #0
 80011ba:	6078      	str	r0, [r7, #4]
    while (*data && *data != '\0') {
 80011bc:	e00c      	b.n	80011d8 <UART_Transmit+0x24>
        while (!(USART2->SR & USART_SR_TXE));
 80011be:	bf00      	nop
 80011c0:	4b0c      	ldr	r3, [pc, #48]	@ (80011f4 <UART_Transmit+0x40>)
 80011c2:	681b      	ldr	r3, [r3, #0]
 80011c4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80011c8:	2b00      	cmp	r3, #0
 80011ca:	d0f9      	beq.n	80011c0 <UART_Transmit+0xc>
        USART2->DR = *data++;
 80011cc:	687b      	ldr	r3, [r7, #4]
 80011ce:	1c5a      	adds	r2, r3, #1
 80011d0:	607a      	str	r2, [r7, #4]
 80011d2:	781a      	ldrb	r2, [r3, #0]
 80011d4:	4b07      	ldr	r3, [pc, #28]	@ (80011f4 <UART_Transmit+0x40>)
 80011d6:	605a      	str	r2, [r3, #4]
    while (*data && *data != '\0') {
 80011d8:	687b      	ldr	r3, [r7, #4]
 80011da:	781b      	ldrb	r3, [r3, #0]
 80011dc:	2b00      	cmp	r3, #0
 80011de:	d003      	beq.n	80011e8 <UART_Transmit+0x34>
 80011e0:	687b      	ldr	r3, [r7, #4]
 80011e2:	781b      	ldrb	r3, [r3, #0]
 80011e4:	2b00      	cmp	r3, #0
 80011e6:	d1ea      	bne.n	80011be <UART_Transmit+0xa>
    }
}
 80011e8:	bf00      	nop
 80011ea:	370c      	adds	r7, #12
 80011ec:	46bd      	mov	sp, r7
 80011ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011f2:	4770      	bx	lr
 80011f4:	40004400 	.word	0x40004400

080011f8 <LED_Set>:

void LED_Set(uint8_t r, uint8_t y, uint8_t b, uint8_t g) {
 80011f8:	b490      	push	{r4, r7}
 80011fa:	b082      	sub	sp, #8
 80011fc:	af00      	add	r7, sp, #0
 80011fe:	4604      	mov	r4, r0
 8001200:	4608      	mov	r0, r1
 8001202:	4611      	mov	r1, r2
 8001204:	461a      	mov	r2, r3
 8001206:	4623      	mov	r3, r4
 8001208:	71fb      	strb	r3, [r7, #7]
 800120a:	4603      	mov	r3, r0
 800120c:	71bb      	strb	r3, [r7, #6]
 800120e:	460b      	mov	r3, r1
 8001210:	717b      	strb	r3, [r7, #5]
 8001212:	4613      	mov	r3, r2
 8001214:	713b      	strb	r3, [r7, #4]
    if (LED_CATHODE_COMMON) {
        GPIOA->ODR = (GPIOA->ODR & ~(1 << LED_BLUE_PIN)) | (b << LED_BLUE_PIN);
 8001216:	4b0f      	ldr	r3, [pc, #60]	@ (8001254 <LED_Set+0x5c>)
 8001218:	695b      	ldr	r3, [r3, #20]
 800121a:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800121e:	797b      	ldrb	r3, [r7, #5]
 8001220:	01db      	lsls	r3, r3, #7
 8001222:	490c      	ldr	r1, [pc, #48]	@ (8001254 <LED_Set+0x5c>)
 8001224:	4313      	orrs	r3, r2
 8001226:	614b      	str	r3, [r1, #20]
        GPIOB->ODR = (GPIOB->ODR & ~((1 << LED_RED_PIN) | (1 << LED_YELLOW_PIN) | (1 << LED_GREEN_PIN))) |
 8001228:	4b0b      	ldr	r3, [pc, #44]	@ (8001258 <LED_Set+0x60>)
 800122a:	695b      	ldr	r3, [r3, #20]
 800122c:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8001230:	f023 0303 	bic.w	r3, r3, #3
                     (r << LED_RED_PIN) | (y << LED_YELLOW_PIN) | (g << LED_GREEN_PIN);
 8001234:	79fa      	ldrb	r2, [r7, #7]
 8001236:	0052      	lsls	r2, r2, #1
        GPIOB->ODR = (GPIOB->ODR & ~((1 << LED_RED_PIN) | (1 << LED_YELLOW_PIN) | (1 << LED_GREEN_PIN))) |
 8001238:	431a      	orrs	r2, r3
                     (r << LED_RED_PIN) | (y << LED_YELLOW_PIN) | (g << LED_GREEN_PIN);
 800123a:	79bb      	ldrb	r3, [r7, #6]
 800123c:	431a      	orrs	r2, r3
 800123e:	793b      	ldrb	r3, [r7, #4]
 8001240:	029b      	lsls	r3, r3, #10
        GPIOB->ODR = (GPIOB->ODR & ~((1 << LED_RED_PIN) | (1 << LED_YELLOW_PIN) | (1 << LED_GREEN_PIN))) |
 8001242:	4905      	ldr	r1, [pc, #20]	@ (8001258 <LED_Set+0x60>)
                     (r << LED_RED_PIN) | (y << LED_YELLOW_PIN) | (g << LED_GREEN_PIN);
 8001244:	4313      	orrs	r3, r2
        GPIOB->ODR = (GPIOB->ODR & ~((1 << LED_RED_PIN) | (1 << LED_YELLOW_PIN) | (1 << LED_GREEN_PIN))) |
 8001246:	614b      	str	r3, [r1, #20]
    } else {
        GPIOA->ODR = (GPIOA->ODR & ~(1 << LED_BLUE_PIN)) | ((b ? 0 : 1) << LED_BLUE_PIN);
        GPIOB->ODR = (GPIOB->ODR & ~((1 << LED_RED_PIN) | (1 << LED_YELLOW_PIN) | (1 << LED_GREEN_PIN))) |
                     ((r ? 0 : 1) << LED_RED_PIN) | ((y ? 0 : 1) << LED_YELLOW_PIN) | ((g ? 0 : 1) << LED_GREEN_PIN);
    }
}
 8001248:	bf00      	nop
 800124a:	3708      	adds	r7, #8
 800124c:	46bd      	mov	sp, r7
 800124e:	bc90      	pop	{r4, r7}
 8001250:	4770      	bx	lr
 8001252:	bf00      	nop
 8001254:	40020000 	.word	0x40020000
 8001258:	40020400 	.word	0x40020400

0800125c <Buzzer_Set>:

void Buzzer_Set(uint8_t state) {
 800125c:	b480      	push	{r7}
 800125e:	b083      	sub	sp, #12
 8001260:	af00      	add	r7, sp, #0
 8001262:	4603      	mov	r3, r0
 8001264:	71fb      	strb	r3, [r7, #7]
    if (BUZZER_ACTIVE_HIGH) {
        GPIOA->ODR = (GPIOA->ODR & ~(1 << BUZZER_PIN)) | (state << BUZZER_PIN);
 8001266:	4b07      	ldr	r3, [pc, #28]	@ (8001284 <Buzzer_Set+0x28>)
 8001268:	695b      	ldr	r3, [r3, #20]
 800126a:	f023 0240 	bic.w	r2, r3, #64	@ 0x40
 800126e:	79fb      	ldrb	r3, [r7, #7]
 8001270:	019b      	lsls	r3, r3, #6
 8001272:	4904      	ldr	r1, [pc, #16]	@ (8001284 <Buzzer_Set+0x28>)
 8001274:	4313      	orrs	r3, r2
 8001276:	614b      	str	r3, [r1, #20]
    } else {
        GPIOA->ODR = (GPIOA->ODR & ~(1 << BUZZER_PIN)) | ((state ? 0 : 1) << BUZZER_PIN);
    }
}
 8001278:	bf00      	nop
 800127a:	370c      	adds	r7, #12
 800127c:	46bd      	mov	sp, r7
 800127e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001282:	4770      	bx	lr
 8001284:	40020000 	.word	0x40020000

08001288 <TIM2_Reconfig>:

static uint32_t last_arr = 0;
void TIM2_Reconfig(uint32_t arr) {
 8001288:	b480      	push	{r7}
 800128a:	b083      	sub	sp, #12
 800128c:	af00      	add	r7, sp, #0
 800128e:	6078      	str	r0, [r7, #4]
    if (arr != last_arr) {
 8001290:	4b1d      	ldr	r3, [pc, #116]	@ (8001308 <TIM2_Reconfig+0x80>)
 8001292:	681b      	ldr	r3, [r3, #0]
 8001294:	687a      	ldr	r2, [r7, #4]
 8001296:	429a      	cmp	r2, r3
 8001298:	d02f      	beq.n	80012fa <TIM2_Reconfig+0x72>
        TIM2->CR1 &= ~TIM_CR1_CEN;
 800129a:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800129e:	681b      	ldr	r3, [r3, #0]
 80012a0:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80012a4:	f023 0301 	bic.w	r3, r3, #1
 80012a8:	6013      	str	r3, [r2, #0]
        TIM2->PSC = 4199;
 80012aa:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80012ae:	f241 0267 	movw	r2, #4199	@ 0x1067
 80012b2:	629a      	str	r2, [r3, #40]	@ 0x28
        TIM2->ARR = arr;
 80012b4:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80012b8:	687b      	ldr	r3, [r7, #4]
 80012ba:	62d3      	str	r3, [r2, #44]	@ 0x2c
        TIM2->CNT = 0;
 80012bc:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80012c0:	2200      	movs	r2, #0
 80012c2:	625a      	str	r2, [r3, #36]	@ 0x24
        TIM2->DIER |= TIM_DIER_UIE;
 80012c4:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80012c8:	68db      	ldr	r3, [r3, #12]
 80012ca:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80012ce:	f043 0301 	orr.w	r3, r3, #1
 80012d2:	60d3      	str	r3, [r2, #12]
        TIM2->SR &= ~TIM_SR_UIF;
 80012d4:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80012d8:	691b      	ldr	r3, [r3, #16]
 80012da:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80012de:	f023 0301 	bic.w	r3, r3, #1
 80012e2:	6113      	str	r3, [r2, #16]
        TIM2->CR1 |= TIM_CR1_CEN;
 80012e4:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80012e8:	681b      	ldr	r3, [r3, #0]
 80012ea:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80012ee:	f043 0301 	orr.w	r3, r3, #1
 80012f2:	6013      	str	r3, [r2, #0]
        last_arr = arr;
 80012f4:	4a04      	ldr	r2, [pc, #16]	@ (8001308 <TIM2_Reconfig+0x80>)
 80012f6:	687b      	ldr	r3, [r7, #4]
 80012f8:	6013      	str	r3, [r2, #0]
    }
}
 80012fa:	bf00      	nop
 80012fc:	370c      	adds	r7, #12
 80012fe:	46bd      	mov	sp, r7
 8001300:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001304:	4770      	bx	lr
 8001306:	bf00      	nop
 8001308:	200001f4 	.word	0x200001f4

0800130c <TIM2_Config>:

void TIM2_Config(void) {
 800130c:	b580      	push	{r7, lr}
 800130e:	af00      	add	r7, sp, #0
    RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;
 8001310:	4b05      	ldr	r3, [pc, #20]	@ (8001328 <TIM2_Config+0x1c>)
 8001312:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001314:	4a04      	ldr	r2, [pc, #16]	@ (8001328 <TIM2_Config+0x1c>)
 8001316:	f043 0301 	orr.w	r3, r3, #1
 800131a:	6413      	str	r3, [r2, #64]	@ 0x40
    NVIC_EnableIRQ(TIM2_IRQn);
 800131c:	201c      	movs	r0, #28
 800131e:	f7ff fc4b 	bl	8000bb8 <__NVIC_EnableIRQ>
}
 8001322:	bf00      	nop
 8001324:	bd80      	pop	{r7, pc}
 8001326:	bf00      	nop
 8001328:	40023800 	.word	0x40023800

0800132c <TIM2_IRQHandler>:

void TIM2_IRQHandler(void) {
 800132c:	b480      	push	{r7}
 800132e:	af00      	add	r7, sp, #0
    if (TIM2->SR & TIM_SR_UIF) {
 8001330:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001334:	691b      	ldr	r3, [r3, #16]
 8001336:	f003 0301 	and.w	r3, r3, #1
 800133a:	2b00      	cmp	r3, #0
 800133c:	d019      	beq.n	8001372 <TIM2_IRQHandler+0x46>
        TIM2->SR &= ~TIM_SR_UIF;
 800133e:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001342:	691b      	ldr	r3, [r3, #16]
 8001344:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001348:	f023 0301 	bic.w	r3, r3, #1
 800134c:	6113      	str	r3, [r2, #16]
        if (TIM2->CR1 & TIM_CR1_CEN) {
 800134e:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001352:	681b      	ldr	r3, [r3, #0]
 8001354:	f003 0301 	and.w	r3, r3, #1
 8001358:	2b00      	cmp	r3, #0
 800135a:	d00a      	beq.n	8001372 <TIM2_IRQHandler+0x46>
            tim2_blink_state = !tim2_blink_state;
 800135c:	4b07      	ldr	r3, [pc, #28]	@ (800137c <TIM2_IRQHandler+0x50>)
 800135e:	781b      	ldrb	r3, [r3, #0]
 8001360:	b2db      	uxtb	r3, r3
 8001362:	2b00      	cmp	r3, #0
 8001364:	bf0c      	ite	eq
 8001366:	2301      	moveq	r3, #1
 8001368:	2300      	movne	r3, #0
 800136a:	b2db      	uxtb	r3, r3
 800136c:	461a      	mov	r2, r3
 800136e:	4b03      	ldr	r3, [pc, #12]	@ (800137c <TIM2_IRQHandler+0x50>)
 8001370:	701a      	strb	r2, [r3, #0]
        }
    }
}
 8001372:	bf00      	nop
 8001374:	46bd      	mov	sp, r7
 8001376:	f85d 7b04 	ldr.w	r7, [sp], #4
 800137a:	4770      	bx	lr
 800137c:	200001f0 	.word	0x200001f0

08001380 <MQ2_GetPPM>:

float MQ2_GetPPM(uint16_t adc_value) {
 8001380:	b480      	push	{r7}
 8001382:	b087      	sub	sp, #28
 8001384:	af00      	add	r7, sp, #0
 8001386:	4603      	mov	r3, r0
 8001388:	80fb      	strh	r3, [r7, #6]
    float voltage = (adc_value / 4096.0f) * 3.3f;
 800138a:	88fb      	ldrh	r3, [r7, #6]
 800138c:	ee07 3a90 	vmov	s15, r3
 8001390:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001394:	eddf 6a17 	vldr	s13, [pc, #92]	@ 80013f4 <MQ2_GetPPM+0x74>
 8001398:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800139c:	ed9f 7a16 	vldr	s14, [pc, #88]	@ 80013f8 <MQ2_GetPPM+0x78>
 80013a0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80013a4:	edc7 7a04 	vstr	s15, [r7, #16]
    float k = 500.0f;
 80013a8:	4b14      	ldr	r3, [pc, #80]	@ (80013fc <MQ2_GetPPM+0x7c>)
 80013aa:	60fb      	str	r3, [r7, #12]
    float c = 0.0f;
 80013ac:	f04f 0300 	mov.w	r3, #0
 80013b0:	60bb      	str	r3, [r7, #8]
    float ppm = k * voltage + c;
 80013b2:	ed97 7a03 	vldr	s14, [r7, #12]
 80013b6:	edd7 7a04 	vldr	s15, [r7, #16]
 80013ba:	ee67 7a27 	vmul.f32	s15, s14, s15
 80013be:	ed97 7a02 	vldr	s14, [r7, #8]
 80013c2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80013c6:	edc7 7a05 	vstr	s15, [r7, #20]
    if (ppm < 0) ppm = 0;
 80013ca:	edd7 7a05 	vldr	s15, [r7, #20]
 80013ce:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80013d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80013d6:	d502      	bpl.n	80013de <MQ2_GetPPM+0x5e>
 80013d8:	f04f 0300 	mov.w	r3, #0
 80013dc:	617b      	str	r3, [r7, #20]
    return ppm;
 80013de:	697b      	ldr	r3, [r7, #20]
 80013e0:	ee07 3a90 	vmov	s15, r3
}
 80013e4:	eeb0 0a67 	vmov.f32	s0, s15
 80013e8:	371c      	adds	r7, #28
 80013ea:	46bd      	mov	sp, r7
 80013ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013f0:	4770      	bx	lr
 80013f2:	bf00      	nop
 80013f4:	45800000 	.word	0x45800000
 80013f8:	40533333 	.word	0x40533333
 80013fc:	43fa0000 	.word	0x43fa0000

08001400 <SysTick_Initialize>:

void SysTick_Initialize(void) {
 8001400:	b580      	push	{r7, lr}
 8001402:	af00      	add	r7, sp, #0
    SysTick->LOAD = 84000000 / 1000 - 1;
 8001404:	4b08      	ldr	r3, [pc, #32]	@ (8001428 <SysTick_Initialize+0x28>)
 8001406:	4a09      	ldr	r2, [pc, #36]	@ (800142c <SysTick_Initialize+0x2c>)
 8001408:	605a      	str	r2, [r3, #4]
    SysTick->VAL = 0;
 800140a:	4b07      	ldr	r3, [pc, #28]	@ (8001428 <SysTick_Initialize+0x28>)
 800140c:	2200      	movs	r2, #0
 800140e:	609a      	str	r2, [r3, #8]
    SysTick->CTRL |= SysTick_CTRL_CLKSOURCE_Msk | SysTick_CTRL_TICKINT_Msk | SysTick_CTRL_ENABLE_Msk;
 8001410:	4b05      	ldr	r3, [pc, #20]	@ (8001428 <SysTick_Initialize+0x28>)
 8001412:	681b      	ldr	r3, [r3, #0]
 8001414:	4a04      	ldr	r2, [pc, #16]	@ (8001428 <SysTick_Initialize+0x28>)
 8001416:	f043 0307 	orr.w	r3, r3, #7
 800141a:	6013      	str	r3, [r2, #0]
    NVIC_EnableIRQ(SysTick_IRQn);
 800141c:	f04f 30ff 	mov.w	r0, #4294967295
 8001420:	f7ff fbca 	bl	8000bb8 <__NVIC_EnableIRQ>
}
 8001424:	bf00      	nop
 8001426:	bd80      	pop	{r7, pc}
 8001428:	e000e010 	.word	0xe000e010
 800142c:	0001481f 	.word	0x0001481f

08001430 <SysTick_Handler>:

void SysTick_Handler(void) {
 8001430:	b480      	push	{r7}
 8001432:	af00      	add	r7, sp, #0
    tick_count++;
 8001434:	4b04      	ldr	r3, [pc, #16]	@ (8001448 <SysTick_Handler+0x18>)
 8001436:	681b      	ldr	r3, [r3, #0]
 8001438:	3301      	adds	r3, #1
 800143a:	4a03      	ldr	r2, [pc, #12]	@ (8001448 <SysTick_Handler+0x18>)
 800143c:	6013      	str	r3, [r2, #0]
}
 800143e:	bf00      	nop
 8001440:	46bd      	mov	sp, r7
 8001442:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001446:	4770      	bx	lr
 8001448:	200001ec 	.word	0x200001ec

0800144c <Relay_Set>:

void Relay_Set(uint8_t state) {
 800144c:	b480      	push	{r7}
 800144e:	b083      	sub	sp, #12
 8001450:	af00      	add	r7, sp, #0
 8001452:	4603      	mov	r3, r0
 8001454:	71fb      	strb	r3, [r7, #7]
    GPIOA->ODR = (GPIOA->ODR & ~(1 << RELAY_PIN)) | (state << RELAY_PIN);
 8001456:	4b07      	ldr	r3, [pc, #28]	@ (8001474 <Relay_Set+0x28>)
 8001458:	695b      	ldr	r3, [r3, #20]
 800145a:	f023 0220 	bic.w	r2, r3, #32
 800145e:	79fb      	ldrb	r3, [r7, #7]
 8001460:	015b      	lsls	r3, r3, #5
 8001462:	4904      	ldr	r1, [pc, #16]	@ (8001474 <Relay_Set+0x28>)
 8001464:	4313      	orrs	r3, r2
 8001466:	614b      	str	r3, [r1, #20]
}
 8001468:	bf00      	nop
 800146a:	370c      	adds	r7, #12
 800146c:	46bd      	mov	sp, r7
 800146e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001472:	4770      	bx	lr
 8001474:	40020000 	.word	0x40020000

08001478 <main>:

int main(void) {
 8001478:	b580      	push	{r7, lr}
 800147a:	b0a6      	sub	sp, #152	@ 0x98
 800147c:	af02      	add	r7, sp, #8
    SystemClock_Config();
 800147e:	f7ff fbeb 	bl	8000c58 <SystemClock_Config>
    GPIO_Config();
 8001482:	f7ff fc25 	bl	8000cd0 <GPIO_Config>
    ADC_Config();
 8001486:	f7ff fe1f 	bl	80010c8 <ADC_Config>
    I2C_Config();
 800148a:	f7ff fc79 	bl	8000d80 <I2C_Config>
    UART_Config();
 800148e:	f7ff fe59 	bl	8001144 <UART_Config>
    TIM2_Config();
 8001492:	f7ff ff3b 	bl	800130c <TIM2_Config>
    SysTick_Initialize();
 8001496:	f7ff ffb3 	bl	8001400 <SysTick_Initialize>

    if (LCD_Init()) {
 800149a:	f7ff fdb7 	bl	800100c <LCD_Init>
 800149e:	4603      	mov	r3, r0
 80014a0:	2b00      	cmp	r3, #0
 80014a2:	d002      	beq.n	80014aa <main+0x32>
        UART_Transmit("Try LCD_I2C_ADDR 0x3F\r\n");
 80014a4:	48a0      	ldr	r0, [pc, #640]	@ (8001728 <main+0x2b0>)
 80014a6:	f7ff fe85 	bl	80011b4 <UART_Transmit>
    }

    LED_Set(1, 0, 0, 0); delay_ms(100);
 80014aa:	2300      	movs	r3, #0
 80014ac:	2200      	movs	r2, #0
 80014ae:	2100      	movs	r1, #0
 80014b0:	2001      	movs	r0, #1
 80014b2:	f7ff fea1 	bl	80011f8 <LED_Set>
 80014b6:	2064      	movs	r0, #100	@ 0x64
 80014b8:	f7ff fb9c 	bl	8000bf4 <delay_ms>
    LED_Set(0, 0, 0, 1); delay_ms(100);
 80014bc:	2301      	movs	r3, #1
 80014be:	2200      	movs	r2, #0
 80014c0:	2100      	movs	r1, #0
 80014c2:	2000      	movs	r0, #0
 80014c4:	f7ff fe98 	bl	80011f8 <LED_Set>
 80014c8:	2064      	movs	r0, #100	@ 0x64
 80014ca:	f7ff fb93 	bl	8000bf4 <delay_ms>
    LED_Set(0, 1, 0, 0); delay_ms(100);
 80014ce:	2300      	movs	r3, #0
 80014d0:	2200      	movs	r2, #0
 80014d2:	2101      	movs	r1, #1
 80014d4:	2000      	movs	r0, #0
 80014d6:	f7ff fe8f 	bl	80011f8 <LED_Set>
 80014da:	2064      	movs	r0, #100	@ 0x64
 80014dc:	f7ff fb8a 	bl	8000bf4 <delay_ms>
    LED_Set(0, 0, 1, 0); delay_ms(100);
 80014e0:	2300      	movs	r3, #0
 80014e2:	2201      	movs	r2, #1
 80014e4:	2100      	movs	r1, #0
 80014e6:	2000      	movs	r0, #0
 80014e8:	f7ff fe86 	bl	80011f8 <LED_Set>
 80014ec:	2064      	movs	r0, #100	@ 0x64
 80014ee:	f7ff fb81 	bl	8000bf4 <delay_ms>
    LED_Set(0, 0, 0, 0);
 80014f2:	2300      	movs	r3, #0
 80014f4:	2200      	movs	r2, #0
 80014f6:	2100      	movs	r1, #0
 80014f8:	2000      	movs	r0, #0
 80014fa:	f7ff fe7d 	bl	80011f8 <LED_Set>

    LCD_SendCommand(0x01);
 80014fe:	2001      	movs	r0, #1
 8001500:	f7ff fd08 	bl	8000f14 <LCD_SendCommand>
    LCD_SendCommand(0x80);
 8001504:	2080      	movs	r0, #128	@ 0x80
 8001506:	f7ff fd05 	bl	8000f14 <LCD_SendCommand>
    LCD_SendString("Gas Detector");
 800150a:	4888      	ldr	r0, [pc, #544]	@ (800172c <main+0x2b4>)
 800150c:	f7ff fdc4 	bl	8001098 <LCD_SendString>
    LCD_SendCommand(0xC0);
 8001510:	20c0      	movs	r0, #192	@ 0xc0
 8001512:	f7ff fcff 	bl	8000f14 <LCD_SendCommand>
    LCD_SendString("Starting...");
 8001516:	4886      	ldr	r0, [pc, #536]	@ (8001730 <main+0x2b8>)
 8001518:	f7ff fdbe 	bl	8001098 <LCD_SendString>
    delay_ms(1000);
 800151c:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8001520:	f7ff fb68 	bl	8000bf4 <delay_ms>

    LCD_SendCommand(0x01);
 8001524:	2001      	movs	r0, #1
 8001526:	f7ff fcf5 	bl	8000f14 <LCD_SendCommand>
    LCD_SendCommand(0x80);
 800152a:	2080      	movs	r0, #128	@ 0x80
 800152c:	f7ff fcf2 	bl	8000f14 <LCD_SendCommand>
    LCD_SendString("PPM:----");
 8001530:	4880      	ldr	r0, [pc, #512]	@ (8001734 <main+0x2bc>)
 8001532:	f7ff fdb1 	bl	8001098 <LCD_SendString>
    LCD_SendCommand(0xC0);
 8001536:	20c0      	movs	r0, #192	@ 0xc0
 8001538:	f7ff fcec 	bl	8000f14 <LCD_SendCommand>
    LCD_SendString("SYS:ON Alert:-");
 800153c:	487e      	ldr	r0, [pc, #504]	@ (8001738 <main+0x2c0>)
 800153e:	f7ff fdab 	bl	8001098 <LCD_SendString>
    delay_ms(50);
 8001542:	2032      	movs	r0, #50	@ 0x32
 8001544:	f7ff fb56 	bl	8000bf4 <delay_ms>

    char lcd_buf[17];
    char debug_buf[80];
    uint8_t last_system_state = system_state;
 8001548:	4b7c      	ldr	r3, [pc, #496]	@ (800173c <main+0x2c4>)
 800154a:	781b      	ldrb	r3, [r3, #0]
 800154c:	f887 308f 	strb.w	r3, [r7, #143]	@ 0x8f
    uint8_t last_alert_state = 255;
 8001550:	23ff      	movs	r3, #255	@ 0xff
 8001552:	f887 308e 	strb.w	r3, [r7, #142]	@ 0x8e
    uint32_t last_ppm = 0xFFFFFFFF;
 8001556:	f04f 33ff 	mov.w	r3, #4294967295
 800155a:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
    uint32_t last_transmit = 0;
 800155e:	2300      	movs	r3, #0
 8001560:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
    uint32_t last_lcd_update = 0;
 8001564:	2300      	movs	r3, #0
 8001566:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
    float last_ppm_for_freq = 0;
 800156a:	f04f 0300 	mov.w	r3, #0
 800156e:	67fb      	str	r3, [r7, #124]	@ 0x7c

    while (1) {
        static uint8_t last_sw1 = 1, last_sw2 = 1;
        uint8_t sw1 = (GPIOC->IDR & (1 << SW1_PIN)) ? 1 : 0;
 8001570:	4b73      	ldr	r3, [pc, #460]	@ (8001740 <main+0x2c8>)
 8001572:	691b      	ldr	r3, [r3, #16]
 8001574:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8001578:	2b00      	cmp	r3, #0
 800157a:	bf14      	ite	ne
 800157c:	2301      	movne	r3, #1
 800157e:	2300      	moveq	r3, #0
 8001580:	b2db      	uxtb	r3, r3
 8001582:	f887 307b 	strb.w	r3, [r7, #123]	@ 0x7b
        uint8_t sw2 = (GPIOC->IDR & (1 << SW2_PIN)) ? 1 : 0;
 8001586:	4b6e      	ldr	r3, [pc, #440]	@ (8001740 <main+0x2c8>)
 8001588:	691b      	ldr	r3, [r3, #16]
 800158a:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800158e:	2b00      	cmp	r3, #0
 8001590:	bf14      	ite	ne
 8001592:	2301      	movne	r3, #1
 8001594:	2300      	moveq	r3, #0
 8001596:	b2db      	uxtb	r3, r3
 8001598:	f887 307a 	strb.w	r3, [r7, #122]	@ 0x7a

        if (last_sw1 && !sw1) {
 800159c:	4b69      	ldr	r3, [pc, #420]	@ (8001744 <main+0x2cc>)
 800159e:	781b      	ldrb	r3, [r3, #0]
 80015a0:	2b00      	cmp	r3, #0
 80015a2:	d018      	beq.n	80015d6 <main+0x15e>
 80015a4:	f897 307b 	ldrb.w	r3, [r7, #123]	@ 0x7b
 80015a8:	2b00      	cmp	r3, #0
 80015aa:	d114      	bne.n	80015d6 <main+0x15e>
            system_state = !system_state;
 80015ac:	4b63      	ldr	r3, [pc, #396]	@ (800173c <main+0x2c4>)
 80015ae:	781b      	ldrb	r3, [r3, #0]
 80015b0:	2b00      	cmp	r3, #0
 80015b2:	bf0c      	ite	eq
 80015b4:	2301      	moveq	r3, #1
 80015b6:	2300      	movne	r3, #0
 80015b8:	b2db      	uxtb	r3, r3
 80015ba:	461a      	mov	r2, r3
 80015bc:	4b5f      	ldr	r3, [pc, #380]	@ (800173c <main+0x2c4>)
 80015be:	701a      	strb	r2, [r3, #0]
            snprintf(debug_buf, sizeof(debug_buf), "SW1 Pressed: System State=%u\r\n", system_state);
 80015c0:	4b5e      	ldr	r3, [pc, #376]	@ (800173c <main+0x2c4>)
 80015c2:	781b      	ldrb	r3, [r3, #0]
 80015c4:	1d38      	adds	r0, r7, #4
 80015c6:	4a60      	ldr	r2, [pc, #384]	@ (8001748 <main+0x2d0>)
 80015c8:	2150      	movs	r1, #80	@ 0x50
 80015ca:	f001 f8b3 	bl	8002734 <sniprintf>
            UART_Transmit(debug_buf);
 80015ce:	1d3b      	adds	r3, r7, #4
 80015d0:	4618      	mov	r0, r3
 80015d2:	f7ff fdef 	bl	80011b4 <UART_Transmit>
        }
        last_sw1 = sw1;
 80015d6:	4a5b      	ldr	r2, [pc, #364]	@ (8001744 <main+0x2cc>)
 80015d8:	f897 307b 	ldrb.w	r3, [r7, #123]	@ 0x7b
 80015dc:	7013      	strb	r3, [r2, #0]

        if (last_sw2 && !sw2) {
 80015de:	4b5b      	ldr	r3, [pc, #364]	@ (800174c <main+0x2d4>)
 80015e0:	781b      	ldrb	r3, [r3, #0]
 80015e2:	2b00      	cmp	r3, #0
 80015e4:	d056      	beq.n	8001694 <main+0x21c>
 80015e6:	f897 307a 	ldrb.w	r3, [r7, #122]	@ 0x7a
 80015ea:	2b00      	cmp	r3, #0
 80015ec:	d152      	bne.n	8001694 <main+0x21c>
            system_state = 1;
 80015ee:	4b53      	ldr	r3, [pc, #332]	@ (800173c <main+0x2c4>)
 80015f0:	2201      	movs	r2, #1
 80015f2:	701a      	strb	r2, [r3, #0]
            alert_state = 0;
 80015f4:	4b56      	ldr	r3, [pc, #344]	@ (8001750 <main+0x2d8>)
 80015f6:	2200      	movs	r2, #0
 80015f8:	701a      	strb	r2, [r3, #0]
            tim2_blink_state = 0;
 80015fa:	4b56      	ldr	r3, [pc, #344]	@ (8001754 <main+0x2dc>)
 80015fc:	2200      	movs	r2, #0
 80015fe:	701a      	strb	r2, [r3, #0]
            LED_Set(0, 0, 0, 0);
 8001600:	2300      	movs	r3, #0
 8001602:	2200      	movs	r2, #0
 8001604:	2100      	movs	r1, #0
 8001606:	2000      	movs	r0, #0
 8001608:	f7ff fdf6 	bl	80011f8 <LED_Set>
            Relay_Set(0);
 800160c:	2000      	movs	r0, #0
 800160e:	f7ff ff1d 	bl	800144c <Relay_Set>
            Buzzer_Set(0);
 8001612:	2000      	movs	r0, #0
 8001614:	f7ff fe22 	bl	800125c <Buzzer_Set>
            TIM2->CR1 &= ~TIM_CR1_CEN;
 8001618:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800161c:	681b      	ldr	r3, [r3, #0]
 800161e:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001622:	f023 0301 	bic.w	r3, r3, #1
 8001626:	6013      	str	r3, [r2, #0]
            LCD_SendCommand(0x01);
 8001628:	2001      	movs	r0, #1
 800162a:	f7ff fc73 	bl	8000f14 <LCD_SendCommand>
            LCD_SendCommand(0x80);
 800162e:	2080      	movs	r0, #128	@ 0x80
 8001630:	f7ff fc70 	bl	8000f14 <LCD_SendCommand>
            LCD_SendString("Gas Detector");
 8001634:	483d      	ldr	r0, [pc, #244]	@ (800172c <main+0x2b4>)
 8001636:	f7ff fd2f 	bl	8001098 <LCD_SendString>
            LCD_SendCommand(0xC0);
 800163a:	20c0      	movs	r0, #192	@ 0xc0
 800163c:	f7ff fc6a 	bl	8000f14 <LCD_SendCommand>
            LCD_SendString("Starting...");
 8001640:	483b      	ldr	r0, [pc, #236]	@ (8001730 <main+0x2b8>)
 8001642:	f7ff fd29 	bl	8001098 <LCD_SendString>
            UART_Transmit("SW2 Pressed: System Reset\r\n");
 8001646:	4844      	ldr	r0, [pc, #272]	@ (8001758 <main+0x2e0>)
 8001648:	f7ff fdb4 	bl	80011b4 <UART_Transmit>
            delay_ms(1000);
 800164c:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8001650:	f7ff fad0 	bl	8000bf4 <delay_ms>
            LCD_SendCommand(0x01);
 8001654:	2001      	movs	r0, #1
 8001656:	f7ff fc5d 	bl	8000f14 <LCD_SendCommand>
            LCD_SendCommand(0x80);
 800165a:	2080      	movs	r0, #128	@ 0x80
 800165c:	f7ff fc5a 	bl	8000f14 <LCD_SendCommand>
            LCD_SendString("PPM:----");
 8001660:	4834      	ldr	r0, [pc, #208]	@ (8001734 <main+0x2bc>)
 8001662:	f7ff fd19 	bl	8001098 <LCD_SendString>
            LCD_SendCommand(0xC0);
 8001666:	20c0      	movs	r0, #192	@ 0xc0
 8001668:	f7ff fc54 	bl	8000f14 <LCD_SendCommand>
            LCD_SendString("SYS:ON Alert:-");
 800166c:	4832      	ldr	r0, [pc, #200]	@ (8001738 <main+0x2c0>)
 800166e:	f7ff fd13 	bl	8001098 <LCD_SendString>
            last_system_state = system_state;
 8001672:	4b32      	ldr	r3, [pc, #200]	@ (800173c <main+0x2c4>)
 8001674:	781b      	ldrb	r3, [r3, #0]
 8001676:	f887 308f 	strb.w	r3, [r7, #143]	@ 0x8f
            last_alert_state = 255;
 800167a:	23ff      	movs	r3, #255	@ 0xff
 800167c:	f887 308e 	strb.w	r3, [r7, #142]	@ 0x8e
            last_ppm = 0xFFFFFFFF;
 8001680:	f04f 33ff 	mov.w	r3, #4294967295
 8001684:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
            last_ppm_for_freq = 0;
 8001688:	f04f 0300 	mov.w	r3, #0
 800168c:	67fb      	str	r3, [r7, #124]	@ 0x7c
            last_lcd_update = 0;
 800168e:	2300      	movs	r3, #0
 8001690:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
        }
        last_sw2 = sw2;
 8001694:	4a2d      	ldr	r2, [pc, #180]	@ (800174c <main+0x2d4>)
 8001696:	f897 307a 	ldrb.w	r3, [r7, #122]	@ 0x7a
 800169a:	7013      	strb	r3, [r2, #0]

        if (!system_state) {
 800169c:	4b27      	ldr	r3, [pc, #156]	@ (800173c <main+0x2c4>)
 800169e:	781b      	ldrb	r3, [r3, #0]
 80016a0:	2b00      	cmp	r3, #0
 80016a2:	d161      	bne.n	8001768 <main+0x2f0>
            if (last_system_state != system_state) {
 80016a4:	4b25      	ldr	r3, [pc, #148]	@ (800173c <main+0x2c4>)
 80016a6:	781b      	ldrb	r3, [r3, #0]
 80016a8:	f897 208f 	ldrb.w	r2, [r7, #143]	@ 0x8f
 80016ac:	429a      	cmp	r2, r3
 80016ae:	d036      	beq.n	800171e <main+0x2a6>
                LED_Set(0, 0, 0, 1);
 80016b0:	2301      	movs	r3, #1
 80016b2:	2200      	movs	r2, #0
 80016b4:	2100      	movs	r1, #0
 80016b6:	2000      	movs	r0, #0
 80016b8:	f7ff fd9e 	bl	80011f8 <LED_Set>
                Relay_Set(0);
 80016bc:	2000      	movs	r0, #0
 80016be:	f7ff fec5 	bl	800144c <Relay_Set>
                Buzzer_Set(0);
 80016c2:	2000      	movs	r0, #0
 80016c4:	f7ff fdca 	bl	800125c <Buzzer_Set>
                TIM2->CR1 &= ~TIM_CR1_CEN;
 80016c8:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80016cc:	681b      	ldr	r3, [r3, #0]
 80016ce:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80016d2:	f023 0301 	bic.w	r3, r3, #1
 80016d6:	6013      	str	r3, [r2, #0]
                LCD_SendCommand(0x01);
 80016d8:	2001      	movs	r0, #1
 80016da:	f7ff fc1b 	bl	8000f14 <LCD_SendCommand>
                LCD_SendCommand(0x80);
 80016de:	2080      	movs	r0, #128	@ 0x80
 80016e0:	f7ff fc18 	bl	8000f14 <LCD_SendCommand>
                LCD_SendString("SYS:OFF");
 80016e4:	481d      	ldr	r0, [pc, #116]	@ (800175c <main+0x2e4>)
 80016e6:	f7ff fcd7 	bl	8001098 <LCD_SendString>
                LCD_SendCommand(0xC0);
 80016ea:	20c0      	movs	r0, #192	@ 0xc0
 80016ec:	f7ff fc12 	bl	8000f14 <LCD_SendCommand>
                LCD_SendString("PPM:--- Alert:0");
 80016f0:	481b      	ldr	r0, [pc, #108]	@ (8001760 <main+0x2e8>)
 80016f2:	f7ff fcd1 	bl	8001098 <LCD_SendString>
                UART_Transmit("System: OFF, PPM: ---\r\n");
 80016f6:	481b      	ldr	r0, [pc, #108]	@ (8001764 <main+0x2ec>)
 80016f8:	f7ff fd5c 	bl	80011b4 <UART_Transmit>
                last_system_state = system_state;
 80016fc:	4b0f      	ldr	r3, [pc, #60]	@ (800173c <main+0x2c4>)
 80016fe:	781b      	ldrb	r3, [r3, #0]
 8001700:	f887 308f 	strb.w	r3, [r7, #143]	@ 0x8f
                last_alert_state = 255;
 8001704:	23ff      	movs	r3, #255	@ 0xff
 8001706:	f887 308e 	strb.w	r3, [r7, #142]	@ 0x8e
                last_ppm = 0xFFFFFFFF;
 800170a:	f04f 33ff 	mov.w	r3, #4294967295
 800170e:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
                last_ppm_for_freq = 0;
 8001712:	f04f 0300 	mov.w	r3, #0
 8001716:	67fb      	str	r3, [r7, #124]	@ 0x7c
                last_lcd_update = 0;
 8001718:	2300      	movs	r3, #0
 800171a:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
            }
            delay_ms(50);
 800171e:	2032      	movs	r0, #50	@ 0x32
 8001720:	f7ff fa68 	bl	8000bf4 <delay_ms>
            continue;
 8001724:	e1a1      	b.n	8001a6a <main+0x5f2>
 8001726:	bf00      	nop
 8001728:	080049ec 	.word	0x080049ec
 800172c:	08004a04 	.word	0x08004a04
 8001730:	08004a14 	.word	0x08004a14
 8001734:	08004a20 	.word	0x08004a20
 8001738:	08004a2c 	.word	0x08004a2c
 800173c:	20000000 	.word	0x20000000
 8001740:	40020800 	.word	0x40020800
 8001744:	20000001 	.word	0x20000001
 8001748:	08004a3c 	.word	0x08004a3c
 800174c:	20000002 	.word	0x20000002
 8001750:	200001e8 	.word	0x200001e8
 8001754:	200001f0 	.word	0x200001f0
 8001758:	08004a5c 	.word	0x08004a5c
 800175c:	08004a78 	.word	0x08004a78
 8001760:	08004a80 	.word	0x08004a80
 8001764:	08004a90 	.word	0x08004a90
        }

        if (last_system_state != system_state) {
 8001768:	4bc0      	ldr	r3, [pc, #768]	@ (8001a6c <main+0x5f4>)
 800176a:	781b      	ldrb	r3, [r3, #0]
 800176c:	f897 208f 	ldrb.w	r2, [r7, #143]	@ 0x8f
 8001770:	429a      	cmp	r2, r3
 8001772:	d01f      	beq.n	80017b4 <main+0x33c>
            LCD_SendCommand(0x01);
 8001774:	2001      	movs	r0, #1
 8001776:	f7ff fbcd 	bl	8000f14 <LCD_SendCommand>
            LCD_SendCommand(0x80);
 800177a:	2080      	movs	r0, #128	@ 0x80
 800177c:	f7ff fbca 	bl	8000f14 <LCD_SendCommand>
            LCD_SendString("PPM:----");
 8001780:	48bb      	ldr	r0, [pc, #748]	@ (8001a70 <main+0x5f8>)
 8001782:	f7ff fc89 	bl	8001098 <LCD_SendString>
            LCD_SendCommand(0xC0);
 8001786:	20c0      	movs	r0, #192	@ 0xc0
 8001788:	f7ff fbc4 	bl	8000f14 <LCD_SendCommand>
            LCD_SendString("SYS:ON Alert:-");
 800178c:	48b9      	ldr	r0, [pc, #740]	@ (8001a74 <main+0x5fc>)
 800178e:	f7ff fc83 	bl	8001098 <LCD_SendString>
            last_system_state = system_state;
 8001792:	4bb6      	ldr	r3, [pc, #728]	@ (8001a6c <main+0x5f4>)
 8001794:	781b      	ldrb	r3, [r3, #0]
 8001796:	f887 308f 	strb.w	r3, [r7, #143]	@ 0x8f
            last_alert_state = 255;
 800179a:	23ff      	movs	r3, #255	@ 0xff
 800179c:	f887 308e 	strb.w	r3, [r7, #142]	@ 0x8e
            last_ppm = 0xFFFFFFFF;
 80017a0:	f04f 33ff 	mov.w	r3, #4294967295
 80017a4:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
            last_ppm_for_freq = 0;
 80017a8:	f04f 0300 	mov.w	r3, #0
 80017ac:	67fb      	str	r3, [r7, #124]	@ 0x7c
            last_lcd_update = 0;
 80017ae:	2300      	movs	r3, #0
 80017b0:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
        }

        uint16_t adc_val = ADC_Read();
 80017b4:	f7ff fcac 	bl	8001110 <ADC_Read>
 80017b8:	4603      	mov	r3, r0
 80017ba:	f8a7 3078 	strh.w	r3, [r7, #120]	@ 0x78
        float ppm = MQ2_GetPPM(adc_val);
 80017be:	f8b7 3078 	ldrh.w	r3, [r7, #120]	@ 0x78
 80017c2:	4618      	mov	r0, r3
 80017c4:	f7ff fddc 	bl	8001380 <MQ2_GetPPM>
 80017c8:	ed87 0a1d 	vstr	s0, [r7, #116]	@ 0x74
        uint32_t ppm_int = (uint32_t)ppm;
 80017cc:	edd7 7a1d 	vldr	s15, [r7, #116]	@ 0x74
 80017d0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80017d4:	ee17 3a90 	vmov	r3, s15
 80017d8:	673b      	str	r3, [r7, #112]	@ 0x70

        if (tick_count - last_transmit >= 1000) {
 80017da:	4ba7      	ldr	r3, [pc, #668]	@ (8001a78 <main+0x600>)
 80017dc:	681a      	ldr	r2, [r3, #0]
 80017de:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80017e2:	1ad3      	subs	r3, r2, r3
 80017e4:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80017e8:	d313      	bcc.n	8001812 <main+0x39a>
            snprintf(debug_buf, sizeof(debug_buf), "PPM: %.0f\r\n",
 80017ea:	6f78      	ldr	r0, [r7, #116]	@ 0x74
 80017ec:	f7fe feb4 	bl	8000558 <__aeabi_f2d>
 80017f0:	4602      	mov	r2, r0
 80017f2:	460b      	mov	r3, r1
 80017f4:	1d38      	adds	r0, r7, #4
 80017f6:	e9cd 2300 	strd	r2, r3, [sp]
 80017fa:	4aa0      	ldr	r2, [pc, #640]	@ (8001a7c <main+0x604>)
 80017fc:	2150      	movs	r1, #80	@ 0x50
 80017fe:	f000 ff99 	bl	8002734 <sniprintf>
                      ppm);
            UART_Transmit(debug_buf);
 8001802:	1d3b      	adds	r3, r7, #4
 8001804:	4618      	mov	r0, r3
 8001806:	f7ff fcd5 	bl	80011b4 <UART_Transmit>
            last_transmit = tick_count;
 800180a:	4b9b      	ldr	r3, [pc, #620]	@ (8001a78 <main+0x600>)
 800180c:	681b      	ldr	r3, [r3, #0]
 800180e:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
        }

        if (ppm > 800) alert_state = 3;
 8001812:	edd7 7a1d 	vldr	s15, [r7, #116]	@ 0x74
 8001816:	ed9f 7a9a 	vldr	s14, [pc, #616]	@ 8001a80 <main+0x608>
 800181a:	eef4 7ac7 	vcmpe.f32	s15, s14
 800181e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001822:	dd03      	ble.n	800182c <main+0x3b4>
 8001824:	4b97      	ldr	r3, [pc, #604]	@ (8001a84 <main+0x60c>)
 8001826:	2203      	movs	r2, #3
 8001828:	701a      	strb	r2, [r3, #0]
 800182a:	e01c      	b.n	8001866 <main+0x3ee>
        else if (ppm > 500) alert_state = 2;
 800182c:	edd7 7a1d 	vldr	s15, [r7, #116]	@ 0x74
 8001830:	ed9f 7a95 	vldr	s14, [pc, #596]	@ 8001a88 <main+0x610>
 8001834:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001838:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800183c:	dd03      	ble.n	8001846 <main+0x3ce>
 800183e:	4b91      	ldr	r3, [pc, #580]	@ (8001a84 <main+0x60c>)
 8001840:	2202      	movs	r2, #2
 8001842:	701a      	strb	r2, [r3, #0]
 8001844:	e00f      	b.n	8001866 <main+0x3ee>
        else if (ppm > 300) alert_state = 1;
 8001846:	edd7 7a1d 	vldr	s15, [r7, #116]	@ 0x74
 800184a:	ed9f 7a90 	vldr	s14, [pc, #576]	@ 8001a8c <main+0x614>
 800184e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001852:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001856:	dd03      	ble.n	8001860 <main+0x3e8>
 8001858:	4b8a      	ldr	r3, [pc, #552]	@ (8001a84 <main+0x60c>)
 800185a:	2201      	movs	r2, #1
 800185c:	701a      	strb	r2, [r3, #0]
 800185e:	e002      	b.n	8001866 <main+0x3ee>
        else alert_state = 0;
 8001860:	4b88      	ldr	r3, [pc, #544]	@ (8001a84 <main+0x60c>)
 8001862:	2200      	movs	r2, #0
 8001864:	701a      	strb	r2, [r3, #0]

        if (tick_count - last_lcd_update >= 500 || last_alert_state != alert_state) {
 8001866:	4b84      	ldr	r3, [pc, #528]	@ (8001a78 <main+0x600>)
 8001868:	681a      	ldr	r2, [r3, #0]
 800186a:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 800186e:	1ad3      	subs	r3, r2, r3
 8001870:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 8001874:	d205      	bcs.n	8001882 <main+0x40a>
 8001876:	4b83      	ldr	r3, [pc, #524]	@ (8001a84 <main+0x60c>)
 8001878:	781b      	ldrb	r3, [r3, #0]
 800187a:	f897 208e 	ldrb.w	r2, [r7, #142]	@ 0x8e
 800187e:	429a      	cmp	r2, r3
 8001880:	d034      	beq.n	80018ec <main+0x474>
            if (ppm_int != last_ppm) {
 8001882:	6f3a      	ldr	r2, [r7, #112]	@ 0x70
 8001884:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8001888:	429a      	cmp	r2, r3
 800188a:	d011      	beq.n	80018b0 <main+0x438>
                LCD_SendCommand(0x80 + 4);
 800188c:	2084      	movs	r0, #132	@ 0x84
 800188e:	f7ff fb41 	bl	8000f14 <LCD_SendCommand>
                snprintf(lcd_buf, sizeof(lcd_buf), "%4lu", ppm_int);
 8001892:	f107 0054 	add.w	r0, r7, #84	@ 0x54
 8001896:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8001898:	4a7d      	ldr	r2, [pc, #500]	@ (8001a90 <main+0x618>)
 800189a:	2111      	movs	r1, #17
 800189c:	f000 ff4a 	bl	8002734 <sniprintf>
                LCD_SendString(lcd_buf);
 80018a0:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 80018a4:	4618      	mov	r0, r3
 80018a6:	f7ff fbf7 	bl	8001098 <LCD_SendString>
                last_ppm = ppm_int;
 80018aa:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 80018ac:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
            }
            if (last_alert_state != alert_state) {
 80018b0:	4b74      	ldr	r3, [pc, #464]	@ (8001a84 <main+0x60c>)
 80018b2:	781b      	ldrb	r3, [r3, #0]
 80018b4:	f897 208e 	ldrb.w	r2, [r7, #142]	@ 0x8e
 80018b8:	429a      	cmp	r2, r3
 80018ba:	d013      	beq.n	80018e4 <main+0x46c>
                LCD_SendCommand(0xC0 + 13);
 80018bc:	20cd      	movs	r0, #205	@ 0xcd
 80018be:	f7ff fb29 	bl	8000f14 <LCD_SendCommand>
                snprintf(lcd_buf, sizeof(lcd_buf), "%d", alert_state);
 80018c2:	4b70      	ldr	r3, [pc, #448]	@ (8001a84 <main+0x60c>)
 80018c4:	781b      	ldrb	r3, [r3, #0]
 80018c6:	f107 0054 	add.w	r0, r7, #84	@ 0x54
 80018ca:	4a72      	ldr	r2, [pc, #456]	@ (8001a94 <main+0x61c>)
 80018cc:	2111      	movs	r1, #17
 80018ce:	f000 ff31 	bl	8002734 <sniprintf>
                LCD_SendString(lcd_buf);
 80018d2:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 80018d6:	4618      	mov	r0, r3
 80018d8:	f7ff fbde 	bl	8001098 <LCD_SendString>
                last_alert_state = alert_state;
 80018dc:	4b69      	ldr	r3, [pc, #420]	@ (8001a84 <main+0x60c>)
 80018de:	781b      	ldrb	r3, [r3, #0]
 80018e0:	f887 308e 	strb.w	r3, [r7, #142]	@ 0x8e
            }
            last_lcd_update = tick_count;
 80018e4:	4b64      	ldr	r3, [pc, #400]	@ (8001a78 <main+0x600>)
 80018e6:	681b      	ldr	r3, [r3, #0]
 80018e8:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
        }

        switch (alert_state) {
 80018ec:	4b65      	ldr	r3, [pc, #404]	@ (8001a84 <main+0x60c>)
 80018ee:	781b      	ldrb	r3, [r3, #0]
 80018f0:	2b03      	cmp	r3, #3
 80018f2:	f200 80b7 	bhi.w	8001a64 <main+0x5ec>
 80018f6:	a201      	add	r2, pc, #4	@ (adr r2, 80018fc <main+0x484>)
 80018f8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80018fc:	0800190d 	.word	0x0800190d
 8001900:	0800193d 	.word	0x0800193d
 8001904:	0800196d 	.word	0x0800196d
 8001908:	080019a7 	.word	0x080019a7
            case 0:
                LED_Set(0, 0, 1, 0);
 800190c:	2300      	movs	r3, #0
 800190e:	2201      	movs	r2, #1
 8001910:	2100      	movs	r1, #0
 8001912:	2000      	movs	r0, #0
 8001914:	f7ff fc70 	bl	80011f8 <LED_Set>
                Relay_Set(0);
 8001918:	2000      	movs	r0, #0
 800191a:	f7ff fd97 	bl	800144c <Relay_Set>
                Buzzer_Set(0);
 800191e:	2000      	movs	r0, #0
 8001920:	f7ff fc9c 	bl	800125c <Buzzer_Set>
                TIM2->CR1 &= ~TIM_CR1_CEN;
 8001924:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001928:	681b      	ldr	r3, [r3, #0]
 800192a:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800192e:	f023 0301 	bic.w	r3, r3, #1
 8001932:	6013      	str	r3, [r2, #0]
                last_ppm_for_freq = 0;
 8001934:	f04f 0300 	mov.w	r3, #0
 8001938:	67fb      	str	r3, [r7, #124]	@ 0x7c
                break;
 800193a:	e093      	b.n	8001a64 <main+0x5ec>
            case 1:
                LED_Set(0, 1, 0, 0);
 800193c:	2300      	movs	r3, #0
 800193e:	2200      	movs	r2, #0
 8001940:	2101      	movs	r1, #1
 8001942:	2000      	movs	r0, #0
 8001944:	f7ff fc58 	bl	80011f8 <LED_Set>
                Relay_Set(0);
 8001948:	2000      	movs	r0, #0
 800194a:	f7ff fd7f 	bl	800144c <Relay_Set>
                Buzzer_Set(0);
 800194e:	2000      	movs	r0, #0
 8001950:	f7ff fc84 	bl	800125c <Buzzer_Set>
                TIM2->CR1 &= ~TIM_CR1_CEN;
 8001954:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001958:	681b      	ldr	r3, [r3, #0]
 800195a:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800195e:	f023 0301 	bic.w	r3, r3, #1
 8001962:	6013      	str	r3, [r2, #0]
                last_ppm_for_freq = 0;
 8001964:	f04f 0300 	mov.w	r3, #0
 8001968:	67fb      	str	r3, [r7, #124]	@ 0x7c
                break;
 800196a:	e07b      	b.n	8001a64 <main+0x5ec>
            case 2:
                if (last_alert_state != 2) {
 800196c:	f897 308e 	ldrb.w	r3, [r7, #142]	@ 0x8e
 8001970:	2b02      	cmp	r3, #2
 8001972:	d009      	beq.n	8001988 <main+0x510>
                    tim2_blink_state = 0;
 8001974:	4b48      	ldr	r3, [pc, #288]	@ (8001a98 <main+0x620>)
 8001976:	2200      	movs	r2, #0
 8001978:	701a      	strb	r2, [r3, #0]
                    TIM2_Reconfig(4999); // 1 Hz
 800197a:	f241 3087 	movw	r0, #4999	@ 0x1387
 800197e:	f7ff fc83 	bl	8001288 <TIM2_Reconfig>
                    last_ppm_for_freq = 0;
 8001982:	f04f 0300 	mov.w	r3, #0
 8001986:	67fb      	str	r3, [r7, #124]	@ 0x7c
                }
                LED_Set(tim2_blink_state, 0, 0, 0);
 8001988:	4b43      	ldr	r3, [pc, #268]	@ (8001a98 <main+0x620>)
 800198a:	781b      	ldrb	r3, [r3, #0]
 800198c:	b2d8      	uxtb	r0, r3
 800198e:	2300      	movs	r3, #0
 8001990:	2200      	movs	r2, #0
 8001992:	2100      	movs	r1, #0
 8001994:	f7ff fc30 	bl	80011f8 <LED_Set>
                Relay_Set(1);
 8001998:	2001      	movs	r0, #1
 800199a:	f7ff fd57 	bl	800144c <Relay_Set>
                Buzzer_Set(1);
 800199e:	2001      	movs	r0, #1
 80019a0:	f7ff fc5c 	bl	800125c <Buzzer_Set>
                break;
 80019a4:	e05e      	b.n	8001a64 <main+0x5ec>
            case 3:
                if (last_alert_state != 3 || fabs(ppm - last_ppm_for_freq) > 50) {
 80019a6:	f897 308e 	ldrb.w	r3, [r7, #142]	@ 0x8e
 80019aa:	2b03      	cmp	r3, #3
 80019ac:	d10e      	bne.n	80019cc <main+0x554>
 80019ae:	ed97 7a1d 	vldr	s14, [r7, #116]	@ 0x74
 80019b2:	edd7 7a1f 	vldr	s15, [r7, #124]	@ 0x7c
 80019b6:	ee77 7a67 	vsub.f32	s15, s14, s15
 80019ba:	eef0 7ae7 	vabs.f32	s15, s15
 80019be:	ed9f 7a37 	vldr	s14, [pc, #220]	@ 8001a9c <main+0x624>
 80019c2:	eef4 7ac7 	vcmpe.f32	s15, s14
 80019c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80019ca:	dd3c      	ble.n	8001a46 <main+0x5ce>
                    tim2_blink_state = 0;
 80019cc:	4b32      	ldr	r3, [pc, #200]	@ (8001a98 <main+0x620>)
 80019ce:	2200      	movs	r2, #0
 80019d0:	701a      	strb	r2, [r3, #0]
                    float freq = (ppm >= 2000 ? 10.0f : 2.0f + (ppm - 800.0f) * 8.0f / 1200.0f);
 80019d2:	edd7 7a1d 	vldr	s15, [r7, #116]	@ 0x74
 80019d6:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 8001aa0 <main+0x628>
 80019da:	eef4 7ac7 	vcmpe.f32	s15, s14
 80019de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80019e2:	db02      	blt.n	80019ea <main+0x572>
 80019e4:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 80019e8:	e011      	b.n	8001a0e <main+0x596>
 80019ea:	edd7 7a1d 	vldr	s15, [r7, #116]	@ 0x74
 80019ee:	ed9f 7a24 	vldr	s14, [pc, #144]	@ 8001a80 <main+0x608>
 80019f2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80019f6:	eeb2 7a00 	vmov.f32	s14, #32	@ 0x41000000  8.0
 80019fa:	ee27 7a87 	vmul.f32	s14, s15, s14
 80019fe:	eddf 6a29 	vldr	s13, [pc, #164]	@ 8001aa4 <main+0x62c>
 8001a02:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001a06:	eeb0 7a00 	vmov.f32	s14, #0	@ 0x40000000  2.0
 8001a0a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001a0e:	edc7 7a1b 	vstr	s15, [r7, #108]	@ 0x6c
                    uint32_t arr = (uint32_t)((42000000.0f / (2.0f * freq * 4200.0f)) - 1);
 8001a12:	edd7 7a1b 	vldr	s15, [r7, #108]	@ 0x6c
 8001a16:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8001a1a:	ed9f 7a23 	vldr	s14, [pc, #140]	@ 8001aa8 <main+0x630>
 8001a1e:	ee27 7a87 	vmul.f32	s14, s15, s14
 8001a22:	eddf 6a22 	vldr	s13, [pc, #136]	@ 8001aac <main+0x634>
 8001a26:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001a2a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8001a2e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8001a32:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001a36:	ee17 3a90 	vmov	r3, s15
 8001a3a:	66bb      	str	r3, [r7, #104]	@ 0x68
                    TIM2_Reconfig(arr);
 8001a3c:	6eb8      	ldr	r0, [r7, #104]	@ 0x68
 8001a3e:	f7ff fc23 	bl	8001288 <TIM2_Reconfig>
                    last_ppm_for_freq = ppm;
 8001a42:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8001a44:	67fb      	str	r3, [r7, #124]	@ 0x7c
                }
                LED_Set(tim2_blink_state, 0, 0, 0);
 8001a46:	4b14      	ldr	r3, [pc, #80]	@ (8001a98 <main+0x620>)
 8001a48:	781b      	ldrb	r3, [r3, #0]
 8001a4a:	b2d8      	uxtb	r0, r3
 8001a4c:	2300      	movs	r3, #0
 8001a4e:	2200      	movs	r2, #0
 8001a50:	2100      	movs	r1, #0
 8001a52:	f7ff fbd1 	bl	80011f8 <LED_Set>
                Relay_Set(1);
 8001a56:	2001      	movs	r0, #1
 8001a58:	f7ff fcf8 	bl	800144c <Relay_Set>
                Buzzer_Set(1);
 8001a5c:	2001      	movs	r0, #1
 8001a5e:	f7ff fbfd 	bl	800125c <Buzzer_Set>
                break;
 8001a62:	bf00      	nop
        }

        delay_ms(50);
 8001a64:	2032      	movs	r0, #50	@ 0x32
 8001a66:	f7ff f8c5 	bl	8000bf4 <delay_ms>
    while (1) {
 8001a6a:	e581      	b.n	8001570 <main+0xf8>
 8001a6c:	20000000 	.word	0x20000000
 8001a70:	08004a20 	.word	0x08004a20
 8001a74:	08004a2c 	.word	0x08004a2c
 8001a78:	200001ec 	.word	0x200001ec
 8001a7c:	08004aa8 	.word	0x08004aa8
 8001a80:	44480000 	.word	0x44480000
 8001a84:	200001e8 	.word	0x200001e8
 8001a88:	43fa0000 	.word	0x43fa0000
 8001a8c:	43960000 	.word	0x43960000
 8001a90:	08004ab4 	.word	0x08004ab4
 8001a94:	08004abc 	.word	0x08004abc
 8001a98:	200001f0 	.word	0x200001f0
 8001a9c:	42480000 	.word	0x42480000
 8001aa0:	44fa0000 	.word	0x44fa0000
 8001aa4:	44960000 	.word	0x44960000
 8001aa8:	45834000 	.word	0x45834000
 8001aac:	4c2037a0 	.word	0x4c2037a0

08001ab0 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001ab0:	b480      	push	{r7}
 8001ab2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001ab4:	bf00      	nop
 8001ab6:	e7fd      	b.n	8001ab4 <NMI_Handler+0x4>

08001ab8 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001ab8:	b480      	push	{r7}
 8001aba:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001abc:	bf00      	nop
 8001abe:	e7fd      	b.n	8001abc <HardFault_Handler+0x4>

08001ac0 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001ac0:	b480      	push	{r7}
 8001ac2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001ac4:	bf00      	nop
 8001ac6:	e7fd      	b.n	8001ac4 <MemManage_Handler+0x4>

08001ac8 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001ac8:	b480      	push	{r7}
 8001aca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001acc:	bf00      	nop
 8001ace:	e7fd      	b.n	8001acc <BusFault_Handler+0x4>

08001ad0 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001ad0:	b480      	push	{r7}
 8001ad2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001ad4:	bf00      	nop
 8001ad6:	e7fd      	b.n	8001ad4 <UsageFault_Handler+0x4>

08001ad8 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001ad8:	b480      	push	{r7}
 8001ada:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001adc:	bf00      	nop
 8001ade:	46bd      	mov	sp, r7
 8001ae0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ae4:	4770      	bx	lr

08001ae6 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001ae6:	b480      	push	{r7}
 8001ae8:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001aea:	bf00      	nop
 8001aec:	46bd      	mov	sp, r7
 8001aee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001af2:	4770      	bx	lr

08001af4 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001af4:	b480      	push	{r7}
 8001af6:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001af8:	bf00      	nop
 8001afa:	46bd      	mov	sp, r7
 8001afc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b00:	4770      	bx	lr

08001b02 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001b02:	b480      	push	{r7}
 8001b04:	af00      	add	r7, sp, #0
  return 1;
 8001b06:	2301      	movs	r3, #1
}
 8001b08:	4618      	mov	r0, r3
 8001b0a:	46bd      	mov	sp, r7
 8001b0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b10:	4770      	bx	lr

08001b12 <_kill>:

int _kill(int pid, int sig)
{
 8001b12:	b580      	push	{r7, lr}
 8001b14:	b082      	sub	sp, #8
 8001b16:	af00      	add	r7, sp, #0
 8001b18:	6078      	str	r0, [r7, #4]
 8001b1a:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8001b1c:	f000 fed6 	bl	80028cc <__errno>
 8001b20:	4603      	mov	r3, r0
 8001b22:	2216      	movs	r2, #22
 8001b24:	601a      	str	r2, [r3, #0]
  return -1;
 8001b26:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001b2a:	4618      	mov	r0, r3
 8001b2c:	3708      	adds	r7, #8
 8001b2e:	46bd      	mov	sp, r7
 8001b30:	bd80      	pop	{r7, pc}

08001b32 <_exit>:

void _exit (int status)
{
 8001b32:	b580      	push	{r7, lr}
 8001b34:	b082      	sub	sp, #8
 8001b36:	af00      	add	r7, sp, #0
 8001b38:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8001b3a:	f04f 31ff 	mov.w	r1, #4294967295
 8001b3e:	6878      	ldr	r0, [r7, #4]
 8001b40:	f7ff ffe7 	bl	8001b12 <_kill>
  while (1) {}    /* Make sure we hang here */
 8001b44:	bf00      	nop
 8001b46:	e7fd      	b.n	8001b44 <_exit+0x12>

08001b48 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001b48:	b580      	push	{r7, lr}
 8001b4a:	b086      	sub	sp, #24
 8001b4c:	af00      	add	r7, sp, #0
 8001b4e:	60f8      	str	r0, [r7, #12]
 8001b50:	60b9      	str	r1, [r7, #8]
 8001b52:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001b54:	2300      	movs	r3, #0
 8001b56:	617b      	str	r3, [r7, #20]
 8001b58:	e00a      	b.n	8001b70 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8001b5a:	f3af 8000 	nop.w
 8001b5e:	4601      	mov	r1, r0
 8001b60:	68bb      	ldr	r3, [r7, #8]
 8001b62:	1c5a      	adds	r2, r3, #1
 8001b64:	60ba      	str	r2, [r7, #8]
 8001b66:	b2ca      	uxtb	r2, r1
 8001b68:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001b6a:	697b      	ldr	r3, [r7, #20]
 8001b6c:	3301      	adds	r3, #1
 8001b6e:	617b      	str	r3, [r7, #20]
 8001b70:	697a      	ldr	r2, [r7, #20]
 8001b72:	687b      	ldr	r3, [r7, #4]
 8001b74:	429a      	cmp	r2, r3
 8001b76:	dbf0      	blt.n	8001b5a <_read+0x12>
  }

  return len;
 8001b78:	687b      	ldr	r3, [r7, #4]
}
 8001b7a:	4618      	mov	r0, r3
 8001b7c:	3718      	adds	r7, #24
 8001b7e:	46bd      	mov	sp, r7
 8001b80:	bd80      	pop	{r7, pc}

08001b82 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001b82:	b580      	push	{r7, lr}
 8001b84:	b086      	sub	sp, #24
 8001b86:	af00      	add	r7, sp, #0
 8001b88:	60f8      	str	r0, [r7, #12]
 8001b8a:	60b9      	str	r1, [r7, #8]
 8001b8c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001b8e:	2300      	movs	r3, #0
 8001b90:	617b      	str	r3, [r7, #20]
 8001b92:	e009      	b.n	8001ba8 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8001b94:	68bb      	ldr	r3, [r7, #8]
 8001b96:	1c5a      	adds	r2, r3, #1
 8001b98:	60ba      	str	r2, [r7, #8]
 8001b9a:	781b      	ldrb	r3, [r3, #0]
 8001b9c:	4618      	mov	r0, r3
 8001b9e:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001ba2:	697b      	ldr	r3, [r7, #20]
 8001ba4:	3301      	adds	r3, #1
 8001ba6:	617b      	str	r3, [r7, #20]
 8001ba8:	697a      	ldr	r2, [r7, #20]
 8001baa:	687b      	ldr	r3, [r7, #4]
 8001bac:	429a      	cmp	r2, r3
 8001bae:	dbf1      	blt.n	8001b94 <_write+0x12>
  }
  return len;
 8001bb0:	687b      	ldr	r3, [r7, #4]
}
 8001bb2:	4618      	mov	r0, r3
 8001bb4:	3718      	adds	r7, #24
 8001bb6:	46bd      	mov	sp, r7
 8001bb8:	bd80      	pop	{r7, pc}

08001bba <_close>:

int _close(int file)
{
 8001bba:	b480      	push	{r7}
 8001bbc:	b083      	sub	sp, #12
 8001bbe:	af00      	add	r7, sp, #0
 8001bc0:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8001bc2:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001bc6:	4618      	mov	r0, r3
 8001bc8:	370c      	adds	r7, #12
 8001bca:	46bd      	mov	sp, r7
 8001bcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bd0:	4770      	bx	lr

08001bd2 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001bd2:	b480      	push	{r7}
 8001bd4:	b083      	sub	sp, #12
 8001bd6:	af00      	add	r7, sp, #0
 8001bd8:	6078      	str	r0, [r7, #4]
 8001bda:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001bdc:	683b      	ldr	r3, [r7, #0]
 8001bde:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001be2:	605a      	str	r2, [r3, #4]
  return 0;
 8001be4:	2300      	movs	r3, #0
}
 8001be6:	4618      	mov	r0, r3
 8001be8:	370c      	adds	r7, #12
 8001bea:	46bd      	mov	sp, r7
 8001bec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bf0:	4770      	bx	lr

08001bf2 <_isatty>:

int _isatty(int file)
{
 8001bf2:	b480      	push	{r7}
 8001bf4:	b083      	sub	sp, #12
 8001bf6:	af00      	add	r7, sp, #0
 8001bf8:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8001bfa:	2301      	movs	r3, #1
}
 8001bfc:	4618      	mov	r0, r3
 8001bfe:	370c      	adds	r7, #12
 8001c00:	46bd      	mov	sp, r7
 8001c02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c06:	4770      	bx	lr

08001c08 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001c08:	b480      	push	{r7}
 8001c0a:	b085      	sub	sp, #20
 8001c0c:	af00      	add	r7, sp, #0
 8001c0e:	60f8      	str	r0, [r7, #12]
 8001c10:	60b9      	str	r1, [r7, #8]
 8001c12:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8001c14:	2300      	movs	r3, #0
}
 8001c16:	4618      	mov	r0, r3
 8001c18:	3714      	adds	r7, #20
 8001c1a:	46bd      	mov	sp, r7
 8001c1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c20:	4770      	bx	lr
	...

08001c24 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001c24:	b580      	push	{r7, lr}
 8001c26:	b086      	sub	sp, #24
 8001c28:	af00      	add	r7, sp, #0
 8001c2a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001c2c:	4a14      	ldr	r2, [pc, #80]	@ (8001c80 <_sbrk+0x5c>)
 8001c2e:	4b15      	ldr	r3, [pc, #84]	@ (8001c84 <_sbrk+0x60>)
 8001c30:	1ad3      	subs	r3, r2, r3
 8001c32:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001c34:	697b      	ldr	r3, [r7, #20]
 8001c36:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001c38:	4b13      	ldr	r3, [pc, #76]	@ (8001c88 <_sbrk+0x64>)
 8001c3a:	681b      	ldr	r3, [r3, #0]
 8001c3c:	2b00      	cmp	r3, #0
 8001c3e:	d102      	bne.n	8001c46 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001c40:	4b11      	ldr	r3, [pc, #68]	@ (8001c88 <_sbrk+0x64>)
 8001c42:	4a12      	ldr	r2, [pc, #72]	@ (8001c8c <_sbrk+0x68>)
 8001c44:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001c46:	4b10      	ldr	r3, [pc, #64]	@ (8001c88 <_sbrk+0x64>)
 8001c48:	681a      	ldr	r2, [r3, #0]
 8001c4a:	687b      	ldr	r3, [r7, #4]
 8001c4c:	4413      	add	r3, r2
 8001c4e:	693a      	ldr	r2, [r7, #16]
 8001c50:	429a      	cmp	r2, r3
 8001c52:	d207      	bcs.n	8001c64 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001c54:	f000 fe3a 	bl	80028cc <__errno>
 8001c58:	4603      	mov	r3, r0
 8001c5a:	220c      	movs	r2, #12
 8001c5c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001c5e:	f04f 33ff 	mov.w	r3, #4294967295
 8001c62:	e009      	b.n	8001c78 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001c64:	4b08      	ldr	r3, [pc, #32]	@ (8001c88 <_sbrk+0x64>)
 8001c66:	681b      	ldr	r3, [r3, #0]
 8001c68:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001c6a:	4b07      	ldr	r3, [pc, #28]	@ (8001c88 <_sbrk+0x64>)
 8001c6c:	681a      	ldr	r2, [r3, #0]
 8001c6e:	687b      	ldr	r3, [r7, #4]
 8001c70:	4413      	add	r3, r2
 8001c72:	4a05      	ldr	r2, [pc, #20]	@ (8001c88 <_sbrk+0x64>)
 8001c74:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001c76:	68fb      	ldr	r3, [r7, #12]
}
 8001c78:	4618      	mov	r0, r3
 8001c7a:	3718      	adds	r7, #24
 8001c7c:	46bd      	mov	sp, r7
 8001c7e:	bd80      	pop	{r7, pc}
 8001c80:	20018000 	.word	0x20018000
 8001c84:	00000400 	.word	0x00000400
 8001c88:	200001f8 	.word	0x200001f8
 8001c8c:	20000348 	.word	0x20000348

08001c90 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001c90:	b480      	push	{r7}
 8001c92:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001c94:	4b06      	ldr	r3, [pc, #24]	@ (8001cb0 <SystemInit+0x20>)
 8001c96:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001c9a:	4a05      	ldr	r2, [pc, #20]	@ (8001cb0 <SystemInit+0x20>)
 8001c9c:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001ca0:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001ca4:	bf00      	nop
 8001ca6:	46bd      	mov	sp, r7
 8001ca8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cac:	4770      	bx	lr
 8001cae:	bf00      	nop
 8001cb0:	e000ed00 	.word	0xe000ed00

08001cb4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 8001cb4:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001cec <LoopFillZerobss+0xe>

/* Call the clock system initialization function.*/
  bl  SystemInit  
 8001cb8:	f7ff ffea 	bl	8001c90 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8001cbc:	480c      	ldr	r0, [pc, #48]	@ (8001cf0 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8001cbe:	490d      	ldr	r1, [pc, #52]	@ (8001cf4 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8001cc0:	4a0d      	ldr	r2, [pc, #52]	@ (8001cf8 <LoopFillZerobss+0x1a>)
  movs r3, #0
 8001cc2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001cc4:	e002      	b.n	8001ccc <LoopCopyDataInit>

08001cc6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001cc6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001cc8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001cca:	3304      	adds	r3, #4

08001ccc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001ccc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001cce:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001cd0:	d3f9      	bcc.n	8001cc6 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001cd2:	4a0a      	ldr	r2, [pc, #40]	@ (8001cfc <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8001cd4:	4c0a      	ldr	r4, [pc, #40]	@ (8001d00 <LoopFillZerobss+0x22>)
  movs r3, #0
 8001cd6:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001cd8:	e001      	b.n	8001cde <LoopFillZerobss>

08001cda <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001cda:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001cdc:	3204      	adds	r2, #4

08001cde <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001cde:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001ce0:	d3fb      	bcc.n	8001cda <FillZerobss>
 
/* Call static constructors */
    bl __libc_init_array
 8001ce2:	f000 fdf9 	bl	80028d8 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8001ce6:	f7ff fbc7 	bl	8001478 <main>
  bx  lr    
 8001cea:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 8001cec:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8001cf0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001cf4:	200001cc 	.word	0x200001cc
  ldr r2, =_sidata
 8001cf8:	08004e44 	.word	0x08004e44
  ldr r2, =_sbss
 8001cfc:	200001cc 	.word	0x200001cc
  ldr r4, =_ebss
 8001d00:	20000348 	.word	0x20000348

08001d04 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001d04:	e7fe      	b.n	8001d04 <ADC_IRQHandler>

08001d06 <__cvt>:
 8001d06:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001d0a:	ec57 6b10 	vmov	r6, r7, d0
 8001d0e:	2f00      	cmp	r7, #0
 8001d10:	460c      	mov	r4, r1
 8001d12:	4619      	mov	r1, r3
 8001d14:	463b      	mov	r3, r7
 8001d16:	bfbb      	ittet	lt
 8001d18:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 8001d1c:	461f      	movlt	r7, r3
 8001d1e:	2300      	movge	r3, #0
 8001d20:	232d      	movlt	r3, #45	@ 0x2d
 8001d22:	700b      	strb	r3, [r1, #0]
 8001d24:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001d26:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8001d2a:	4691      	mov	r9, r2
 8001d2c:	f023 0820 	bic.w	r8, r3, #32
 8001d30:	bfbc      	itt	lt
 8001d32:	4632      	movlt	r2, r6
 8001d34:	4616      	movlt	r6, r2
 8001d36:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001d3a:	d005      	beq.n	8001d48 <__cvt+0x42>
 8001d3c:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8001d40:	d100      	bne.n	8001d44 <__cvt+0x3e>
 8001d42:	3401      	adds	r4, #1
 8001d44:	2102      	movs	r1, #2
 8001d46:	e000      	b.n	8001d4a <__cvt+0x44>
 8001d48:	2103      	movs	r1, #3
 8001d4a:	ab03      	add	r3, sp, #12
 8001d4c:	9301      	str	r3, [sp, #4]
 8001d4e:	ab02      	add	r3, sp, #8
 8001d50:	9300      	str	r3, [sp, #0]
 8001d52:	ec47 6b10 	vmov	d0, r6, r7
 8001d56:	4653      	mov	r3, sl
 8001d58:	4622      	mov	r2, r4
 8001d5a:	f000 fe6d 	bl	8002a38 <_dtoa_r>
 8001d5e:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8001d62:	4605      	mov	r5, r0
 8001d64:	d119      	bne.n	8001d9a <__cvt+0x94>
 8001d66:	f019 0f01 	tst.w	r9, #1
 8001d6a:	d00e      	beq.n	8001d8a <__cvt+0x84>
 8001d6c:	eb00 0904 	add.w	r9, r0, r4
 8001d70:	2200      	movs	r2, #0
 8001d72:	2300      	movs	r3, #0
 8001d74:	4630      	mov	r0, r6
 8001d76:	4639      	mov	r1, r7
 8001d78:	f7fe feae 	bl	8000ad8 <__aeabi_dcmpeq>
 8001d7c:	b108      	cbz	r0, 8001d82 <__cvt+0x7c>
 8001d7e:	f8cd 900c 	str.w	r9, [sp, #12]
 8001d82:	2230      	movs	r2, #48	@ 0x30
 8001d84:	9b03      	ldr	r3, [sp, #12]
 8001d86:	454b      	cmp	r3, r9
 8001d88:	d31e      	bcc.n	8001dc8 <__cvt+0xc2>
 8001d8a:	9b03      	ldr	r3, [sp, #12]
 8001d8c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8001d8e:	1b5b      	subs	r3, r3, r5
 8001d90:	4628      	mov	r0, r5
 8001d92:	6013      	str	r3, [r2, #0]
 8001d94:	b004      	add	sp, #16
 8001d96:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001d9a:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001d9e:	eb00 0904 	add.w	r9, r0, r4
 8001da2:	d1e5      	bne.n	8001d70 <__cvt+0x6a>
 8001da4:	7803      	ldrb	r3, [r0, #0]
 8001da6:	2b30      	cmp	r3, #48	@ 0x30
 8001da8:	d10a      	bne.n	8001dc0 <__cvt+0xba>
 8001daa:	2200      	movs	r2, #0
 8001dac:	2300      	movs	r3, #0
 8001dae:	4630      	mov	r0, r6
 8001db0:	4639      	mov	r1, r7
 8001db2:	f7fe fe91 	bl	8000ad8 <__aeabi_dcmpeq>
 8001db6:	b918      	cbnz	r0, 8001dc0 <__cvt+0xba>
 8001db8:	f1c4 0401 	rsb	r4, r4, #1
 8001dbc:	f8ca 4000 	str.w	r4, [sl]
 8001dc0:	f8da 3000 	ldr.w	r3, [sl]
 8001dc4:	4499      	add	r9, r3
 8001dc6:	e7d3      	b.n	8001d70 <__cvt+0x6a>
 8001dc8:	1c59      	adds	r1, r3, #1
 8001dca:	9103      	str	r1, [sp, #12]
 8001dcc:	701a      	strb	r2, [r3, #0]
 8001dce:	e7d9      	b.n	8001d84 <__cvt+0x7e>

08001dd0 <__exponent>:
 8001dd0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001dd2:	2900      	cmp	r1, #0
 8001dd4:	bfba      	itte	lt
 8001dd6:	4249      	neglt	r1, r1
 8001dd8:	232d      	movlt	r3, #45	@ 0x2d
 8001dda:	232b      	movge	r3, #43	@ 0x2b
 8001ddc:	2909      	cmp	r1, #9
 8001dde:	7002      	strb	r2, [r0, #0]
 8001de0:	7043      	strb	r3, [r0, #1]
 8001de2:	dd29      	ble.n	8001e38 <__exponent+0x68>
 8001de4:	f10d 0307 	add.w	r3, sp, #7
 8001de8:	461d      	mov	r5, r3
 8001dea:	270a      	movs	r7, #10
 8001dec:	461a      	mov	r2, r3
 8001dee:	fbb1 f6f7 	udiv	r6, r1, r7
 8001df2:	fb07 1416 	mls	r4, r7, r6, r1
 8001df6:	3430      	adds	r4, #48	@ 0x30
 8001df8:	f802 4c01 	strb.w	r4, [r2, #-1]
 8001dfc:	460c      	mov	r4, r1
 8001dfe:	2c63      	cmp	r4, #99	@ 0x63
 8001e00:	f103 33ff 	add.w	r3, r3, #4294967295
 8001e04:	4631      	mov	r1, r6
 8001e06:	dcf1      	bgt.n	8001dec <__exponent+0x1c>
 8001e08:	3130      	adds	r1, #48	@ 0x30
 8001e0a:	1e94      	subs	r4, r2, #2
 8001e0c:	f803 1c01 	strb.w	r1, [r3, #-1]
 8001e10:	1c41      	adds	r1, r0, #1
 8001e12:	4623      	mov	r3, r4
 8001e14:	42ab      	cmp	r3, r5
 8001e16:	d30a      	bcc.n	8001e2e <__exponent+0x5e>
 8001e18:	f10d 0309 	add.w	r3, sp, #9
 8001e1c:	1a9b      	subs	r3, r3, r2
 8001e1e:	42ac      	cmp	r4, r5
 8001e20:	bf88      	it	hi
 8001e22:	2300      	movhi	r3, #0
 8001e24:	3302      	adds	r3, #2
 8001e26:	4403      	add	r3, r0
 8001e28:	1a18      	subs	r0, r3, r0
 8001e2a:	b003      	add	sp, #12
 8001e2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e2e:	f813 6b01 	ldrb.w	r6, [r3], #1
 8001e32:	f801 6f01 	strb.w	r6, [r1, #1]!
 8001e36:	e7ed      	b.n	8001e14 <__exponent+0x44>
 8001e38:	2330      	movs	r3, #48	@ 0x30
 8001e3a:	3130      	adds	r1, #48	@ 0x30
 8001e3c:	7083      	strb	r3, [r0, #2]
 8001e3e:	70c1      	strb	r1, [r0, #3]
 8001e40:	1d03      	adds	r3, r0, #4
 8001e42:	e7f1      	b.n	8001e28 <__exponent+0x58>

08001e44 <_printf_float>:
 8001e44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001e48:	b08d      	sub	sp, #52	@ 0x34
 8001e4a:	460c      	mov	r4, r1
 8001e4c:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8001e50:	4616      	mov	r6, r2
 8001e52:	461f      	mov	r7, r3
 8001e54:	4605      	mov	r5, r0
 8001e56:	f000 fcef 	bl	8002838 <_localeconv_r>
 8001e5a:	6803      	ldr	r3, [r0, #0]
 8001e5c:	9304      	str	r3, [sp, #16]
 8001e5e:	4618      	mov	r0, r3
 8001e60:	f7fe fa0e 	bl	8000280 <strlen>
 8001e64:	2300      	movs	r3, #0
 8001e66:	930a      	str	r3, [sp, #40]	@ 0x28
 8001e68:	f8d8 3000 	ldr.w	r3, [r8]
 8001e6c:	9005      	str	r0, [sp, #20]
 8001e6e:	3307      	adds	r3, #7
 8001e70:	f023 0307 	bic.w	r3, r3, #7
 8001e74:	f103 0208 	add.w	r2, r3, #8
 8001e78:	f894 a018 	ldrb.w	sl, [r4, #24]
 8001e7c:	f8d4 b000 	ldr.w	fp, [r4]
 8001e80:	f8c8 2000 	str.w	r2, [r8]
 8001e84:	e9d3 8900 	ldrd	r8, r9, [r3]
 8001e88:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8001e8c:	9307      	str	r3, [sp, #28]
 8001e8e:	f8cd 8018 	str.w	r8, [sp, #24]
 8001e92:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8001e96:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001e9a:	4b9c      	ldr	r3, [pc, #624]	@ (800210c <_printf_float+0x2c8>)
 8001e9c:	f04f 32ff 	mov.w	r2, #4294967295
 8001ea0:	f7fe fe4c 	bl	8000b3c <__aeabi_dcmpun>
 8001ea4:	bb70      	cbnz	r0, 8001f04 <_printf_float+0xc0>
 8001ea6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001eaa:	4b98      	ldr	r3, [pc, #608]	@ (800210c <_printf_float+0x2c8>)
 8001eac:	f04f 32ff 	mov.w	r2, #4294967295
 8001eb0:	f7fe fe26 	bl	8000b00 <__aeabi_dcmple>
 8001eb4:	bb30      	cbnz	r0, 8001f04 <_printf_float+0xc0>
 8001eb6:	2200      	movs	r2, #0
 8001eb8:	2300      	movs	r3, #0
 8001eba:	4640      	mov	r0, r8
 8001ebc:	4649      	mov	r1, r9
 8001ebe:	f7fe fe15 	bl	8000aec <__aeabi_dcmplt>
 8001ec2:	b110      	cbz	r0, 8001eca <_printf_float+0x86>
 8001ec4:	232d      	movs	r3, #45	@ 0x2d
 8001ec6:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001eca:	4a91      	ldr	r2, [pc, #580]	@ (8002110 <_printf_float+0x2cc>)
 8001ecc:	4b91      	ldr	r3, [pc, #580]	@ (8002114 <_printf_float+0x2d0>)
 8001ece:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8001ed2:	bf8c      	ite	hi
 8001ed4:	4690      	movhi	r8, r2
 8001ed6:	4698      	movls	r8, r3
 8001ed8:	2303      	movs	r3, #3
 8001eda:	6123      	str	r3, [r4, #16]
 8001edc:	f02b 0304 	bic.w	r3, fp, #4
 8001ee0:	6023      	str	r3, [r4, #0]
 8001ee2:	f04f 0900 	mov.w	r9, #0
 8001ee6:	9700      	str	r7, [sp, #0]
 8001ee8:	4633      	mov	r3, r6
 8001eea:	aa0b      	add	r2, sp, #44	@ 0x2c
 8001eec:	4621      	mov	r1, r4
 8001eee:	4628      	mov	r0, r5
 8001ef0:	f000 f9d2 	bl	8002298 <_printf_common>
 8001ef4:	3001      	adds	r0, #1
 8001ef6:	f040 808d 	bne.w	8002014 <_printf_float+0x1d0>
 8001efa:	f04f 30ff 	mov.w	r0, #4294967295
 8001efe:	b00d      	add	sp, #52	@ 0x34
 8001f00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001f04:	4642      	mov	r2, r8
 8001f06:	464b      	mov	r3, r9
 8001f08:	4640      	mov	r0, r8
 8001f0a:	4649      	mov	r1, r9
 8001f0c:	f7fe fe16 	bl	8000b3c <__aeabi_dcmpun>
 8001f10:	b140      	cbz	r0, 8001f24 <_printf_float+0xe0>
 8001f12:	464b      	mov	r3, r9
 8001f14:	2b00      	cmp	r3, #0
 8001f16:	bfbc      	itt	lt
 8001f18:	232d      	movlt	r3, #45	@ 0x2d
 8001f1a:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8001f1e:	4a7e      	ldr	r2, [pc, #504]	@ (8002118 <_printf_float+0x2d4>)
 8001f20:	4b7e      	ldr	r3, [pc, #504]	@ (800211c <_printf_float+0x2d8>)
 8001f22:	e7d4      	b.n	8001ece <_printf_float+0x8a>
 8001f24:	6863      	ldr	r3, [r4, #4]
 8001f26:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 8001f2a:	9206      	str	r2, [sp, #24]
 8001f2c:	1c5a      	adds	r2, r3, #1
 8001f2e:	d13b      	bne.n	8001fa8 <_printf_float+0x164>
 8001f30:	2306      	movs	r3, #6
 8001f32:	6063      	str	r3, [r4, #4]
 8001f34:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 8001f38:	2300      	movs	r3, #0
 8001f3a:	6022      	str	r2, [r4, #0]
 8001f3c:	9303      	str	r3, [sp, #12]
 8001f3e:	ab0a      	add	r3, sp, #40	@ 0x28
 8001f40:	e9cd a301 	strd	sl, r3, [sp, #4]
 8001f44:	ab09      	add	r3, sp, #36	@ 0x24
 8001f46:	9300      	str	r3, [sp, #0]
 8001f48:	6861      	ldr	r1, [r4, #4]
 8001f4a:	ec49 8b10 	vmov	d0, r8, r9
 8001f4e:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 8001f52:	4628      	mov	r0, r5
 8001f54:	f7ff fed7 	bl	8001d06 <__cvt>
 8001f58:	9b06      	ldr	r3, [sp, #24]
 8001f5a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8001f5c:	2b47      	cmp	r3, #71	@ 0x47
 8001f5e:	4680      	mov	r8, r0
 8001f60:	d129      	bne.n	8001fb6 <_printf_float+0x172>
 8001f62:	1cc8      	adds	r0, r1, #3
 8001f64:	db02      	blt.n	8001f6c <_printf_float+0x128>
 8001f66:	6863      	ldr	r3, [r4, #4]
 8001f68:	4299      	cmp	r1, r3
 8001f6a:	dd41      	ble.n	8001ff0 <_printf_float+0x1ac>
 8001f6c:	f1aa 0a02 	sub.w	sl, sl, #2
 8001f70:	fa5f fa8a 	uxtb.w	sl, sl
 8001f74:	3901      	subs	r1, #1
 8001f76:	4652      	mov	r2, sl
 8001f78:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8001f7c:	9109      	str	r1, [sp, #36]	@ 0x24
 8001f7e:	f7ff ff27 	bl	8001dd0 <__exponent>
 8001f82:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8001f84:	1813      	adds	r3, r2, r0
 8001f86:	2a01      	cmp	r2, #1
 8001f88:	4681      	mov	r9, r0
 8001f8a:	6123      	str	r3, [r4, #16]
 8001f8c:	dc02      	bgt.n	8001f94 <_printf_float+0x150>
 8001f8e:	6822      	ldr	r2, [r4, #0]
 8001f90:	07d2      	lsls	r2, r2, #31
 8001f92:	d501      	bpl.n	8001f98 <_printf_float+0x154>
 8001f94:	3301      	adds	r3, #1
 8001f96:	6123      	str	r3, [r4, #16]
 8001f98:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 8001f9c:	2b00      	cmp	r3, #0
 8001f9e:	d0a2      	beq.n	8001ee6 <_printf_float+0xa2>
 8001fa0:	232d      	movs	r3, #45	@ 0x2d
 8001fa2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001fa6:	e79e      	b.n	8001ee6 <_printf_float+0xa2>
 8001fa8:	9a06      	ldr	r2, [sp, #24]
 8001faa:	2a47      	cmp	r2, #71	@ 0x47
 8001fac:	d1c2      	bne.n	8001f34 <_printf_float+0xf0>
 8001fae:	2b00      	cmp	r3, #0
 8001fb0:	d1c0      	bne.n	8001f34 <_printf_float+0xf0>
 8001fb2:	2301      	movs	r3, #1
 8001fb4:	e7bd      	b.n	8001f32 <_printf_float+0xee>
 8001fb6:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8001fba:	d9db      	bls.n	8001f74 <_printf_float+0x130>
 8001fbc:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8001fc0:	d118      	bne.n	8001ff4 <_printf_float+0x1b0>
 8001fc2:	2900      	cmp	r1, #0
 8001fc4:	6863      	ldr	r3, [r4, #4]
 8001fc6:	dd0b      	ble.n	8001fe0 <_printf_float+0x19c>
 8001fc8:	6121      	str	r1, [r4, #16]
 8001fca:	b913      	cbnz	r3, 8001fd2 <_printf_float+0x18e>
 8001fcc:	6822      	ldr	r2, [r4, #0]
 8001fce:	07d0      	lsls	r0, r2, #31
 8001fd0:	d502      	bpl.n	8001fd8 <_printf_float+0x194>
 8001fd2:	3301      	adds	r3, #1
 8001fd4:	440b      	add	r3, r1
 8001fd6:	6123      	str	r3, [r4, #16]
 8001fd8:	65a1      	str	r1, [r4, #88]	@ 0x58
 8001fda:	f04f 0900 	mov.w	r9, #0
 8001fde:	e7db      	b.n	8001f98 <_printf_float+0x154>
 8001fe0:	b913      	cbnz	r3, 8001fe8 <_printf_float+0x1a4>
 8001fe2:	6822      	ldr	r2, [r4, #0]
 8001fe4:	07d2      	lsls	r2, r2, #31
 8001fe6:	d501      	bpl.n	8001fec <_printf_float+0x1a8>
 8001fe8:	3302      	adds	r3, #2
 8001fea:	e7f4      	b.n	8001fd6 <_printf_float+0x192>
 8001fec:	2301      	movs	r3, #1
 8001fee:	e7f2      	b.n	8001fd6 <_printf_float+0x192>
 8001ff0:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8001ff4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8001ff6:	4299      	cmp	r1, r3
 8001ff8:	db05      	blt.n	8002006 <_printf_float+0x1c2>
 8001ffa:	6823      	ldr	r3, [r4, #0]
 8001ffc:	6121      	str	r1, [r4, #16]
 8001ffe:	07d8      	lsls	r0, r3, #31
 8002000:	d5ea      	bpl.n	8001fd8 <_printf_float+0x194>
 8002002:	1c4b      	adds	r3, r1, #1
 8002004:	e7e7      	b.n	8001fd6 <_printf_float+0x192>
 8002006:	2900      	cmp	r1, #0
 8002008:	bfd4      	ite	le
 800200a:	f1c1 0202 	rsble	r2, r1, #2
 800200e:	2201      	movgt	r2, #1
 8002010:	4413      	add	r3, r2
 8002012:	e7e0      	b.n	8001fd6 <_printf_float+0x192>
 8002014:	6823      	ldr	r3, [r4, #0]
 8002016:	055a      	lsls	r2, r3, #21
 8002018:	d407      	bmi.n	800202a <_printf_float+0x1e6>
 800201a:	6923      	ldr	r3, [r4, #16]
 800201c:	4642      	mov	r2, r8
 800201e:	4631      	mov	r1, r6
 8002020:	4628      	mov	r0, r5
 8002022:	47b8      	blx	r7
 8002024:	3001      	adds	r0, #1
 8002026:	d12b      	bne.n	8002080 <_printf_float+0x23c>
 8002028:	e767      	b.n	8001efa <_printf_float+0xb6>
 800202a:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800202e:	f240 80dd 	bls.w	80021ec <_printf_float+0x3a8>
 8002032:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8002036:	2200      	movs	r2, #0
 8002038:	2300      	movs	r3, #0
 800203a:	f7fe fd4d 	bl	8000ad8 <__aeabi_dcmpeq>
 800203e:	2800      	cmp	r0, #0
 8002040:	d033      	beq.n	80020aa <_printf_float+0x266>
 8002042:	4a37      	ldr	r2, [pc, #220]	@ (8002120 <_printf_float+0x2dc>)
 8002044:	2301      	movs	r3, #1
 8002046:	4631      	mov	r1, r6
 8002048:	4628      	mov	r0, r5
 800204a:	47b8      	blx	r7
 800204c:	3001      	adds	r0, #1
 800204e:	f43f af54 	beq.w	8001efa <_printf_float+0xb6>
 8002052:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 8002056:	4543      	cmp	r3, r8
 8002058:	db02      	blt.n	8002060 <_printf_float+0x21c>
 800205a:	6823      	ldr	r3, [r4, #0]
 800205c:	07d8      	lsls	r0, r3, #31
 800205e:	d50f      	bpl.n	8002080 <_printf_float+0x23c>
 8002060:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002064:	4631      	mov	r1, r6
 8002066:	4628      	mov	r0, r5
 8002068:	47b8      	blx	r7
 800206a:	3001      	adds	r0, #1
 800206c:	f43f af45 	beq.w	8001efa <_printf_float+0xb6>
 8002070:	f04f 0900 	mov.w	r9, #0
 8002074:	f108 38ff 	add.w	r8, r8, #4294967295
 8002078:	f104 0a1a 	add.w	sl, r4, #26
 800207c:	45c8      	cmp	r8, r9
 800207e:	dc09      	bgt.n	8002094 <_printf_float+0x250>
 8002080:	6823      	ldr	r3, [r4, #0]
 8002082:	079b      	lsls	r3, r3, #30
 8002084:	f100 8103 	bmi.w	800228e <_printf_float+0x44a>
 8002088:	68e0      	ldr	r0, [r4, #12]
 800208a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800208c:	4298      	cmp	r0, r3
 800208e:	bfb8      	it	lt
 8002090:	4618      	movlt	r0, r3
 8002092:	e734      	b.n	8001efe <_printf_float+0xba>
 8002094:	2301      	movs	r3, #1
 8002096:	4652      	mov	r2, sl
 8002098:	4631      	mov	r1, r6
 800209a:	4628      	mov	r0, r5
 800209c:	47b8      	blx	r7
 800209e:	3001      	adds	r0, #1
 80020a0:	f43f af2b 	beq.w	8001efa <_printf_float+0xb6>
 80020a4:	f109 0901 	add.w	r9, r9, #1
 80020a8:	e7e8      	b.n	800207c <_printf_float+0x238>
 80020aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80020ac:	2b00      	cmp	r3, #0
 80020ae:	dc39      	bgt.n	8002124 <_printf_float+0x2e0>
 80020b0:	4a1b      	ldr	r2, [pc, #108]	@ (8002120 <_printf_float+0x2dc>)
 80020b2:	2301      	movs	r3, #1
 80020b4:	4631      	mov	r1, r6
 80020b6:	4628      	mov	r0, r5
 80020b8:	47b8      	blx	r7
 80020ba:	3001      	adds	r0, #1
 80020bc:	f43f af1d 	beq.w	8001efa <_printf_float+0xb6>
 80020c0:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 80020c4:	ea59 0303 	orrs.w	r3, r9, r3
 80020c8:	d102      	bne.n	80020d0 <_printf_float+0x28c>
 80020ca:	6823      	ldr	r3, [r4, #0]
 80020cc:	07d9      	lsls	r1, r3, #31
 80020ce:	d5d7      	bpl.n	8002080 <_printf_float+0x23c>
 80020d0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80020d4:	4631      	mov	r1, r6
 80020d6:	4628      	mov	r0, r5
 80020d8:	47b8      	blx	r7
 80020da:	3001      	adds	r0, #1
 80020dc:	f43f af0d 	beq.w	8001efa <_printf_float+0xb6>
 80020e0:	f04f 0a00 	mov.w	sl, #0
 80020e4:	f104 0b1a 	add.w	fp, r4, #26
 80020e8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80020ea:	425b      	negs	r3, r3
 80020ec:	4553      	cmp	r3, sl
 80020ee:	dc01      	bgt.n	80020f4 <_printf_float+0x2b0>
 80020f0:	464b      	mov	r3, r9
 80020f2:	e793      	b.n	800201c <_printf_float+0x1d8>
 80020f4:	2301      	movs	r3, #1
 80020f6:	465a      	mov	r2, fp
 80020f8:	4631      	mov	r1, r6
 80020fa:	4628      	mov	r0, r5
 80020fc:	47b8      	blx	r7
 80020fe:	3001      	adds	r0, #1
 8002100:	f43f aefb 	beq.w	8001efa <_printf_float+0xb6>
 8002104:	f10a 0a01 	add.w	sl, sl, #1
 8002108:	e7ee      	b.n	80020e8 <_printf_float+0x2a4>
 800210a:	bf00      	nop
 800210c:	7fefffff 	.word	0x7fefffff
 8002110:	08004ac3 	.word	0x08004ac3
 8002114:	08004abf 	.word	0x08004abf
 8002118:	08004acb 	.word	0x08004acb
 800211c:	08004ac7 	.word	0x08004ac7
 8002120:	08004acf 	.word	0x08004acf
 8002124:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8002126:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 800212a:	4553      	cmp	r3, sl
 800212c:	bfa8      	it	ge
 800212e:	4653      	movge	r3, sl
 8002130:	2b00      	cmp	r3, #0
 8002132:	4699      	mov	r9, r3
 8002134:	dc36      	bgt.n	80021a4 <_printf_float+0x360>
 8002136:	f04f 0b00 	mov.w	fp, #0
 800213a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800213e:	f104 021a 	add.w	r2, r4, #26
 8002142:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8002144:	9306      	str	r3, [sp, #24]
 8002146:	eba3 0309 	sub.w	r3, r3, r9
 800214a:	455b      	cmp	r3, fp
 800214c:	dc31      	bgt.n	80021b2 <_printf_float+0x36e>
 800214e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002150:	459a      	cmp	sl, r3
 8002152:	dc3a      	bgt.n	80021ca <_printf_float+0x386>
 8002154:	6823      	ldr	r3, [r4, #0]
 8002156:	07da      	lsls	r2, r3, #31
 8002158:	d437      	bmi.n	80021ca <_printf_float+0x386>
 800215a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800215c:	ebaa 0903 	sub.w	r9, sl, r3
 8002160:	9b06      	ldr	r3, [sp, #24]
 8002162:	ebaa 0303 	sub.w	r3, sl, r3
 8002166:	4599      	cmp	r9, r3
 8002168:	bfa8      	it	ge
 800216a:	4699      	movge	r9, r3
 800216c:	f1b9 0f00 	cmp.w	r9, #0
 8002170:	dc33      	bgt.n	80021da <_printf_float+0x396>
 8002172:	f04f 0800 	mov.w	r8, #0
 8002176:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800217a:	f104 0b1a 	add.w	fp, r4, #26
 800217e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002180:	ebaa 0303 	sub.w	r3, sl, r3
 8002184:	eba3 0309 	sub.w	r3, r3, r9
 8002188:	4543      	cmp	r3, r8
 800218a:	f77f af79 	ble.w	8002080 <_printf_float+0x23c>
 800218e:	2301      	movs	r3, #1
 8002190:	465a      	mov	r2, fp
 8002192:	4631      	mov	r1, r6
 8002194:	4628      	mov	r0, r5
 8002196:	47b8      	blx	r7
 8002198:	3001      	adds	r0, #1
 800219a:	f43f aeae 	beq.w	8001efa <_printf_float+0xb6>
 800219e:	f108 0801 	add.w	r8, r8, #1
 80021a2:	e7ec      	b.n	800217e <_printf_float+0x33a>
 80021a4:	4642      	mov	r2, r8
 80021a6:	4631      	mov	r1, r6
 80021a8:	4628      	mov	r0, r5
 80021aa:	47b8      	blx	r7
 80021ac:	3001      	adds	r0, #1
 80021ae:	d1c2      	bne.n	8002136 <_printf_float+0x2f2>
 80021b0:	e6a3      	b.n	8001efa <_printf_float+0xb6>
 80021b2:	2301      	movs	r3, #1
 80021b4:	4631      	mov	r1, r6
 80021b6:	4628      	mov	r0, r5
 80021b8:	9206      	str	r2, [sp, #24]
 80021ba:	47b8      	blx	r7
 80021bc:	3001      	adds	r0, #1
 80021be:	f43f ae9c 	beq.w	8001efa <_printf_float+0xb6>
 80021c2:	9a06      	ldr	r2, [sp, #24]
 80021c4:	f10b 0b01 	add.w	fp, fp, #1
 80021c8:	e7bb      	b.n	8002142 <_printf_float+0x2fe>
 80021ca:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80021ce:	4631      	mov	r1, r6
 80021d0:	4628      	mov	r0, r5
 80021d2:	47b8      	blx	r7
 80021d4:	3001      	adds	r0, #1
 80021d6:	d1c0      	bne.n	800215a <_printf_float+0x316>
 80021d8:	e68f      	b.n	8001efa <_printf_float+0xb6>
 80021da:	9a06      	ldr	r2, [sp, #24]
 80021dc:	464b      	mov	r3, r9
 80021de:	4442      	add	r2, r8
 80021e0:	4631      	mov	r1, r6
 80021e2:	4628      	mov	r0, r5
 80021e4:	47b8      	blx	r7
 80021e6:	3001      	adds	r0, #1
 80021e8:	d1c3      	bne.n	8002172 <_printf_float+0x32e>
 80021ea:	e686      	b.n	8001efa <_printf_float+0xb6>
 80021ec:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 80021f0:	f1ba 0f01 	cmp.w	sl, #1
 80021f4:	dc01      	bgt.n	80021fa <_printf_float+0x3b6>
 80021f6:	07db      	lsls	r3, r3, #31
 80021f8:	d536      	bpl.n	8002268 <_printf_float+0x424>
 80021fa:	2301      	movs	r3, #1
 80021fc:	4642      	mov	r2, r8
 80021fe:	4631      	mov	r1, r6
 8002200:	4628      	mov	r0, r5
 8002202:	47b8      	blx	r7
 8002204:	3001      	adds	r0, #1
 8002206:	f43f ae78 	beq.w	8001efa <_printf_float+0xb6>
 800220a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800220e:	4631      	mov	r1, r6
 8002210:	4628      	mov	r0, r5
 8002212:	47b8      	blx	r7
 8002214:	3001      	adds	r0, #1
 8002216:	f43f ae70 	beq.w	8001efa <_printf_float+0xb6>
 800221a:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800221e:	2200      	movs	r2, #0
 8002220:	2300      	movs	r3, #0
 8002222:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002226:	f7fe fc57 	bl	8000ad8 <__aeabi_dcmpeq>
 800222a:	b9c0      	cbnz	r0, 800225e <_printf_float+0x41a>
 800222c:	4653      	mov	r3, sl
 800222e:	f108 0201 	add.w	r2, r8, #1
 8002232:	4631      	mov	r1, r6
 8002234:	4628      	mov	r0, r5
 8002236:	47b8      	blx	r7
 8002238:	3001      	adds	r0, #1
 800223a:	d10c      	bne.n	8002256 <_printf_float+0x412>
 800223c:	e65d      	b.n	8001efa <_printf_float+0xb6>
 800223e:	2301      	movs	r3, #1
 8002240:	465a      	mov	r2, fp
 8002242:	4631      	mov	r1, r6
 8002244:	4628      	mov	r0, r5
 8002246:	47b8      	blx	r7
 8002248:	3001      	adds	r0, #1
 800224a:	f43f ae56 	beq.w	8001efa <_printf_float+0xb6>
 800224e:	f108 0801 	add.w	r8, r8, #1
 8002252:	45d0      	cmp	r8, sl
 8002254:	dbf3      	blt.n	800223e <_printf_float+0x3fa>
 8002256:	464b      	mov	r3, r9
 8002258:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 800225c:	e6df      	b.n	800201e <_printf_float+0x1da>
 800225e:	f04f 0800 	mov.w	r8, #0
 8002262:	f104 0b1a 	add.w	fp, r4, #26
 8002266:	e7f4      	b.n	8002252 <_printf_float+0x40e>
 8002268:	2301      	movs	r3, #1
 800226a:	4642      	mov	r2, r8
 800226c:	e7e1      	b.n	8002232 <_printf_float+0x3ee>
 800226e:	2301      	movs	r3, #1
 8002270:	464a      	mov	r2, r9
 8002272:	4631      	mov	r1, r6
 8002274:	4628      	mov	r0, r5
 8002276:	47b8      	blx	r7
 8002278:	3001      	adds	r0, #1
 800227a:	f43f ae3e 	beq.w	8001efa <_printf_float+0xb6>
 800227e:	f108 0801 	add.w	r8, r8, #1
 8002282:	68e3      	ldr	r3, [r4, #12]
 8002284:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8002286:	1a5b      	subs	r3, r3, r1
 8002288:	4543      	cmp	r3, r8
 800228a:	dcf0      	bgt.n	800226e <_printf_float+0x42a>
 800228c:	e6fc      	b.n	8002088 <_printf_float+0x244>
 800228e:	f04f 0800 	mov.w	r8, #0
 8002292:	f104 0919 	add.w	r9, r4, #25
 8002296:	e7f4      	b.n	8002282 <_printf_float+0x43e>

08002298 <_printf_common>:
 8002298:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800229c:	4616      	mov	r6, r2
 800229e:	4698      	mov	r8, r3
 80022a0:	688a      	ldr	r2, [r1, #8]
 80022a2:	690b      	ldr	r3, [r1, #16]
 80022a4:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80022a8:	4293      	cmp	r3, r2
 80022aa:	bfb8      	it	lt
 80022ac:	4613      	movlt	r3, r2
 80022ae:	6033      	str	r3, [r6, #0]
 80022b0:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80022b4:	4607      	mov	r7, r0
 80022b6:	460c      	mov	r4, r1
 80022b8:	b10a      	cbz	r2, 80022be <_printf_common+0x26>
 80022ba:	3301      	adds	r3, #1
 80022bc:	6033      	str	r3, [r6, #0]
 80022be:	6823      	ldr	r3, [r4, #0]
 80022c0:	0699      	lsls	r1, r3, #26
 80022c2:	bf42      	ittt	mi
 80022c4:	6833      	ldrmi	r3, [r6, #0]
 80022c6:	3302      	addmi	r3, #2
 80022c8:	6033      	strmi	r3, [r6, #0]
 80022ca:	6825      	ldr	r5, [r4, #0]
 80022cc:	f015 0506 	ands.w	r5, r5, #6
 80022d0:	d106      	bne.n	80022e0 <_printf_common+0x48>
 80022d2:	f104 0a19 	add.w	sl, r4, #25
 80022d6:	68e3      	ldr	r3, [r4, #12]
 80022d8:	6832      	ldr	r2, [r6, #0]
 80022da:	1a9b      	subs	r3, r3, r2
 80022dc:	42ab      	cmp	r3, r5
 80022de:	dc26      	bgt.n	800232e <_printf_common+0x96>
 80022e0:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 80022e4:	6822      	ldr	r2, [r4, #0]
 80022e6:	3b00      	subs	r3, #0
 80022e8:	bf18      	it	ne
 80022ea:	2301      	movne	r3, #1
 80022ec:	0692      	lsls	r2, r2, #26
 80022ee:	d42b      	bmi.n	8002348 <_printf_common+0xb0>
 80022f0:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80022f4:	4641      	mov	r1, r8
 80022f6:	4638      	mov	r0, r7
 80022f8:	47c8      	blx	r9
 80022fa:	3001      	adds	r0, #1
 80022fc:	d01e      	beq.n	800233c <_printf_common+0xa4>
 80022fe:	6823      	ldr	r3, [r4, #0]
 8002300:	6922      	ldr	r2, [r4, #16]
 8002302:	f003 0306 	and.w	r3, r3, #6
 8002306:	2b04      	cmp	r3, #4
 8002308:	bf02      	ittt	eq
 800230a:	68e5      	ldreq	r5, [r4, #12]
 800230c:	6833      	ldreq	r3, [r6, #0]
 800230e:	1aed      	subeq	r5, r5, r3
 8002310:	68a3      	ldr	r3, [r4, #8]
 8002312:	bf0c      	ite	eq
 8002314:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002318:	2500      	movne	r5, #0
 800231a:	4293      	cmp	r3, r2
 800231c:	bfc4      	itt	gt
 800231e:	1a9b      	subgt	r3, r3, r2
 8002320:	18ed      	addgt	r5, r5, r3
 8002322:	2600      	movs	r6, #0
 8002324:	341a      	adds	r4, #26
 8002326:	42b5      	cmp	r5, r6
 8002328:	d11a      	bne.n	8002360 <_printf_common+0xc8>
 800232a:	2000      	movs	r0, #0
 800232c:	e008      	b.n	8002340 <_printf_common+0xa8>
 800232e:	2301      	movs	r3, #1
 8002330:	4652      	mov	r2, sl
 8002332:	4641      	mov	r1, r8
 8002334:	4638      	mov	r0, r7
 8002336:	47c8      	blx	r9
 8002338:	3001      	adds	r0, #1
 800233a:	d103      	bne.n	8002344 <_printf_common+0xac>
 800233c:	f04f 30ff 	mov.w	r0, #4294967295
 8002340:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002344:	3501      	adds	r5, #1
 8002346:	e7c6      	b.n	80022d6 <_printf_common+0x3e>
 8002348:	18e1      	adds	r1, r4, r3
 800234a:	1c5a      	adds	r2, r3, #1
 800234c:	2030      	movs	r0, #48	@ 0x30
 800234e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8002352:	4422      	add	r2, r4
 8002354:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8002358:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 800235c:	3302      	adds	r3, #2
 800235e:	e7c7      	b.n	80022f0 <_printf_common+0x58>
 8002360:	2301      	movs	r3, #1
 8002362:	4622      	mov	r2, r4
 8002364:	4641      	mov	r1, r8
 8002366:	4638      	mov	r0, r7
 8002368:	47c8      	blx	r9
 800236a:	3001      	adds	r0, #1
 800236c:	d0e6      	beq.n	800233c <_printf_common+0xa4>
 800236e:	3601      	adds	r6, #1
 8002370:	e7d9      	b.n	8002326 <_printf_common+0x8e>
	...

08002374 <_printf_i>:
 8002374:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002378:	7e0f      	ldrb	r7, [r1, #24]
 800237a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800237c:	2f78      	cmp	r7, #120	@ 0x78
 800237e:	4691      	mov	r9, r2
 8002380:	4680      	mov	r8, r0
 8002382:	460c      	mov	r4, r1
 8002384:	469a      	mov	sl, r3
 8002386:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800238a:	d807      	bhi.n	800239c <_printf_i+0x28>
 800238c:	2f62      	cmp	r7, #98	@ 0x62
 800238e:	d80a      	bhi.n	80023a6 <_printf_i+0x32>
 8002390:	2f00      	cmp	r7, #0
 8002392:	f000 80d1 	beq.w	8002538 <_printf_i+0x1c4>
 8002396:	2f58      	cmp	r7, #88	@ 0x58
 8002398:	f000 80b8 	beq.w	800250c <_printf_i+0x198>
 800239c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80023a0:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80023a4:	e03a      	b.n	800241c <_printf_i+0xa8>
 80023a6:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80023aa:	2b15      	cmp	r3, #21
 80023ac:	d8f6      	bhi.n	800239c <_printf_i+0x28>
 80023ae:	a101      	add	r1, pc, #4	@ (adr r1, 80023b4 <_printf_i+0x40>)
 80023b0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80023b4:	0800240d 	.word	0x0800240d
 80023b8:	08002421 	.word	0x08002421
 80023bc:	0800239d 	.word	0x0800239d
 80023c0:	0800239d 	.word	0x0800239d
 80023c4:	0800239d 	.word	0x0800239d
 80023c8:	0800239d 	.word	0x0800239d
 80023cc:	08002421 	.word	0x08002421
 80023d0:	0800239d 	.word	0x0800239d
 80023d4:	0800239d 	.word	0x0800239d
 80023d8:	0800239d 	.word	0x0800239d
 80023dc:	0800239d 	.word	0x0800239d
 80023e0:	0800251f 	.word	0x0800251f
 80023e4:	0800244b 	.word	0x0800244b
 80023e8:	080024d9 	.word	0x080024d9
 80023ec:	0800239d 	.word	0x0800239d
 80023f0:	0800239d 	.word	0x0800239d
 80023f4:	08002541 	.word	0x08002541
 80023f8:	0800239d 	.word	0x0800239d
 80023fc:	0800244b 	.word	0x0800244b
 8002400:	0800239d 	.word	0x0800239d
 8002404:	0800239d 	.word	0x0800239d
 8002408:	080024e1 	.word	0x080024e1
 800240c:	6833      	ldr	r3, [r6, #0]
 800240e:	1d1a      	adds	r2, r3, #4
 8002410:	681b      	ldr	r3, [r3, #0]
 8002412:	6032      	str	r2, [r6, #0]
 8002414:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8002418:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800241c:	2301      	movs	r3, #1
 800241e:	e09c      	b.n	800255a <_printf_i+0x1e6>
 8002420:	6833      	ldr	r3, [r6, #0]
 8002422:	6820      	ldr	r0, [r4, #0]
 8002424:	1d19      	adds	r1, r3, #4
 8002426:	6031      	str	r1, [r6, #0]
 8002428:	0606      	lsls	r6, r0, #24
 800242a:	d501      	bpl.n	8002430 <_printf_i+0xbc>
 800242c:	681d      	ldr	r5, [r3, #0]
 800242e:	e003      	b.n	8002438 <_printf_i+0xc4>
 8002430:	0645      	lsls	r5, r0, #25
 8002432:	d5fb      	bpl.n	800242c <_printf_i+0xb8>
 8002434:	f9b3 5000 	ldrsh.w	r5, [r3]
 8002438:	2d00      	cmp	r5, #0
 800243a:	da03      	bge.n	8002444 <_printf_i+0xd0>
 800243c:	232d      	movs	r3, #45	@ 0x2d
 800243e:	426d      	negs	r5, r5
 8002440:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002444:	4858      	ldr	r0, [pc, #352]	@ (80025a8 <_printf_i+0x234>)
 8002446:	230a      	movs	r3, #10
 8002448:	e011      	b.n	800246e <_printf_i+0xfa>
 800244a:	6821      	ldr	r1, [r4, #0]
 800244c:	6833      	ldr	r3, [r6, #0]
 800244e:	0608      	lsls	r0, r1, #24
 8002450:	f853 5b04 	ldr.w	r5, [r3], #4
 8002454:	d402      	bmi.n	800245c <_printf_i+0xe8>
 8002456:	0649      	lsls	r1, r1, #25
 8002458:	bf48      	it	mi
 800245a:	b2ad      	uxthmi	r5, r5
 800245c:	2f6f      	cmp	r7, #111	@ 0x6f
 800245e:	4852      	ldr	r0, [pc, #328]	@ (80025a8 <_printf_i+0x234>)
 8002460:	6033      	str	r3, [r6, #0]
 8002462:	bf14      	ite	ne
 8002464:	230a      	movne	r3, #10
 8002466:	2308      	moveq	r3, #8
 8002468:	2100      	movs	r1, #0
 800246a:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800246e:	6866      	ldr	r6, [r4, #4]
 8002470:	60a6      	str	r6, [r4, #8]
 8002472:	2e00      	cmp	r6, #0
 8002474:	db05      	blt.n	8002482 <_printf_i+0x10e>
 8002476:	6821      	ldr	r1, [r4, #0]
 8002478:	432e      	orrs	r6, r5
 800247a:	f021 0104 	bic.w	r1, r1, #4
 800247e:	6021      	str	r1, [r4, #0]
 8002480:	d04b      	beq.n	800251a <_printf_i+0x1a6>
 8002482:	4616      	mov	r6, r2
 8002484:	fbb5 f1f3 	udiv	r1, r5, r3
 8002488:	fb03 5711 	mls	r7, r3, r1, r5
 800248c:	5dc7      	ldrb	r7, [r0, r7]
 800248e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8002492:	462f      	mov	r7, r5
 8002494:	42bb      	cmp	r3, r7
 8002496:	460d      	mov	r5, r1
 8002498:	d9f4      	bls.n	8002484 <_printf_i+0x110>
 800249a:	2b08      	cmp	r3, #8
 800249c:	d10b      	bne.n	80024b6 <_printf_i+0x142>
 800249e:	6823      	ldr	r3, [r4, #0]
 80024a0:	07df      	lsls	r7, r3, #31
 80024a2:	d508      	bpl.n	80024b6 <_printf_i+0x142>
 80024a4:	6923      	ldr	r3, [r4, #16]
 80024a6:	6861      	ldr	r1, [r4, #4]
 80024a8:	4299      	cmp	r1, r3
 80024aa:	bfde      	ittt	le
 80024ac:	2330      	movle	r3, #48	@ 0x30
 80024ae:	f806 3c01 	strble.w	r3, [r6, #-1]
 80024b2:	f106 36ff 	addle.w	r6, r6, #4294967295
 80024b6:	1b92      	subs	r2, r2, r6
 80024b8:	6122      	str	r2, [r4, #16]
 80024ba:	f8cd a000 	str.w	sl, [sp]
 80024be:	464b      	mov	r3, r9
 80024c0:	aa03      	add	r2, sp, #12
 80024c2:	4621      	mov	r1, r4
 80024c4:	4640      	mov	r0, r8
 80024c6:	f7ff fee7 	bl	8002298 <_printf_common>
 80024ca:	3001      	adds	r0, #1
 80024cc:	d14a      	bne.n	8002564 <_printf_i+0x1f0>
 80024ce:	f04f 30ff 	mov.w	r0, #4294967295
 80024d2:	b004      	add	sp, #16
 80024d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80024d8:	6823      	ldr	r3, [r4, #0]
 80024da:	f043 0320 	orr.w	r3, r3, #32
 80024de:	6023      	str	r3, [r4, #0]
 80024e0:	4832      	ldr	r0, [pc, #200]	@ (80025ac <_printf_i+0x238>)
 80024e2:	2778      	movs	r7, #120	@ 0x78
 80024e4:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80024e8:	6823      	ldr	r3, [r4, #0]
 80024ea:	6831      	ldr	r1, [r6, #0]
 80024ec:	061f      	lsls	r7, r3, #24
 80024ee:	f851 5b04 	ldr.w	r5, [r1], #4
 80024f2:	d402      	bmi.n	80024fa <_printf_i+0x186>
 80024f4:	065f      	lsls	r7, r3, #25
 80024f6:	bf48      	it	mi
 80024f8:	b2ad      	uxthmi	r5, r5
 80024fa:	6031      	str	r1, [r6, #0]
 80024fc:	07d9      	lsls	r1, r3, #31
 80024fe:	bf44      	itt	mi
 8002500:	f043 0320 	orrmi.w	r3, r3, #32
 8002504:	6023      	strmi	r3, [r4, #0]
 8002506:	b11d      	cbz	r5, 8002510 <_printf_i+0x19c>
 8002508:	2310      	movs	r3, #16
 800250a:	e7ad      	b.n	8002468 <_printf_i+0xf4>
 800250c:	4826      	ldr	r0, [pc, #152]	@ (80025a8 <_printf_i+0x234>)
 800250e:	e7e9      	b.n	80024e4 <_printf_i+0x170>
 8002510:	6823      	ldr	r3, [r4, #0]
 8002512:	f023 0320 	bic.w	r3, r3, #32
 8002516:	6023      	str	r3, [r4, #0]
 8002518:	e7f6      	b.n	8002508 <_printf_i+0x194>
 800251a:	4616      	mov	r6, r2
 800251c:	e7bd      	b.n	800249a <_printf_i+0x126>
 800251e:	6833      	ldr	r3, [r6, #0]
 8002520:	6825      	ldr	r5, [r4, #0]
 8002522:	6961      	ldr	r1, [r4, #20]
 8002524:	1d18      	adds	r0, r3, #4
 8002526:	6030      	str	r0, [r6, #0]
 8002528:	062e      	lsls	r6, r5, #24
 800252a:	681b      	ldr	r3, [r3, #0]
 800252c:	d501      	bpl.n	8002532 <_printf_i+0x1be>
 800252e:	6019      	str	r1, [r3, #0]
 8002530:	e002      	b.n	8002538 <_printf_i+0x1c4>
 8002532:	0668      	lsls	r0, r5, #25
 8002534:	d5fb      	bpl.n	800252e <_printf_i+0x1ba>
 8002536:	8019      	strh	r1, [r3, #0]
 8002538:	2300      	movs	r3, #0
 800253a:	6123      	str	r3, [r4, #16]
 800253c:	4616      	mov	r6, r2
 800253e:	e7bc      	b.n	80024ba <_printf_i+0x146>
 8002540:	6833      	ldr	r3, [r6, #0]
 8002542:	1d1a      	adds	r2, r3, #4
 8002544:	6032      	str	r2, [r6, #0]
 8002546:	681e      	ldr	r6, [r3, #0]
 8002548:	6862      	ldr	r2, [r4, #4]
 800254a:	2100      	movs	r1, #0
 800254c:	4630      	mov	r0, r6
 800254e:	f7fd fe47 	bl	80001e0 <memchr>
 8002552:	b108      	cbz	r0, 8002558 <_printf_i+0x1e4>
 8002554:	1b80      	subs	r0, r0, r6
 8002556:	6060      	str	r0, [r4, #4]
 8002558:	6863      	ldr	r3, [r4, #4]
 800255a:	6123      	str	r3, [r4, #16]
 800255c:	2300      	movs	r3, #0
 800255e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002562:	e7aa      	b.n	80024ba <_printf_i+0x146>
 8002564:	6923      	ldr	r3, [r4, #16]
 8002566:	4632      	mov	r2, r6
 8002568:	4649      	mov	r1, r9
 800256a:	4640      	mov	r0, r8
 800256c:	47d0      	blx	sl
 800256e:	3001      	adds	r0, #1
 8002570:	d0ad      	beq.n	80024ce <_printf_i+0x15a>
 8002572:	6823      	ldr	r3, [r4, #0]
 8002574:	079b      	lsls	r3, r3, #30
 8002576:	d413      	bmi.n	80025a0 <_printf_i+0x22c>
 8002578:	68e0      	ldr	r0, [r4, #12]
 800257a:	9b03      	ldr	r3, [sp, #12]
 800257c:	4298      	cmp	r0, r3
 800257e:	bfb8      	it	lt
 8002580:	4618      	movlt	r0, r3
 8002582:	e7a6      	b.n	80024d2 <_printf_i+0x15e>
 8002584:	2301      	movs	r3, #1
 8002586:	4632      	mov	r2, r6
 8002588:	4649      	mov	r1, r9
 800258a:	4640      	mov	r0, r8
 800258c:	47d0      	blx	sl
 800258e:	3001      	adds	r0, #1
 8002590:	d09d      	beq.n	80024ce <_printf_i+0x15a>
 8002592:	3501      	adds	r5, #1
 8002594:	68e3      	ldr	r3, [r4, #12]
 8002596:	9903      	ldr	r1, [sp, #12]
 8002598:	1a5b      	subs	r3, r3, r1
 800259a:	42ab      	cmp	r3, r5
 800259c:	dcf2      	bgt.n	8002584 <_printf_i+0x210>
 800259e:	e7eb      	b.n	8002578 <_printf_i+0x204>
 80025a0:	2500      	movs	r5, #0
 80025a2:	f104 0619 	add.w	r6, r4, #25
 80025a6:	e7f5      	b.n	8002594 <_printf_i+0x220>
 80025a8:	08004ad1 	.word	0x08004ad1
 80025ac:	08004ae2 	.word	0x08004ae2

080025b0 <std>:
 80025b0:	2300      	movs	r3, #0
 80025b2:	b510      	push	{r4, lr}
 80025b4:	4604      	mov	r4, r0
 80025b6:	e9c0 3300 	strd	r3, r3, [r0]
 80025ba:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80025be:	6083      	str	r3, [r0, #8]
 80025c0:	8181      	strh	r1, [r0, #12]
 80025c2:	6643      	str	r3, [r0, #100]	@ 0x64
 80025c4:	81c2      	strh	r2, [r0, #14]
 80025c6:	6183      	str	r3, [r0, #24]
 80025c8:	4619      	mov	r1, r3
 80025ca:	2208      	movs	r2, #8
 80025cc:	305c      	adds	r0, #92	@ 0x5c
 80025ce:	f000 f92a 	bl	8002826 <memset>
 80025d2:	4b0d      	ldr	r3, [pc, #52]	@ (8002608 <std+0x58>)
 80025d4:	6263      	str	r3, [r4, #36]	@ 0x24
 80025d6:	4b0d      	ldr	r3, [pc, #52]	@ (800260c <std+0x5c>)
 80025d8:	62a3      	str	r3, [r4, #40]	@ 0x28
 80025da:	4b0d      	ldr	r3, [pc, #52]	@ (8002610 <std+0x60>)
 80025dc:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80025de:	4b0d      	ldr	r3, [pc, #52]	@ (8002614 <std+0x64>)
 80025e0:	6323      	str	r3, [r4, #48]	@ 0x30
 80025e2:	4b0d      	ldr	r3, [pc, #52]	@ (8002618 <std+0x68>)
 80025e4:	6224      	str	r4, [r4, #32]
 80025e6:	429c      	cmp	r4, r3
 80025e8:	d006      	beq.n	80025f8 <std+0x48>
 80025ea:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80025ee:	4294      	cmp	r4, r2
 80025f0:	d002      	beq.n	80025f8 <std+0x48>
 80025f2:	33d0      	adds	r3, #208	@ 0xd0
 80025f4:	429c      	cmp	r4, r3
 80025f6:	d105      	bne.n	8002604 <std+0x54>
 80025f8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80025fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002600:	f000 b98e 	b.w	8002920 <__retarget_lock_init_recursive>
 8002604:	bd10      	pop	{r4, pc}
 8002606:	bf00      	nop
 8002608:	080027a1 	.word	0x080027a1
 800260c:	080027c3 	.word	0x080027c3
 8002610:	080027fb 	.word	0x080027fb
 8002614:	0800281f 	.word	0x0800281f
 8002618:	200001fc 	.word	0x200001fc

0800261c <stdio_exit_handler>:
 800261c:	4a02      	ldr	r2, [pc, #8]	@ (8002628 <stdio_exit_handler+0xc>)
 800261e:	4903      	ldr	r1, [pc, #12]	@ (800262c <stdio_exit_handler+0x10>)
 8002620:	4803      	ldr	r0, [pc, #12]	@ (8002630 <stdio_exit_handler+0x14>)
 8002622:	f000 b869 	b.w	80026f8 <_fwalk_sglue>
 8002626:	bf00      	nop
 8002628:	20000004 	.word	0x20000004
 800262c:	08004285 	.word	0x08004285
 8002630:	20000014 	.word	0x20000014

08002634 <cleanup_stdio>:
 8002634:	6841      	ldr	r1, [r0, #4]
 8002636:	4b0c      	ldr	r3, [pc, #48]	@ (8002668 <cleanup_stdio+0x34>)
 8002638:	4299      	cmp	r1, r3
 800263a:	b510      	push	{r4, lr}
 800263c:	4604      	mov	r4, r0
 800263e:	d001      	beq.n	8002644 <cleanup_stdio+0x10>
 8002640:	f001 fe20 	bl	8004284 <_fflush_r>
 8002644:	68a1      	ldr	r1, [r4, #8]
 8002646:	4b09      	ldr	r3, [pc, #36]	@ (800266c <cleanup_stdio+0x38>)
 8002648:	4299      	cmp	r1, r3
 800264a:	d002      	beq.n	8002652 <cleanup_stdio+0x1e>
 800264c:	4620      	mov	r0, r4
 800264e:	f001 fe19 	bl	8004284 <_fflush_r>
 8002652:	68e1      	ldr	r1, [r4, #12]
 8002654:	4b06      	ldr	r3, [pc, #24]	@ (8002670 <cleanup_stdio+0x3c>)
 8002656:	4299      	cmp	r1, r3
 8002658:	d004      	beq.n	8002664 <cleanup_stdio+0x30>
 800265a:	4620      	mov	r0, r4
 800265c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002660:	f001 be10 	b.w	8004284 <_fflush_r>
 8002664:	bd10      	pop	{r4, pc}
 8002666:	bf00      	nop
 8002668:	200001fc 	.word	0x200001fc
 800266c:	20000264 	.word	0x20000264
 8002670:	200002cc 	.word	0x200002cc

08002674 <global_stdio_init.part.0>:
 8002674:	b510      	push	{r4, lr}
 8002676:	4b0b      	ldr	r3, [pc, #44]	@ (80026a4 <global_stdio_init.part.0+0x30>)
 8002678:	4c0b      	ldr	r4, [pc, #44]	@ (80026a8 <global_stdio_init.part.0+0x34>)
 800267a:	4a0c      	ldr	r2, [pc, #48]	@ (80026ac <global_stdio_init.part.0+0x38>)
 800267c:	601a      	str	r2, [r3, #0]
 800267e:	4620      	mov	r0, r4
 8002680:	2200      	movs	r2, #0
 8002682:	2104      	movs	r1, #4
 8002684:	f7ff ff94 	bl	80025b0 <std>
 8002688:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800268c:	2201      	movs	r2, #1
 800268e:	2109      	movs	r1, #9
 8002690:	f7ff ff8e 	bl	80025b0 <std>
 8002694:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8002698:	2202      	movs	r2, #2
 800269a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800269e:	2112      	movs	r1, #18
 80026a0:	f7ff bf86 	b.w	80025b0 <std>
 80026a4:	20000334 	.word	0x20000334
 80026a8:	200001fc 	.word	0x200001fc
 80026ac:	0800261d 	.word	0x0800261d

080026b0 <__sfp_lock_acquire>:
 80026b0:	4801      	ldr	r0, [pc, #4]	@ (80026b8 <__sfp_lock_acquire+0x8>)
 80026b2:	f000 b936 	b.w	8002922 <__retarget_lock_acquire_recursive>
 80026b6:	bf00      	nop
 80026b8:	2000033d 	.word	0x2000033d

080026bc <__sfp_lock_release>:
 80026bc:	4801      	ldr	r0, [pc, #4]	@ (80026c4 <__sfp_lock_release+0x8>)
 80026be:	f000 b931 	b.w	8002924 <__retarget_lock_release_recursive>
 80026c2:	bf00      	nop
 80026c4:	2000033d 	.word	0x2000033d

080026c8 <__sinit>:
 80026c8:	b510      	push	{r4, lr}
 80026ca:	4604      	mov	r4, r0
 80026cc:	f7ff fff0 	bl	80026b0 <__sfp_lock_acquire>
 80026d0:	6a23      	ldr	r3, [r4, #32]
 80026d2:	b11b      	cbz	r3, 80026dc <__sinit+0x14>
 80026d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80026d8:	f7ff bff0 	b.w	80026bc <__sfp_lock_release>
 80026dc:	4b04      	ldr	r3, [pc, #16]	@ (80026f0 <__sinit+0x28>)
 80026de:	6223      	str	r3, [r4, #32]
 80026e0:	4b04      	ldr	r3, [pc, #16]	@ (80026f4 <__sinit+0x2c>)
 80026e2:	681b      	ldr	r3, [r3, #0]
 80026e4:	2b00      	cmp	r3, #0
 80026e6:	d1f5      	bne.n	80026d4 <__sinit+0xc>
 80026e8:	f7ff ffc4 	bl	8002674 <global_stdio_init.part.0>
 80026ec:	e7f2      	b.n	80026d4 <__sinit+0xc>
 80026ee:	bf00      	nop
 80026f0:	08002635 	.word	0x08002635
 80026f4:	20000334 	.word	0x20000334

080026f8 <_fwalk_sglue>:
 80026f8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80026fc:	4607      	mov	r7, r0
 80026fe:	4688      	mov	r8, r1
 8002700:	4614      	mov	r4, r2
 8002702:	2600      	movs	r6, #0
 8002704:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8002708:	f1b9 0901 	subs.w	r9, r9, #1
 800270c:	d505      	bpl.n	800271a <_fwalk_sglue+0x22>
 800270e:	6824      	ldr	r4, [r4, #0]
 8002710:	2c00      	cmp	r4, #0
 8002712:	d1f7      	bne.n	8002704 <_fwalk_sglue+0xc>
 8002714:	4630      	mov	r0, r6
 8002716:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800271a:	89ab      	ldrh	r3, [r5, #12]
 800271c:	2b01      	cmp	r3, #1
 800271e:	d907      	bls.n	8002730 <_fwalk_sglue+0x38>
 8002720:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8002724:	3301      	adds	r3, #1
 8002726:	d003      	beq.n	8002730 <_fwalk_sglue+0x38>
 8002728:	4629      	mov	r1, r5
 800272a:	4638      	mov	r0, r7
 800272c:	47c0      	blx	r8
 800272e:	4306      	orrs	r6, r0
 8002730:	3568      	adds	r5, #104	@ 0x68
 8002732:	e7e9      	b.n	8002708 <_fwalk_sglue+0x10>

08002734 <sniprintf>:
 8002734:	b40c      	push	{r2, r3}
 8002736:	b530      	push	{r4, r5, lr}
 8002738:	4b18      	ldr	r3, [pc, #96]	@ (800279c <sniprintf+0x68>)
 800273a:	1e0c      	subs	r4, r1, #0
 800273c:	681d      	ldr	r5, [r3, #0]
 800273e:	b09d      	sub	sp, #116	@ 0x74
 8002740:	da08      	bge.n	8002754 <sniprintf+0x20>
 8002742:	238b      	movs	r3, #139	@ 0x8b
 8002744:	602b      	str	r3, [r5, #0]
 8002746:	f04f 30ff 	mov.w	r0, #4294967295
 800274a:	b01d      	add	sp, #116	@ 0x74
 800274c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8002750:	b002      	add	sp, #8
 8002752:	4770      	bx	lr
 8002754:	f44f 7302 	mov.w	r3, #520	@ 0x208
 8002758:	f8ad 3014 	strh.w	r3, [sp, #20]
 800275c:	f04f 0300 	mov.w	r3, #0
 8002760:	931b      	str	r3, [sp, #108]	@ 0x6c
 8002762:	bf14      	ite	ne
 8002764:	f104 33ff 	addne.w	r3, r4, #4294967295
 8002768:	4623      	moveq	r3, r4
 800276a:	9304      	str	r3, [sp, #16]
 800276c:	9307      	str	r3, [sp, #28]
 800276e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002772:	9002      	str	r0, [sp, #8]
 8002774:	9006      	str	r0, [sp, #24]
 8002776:	f8ad 3016 	strh.w	r3, [sp, #22]
 800277a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800277c:	ab21      	add	r3, sp, #132	@ 0x84
 800277e:	a902      	add	r1, sp, #8
 8002780:	4628      	mov	r0, r5
 8002782:	9301      	str	r3, [sp, #4]
 8002784:	f001 fbfe 	bl	8003f84 <_svfiprintf_r>
 8002788:	1c43      	adds	r3, r0, #1
 800278a:	bfbc      	itt	lt
 800278c:	238b      	movlt	r3, #139	@ 0x8b
 800278e:	602b      	strlt	r3, [r5, #0]
 8002790:	2c00      	cmp	r4, #0
 8002792:	d0da      	beq.n	800274a <sniprintf+0x16>
 8002794:	9b02      	ldr	r3, [sp, #8]
 8002796:	2200      	movs	r2, #0
 8002798:	701a      	strb	r2, [r3, #0]
 800279a:	e7d6      	b.n	800274a <sniprintf+0x16>
 800279c:	20000010 	.word	0x20000010

080027a0 <__sread>:
 80027a0:	b510      	push	{r4, lr}
 80027a2:	460c      	mov	r4, r1
 80027a4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80027a8:	f000 f86c 	bl	8002884 <_read_r>
 80027ac:	2800      	cmp	r0, #0
 80027ae:	bfab      	itete	ge
 80027b0:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80027b2:	89a3      	ldrhlt	r3, [r4, #12]
 80027b4:	181b      	addge	r3, r3, r0
 80027b6:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80027ba:	bfac      	ite	ge
 80027bc:	6563      	strge	r3, [r4, #84]	@ 0x54
 80027be:	81a3      	strhlt	r3, [r4, #12]
 80027c0:	bd10      	pop	{r4, pc}

080027c2 <__swrite>:
 80027c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80027c6:	461f      	mov	r7, r3
 80027c8:	898b      	ldrh	r3, [r1, #12]
 80027ca:	05db      	lsls	r3, r3, #23
 80027cc:	4605      	mov	r5, r0
 80027ce:	460c      	mov	r4, r1
 80027d0:	4616      	mov	r6, r2
 80027d2:	d505      	bpl.n	80027e0 <__swrite+0x1e>
 80027d4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80027d8:	2302      	movs	r3, #2
 80027da:	2200      	movs	r2, #0
 80027dc:	f000 f840 	bl	8002860 <_lseek_r>
 80027e0:	89a3      	ldrh	r3, [r4, #12]
 80027e2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80027e6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80027ea:	81a3      	strh	r3, [r4, #12]
 80027ec:	4632      	mov	r2, r6
 80027ee:	463b      	mov	r3, r7
 80027f0:	4628      	mov	r0, r5
 80027f2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80027f6:	f000 b857 	b.w	80028a8 <_write_r>

080027fa <__sseek>:
 80027fa:	b510      	push	{r4, lr}
 80027fc:	460c      	mov	r4, r1
 80027fe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002802:	f000 f82d 	bl	8002860 <_lseek_r>
 8002806:	1c43      	adds	r3, r0, #1
 8002808:	89a3      	ldrh	r3, [r4, #12]
 800280a:	bf15      	itete	ne
 800280c:	6560      	strne	r0, [r4, #84]	@ 0x54
 800280e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8002812:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8002816:	81a3      	strheq	r3, [r4, #12]
 8002818:	bf18      	it	ne
 800281a:	81a3      	strhne	r3, [r4, #12]
 800281c:	bd10      	pop	{r4, pc}

0800281e <__sclose>:
 800281e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002822:	f000 b80d 	b.w	8002840 <_close_r>

08002826 <memset>:
 8002826:	4402      	add	r2, r0
 8002828:	4603      	mov	r3, r0
 800282a:	4293      	cmp	r3, r2
 800282c:	d100      	bne.n	8002830 <memset+0xa>
 800282e:	4770      	bx	lr
 8002830:	f803 1b01 	strb.w	r1, [r3], #1
 8002834:	e7f9      	b.n	800282a <memset+0x4>
	...

08002838 <_localeconv_r>:
 8002838:	4800      	ldr	r0, [pc, #0]	@ (800283c <_localeconv_r+0x4>)
 800283a:	4770      	bx	lr
 800283c:	20000150 	.word	0x20000150

08002840 <_close_r>:
 8002840:	b538      	push	{r3, r4, r5, lr}
 8002842:	4d06      	ldr	r5, [pc, #24]	@ (800285c <_close_r+0x1c>)
 8002844:	2300      	movs	r3, #0
 8002846:	4604      	mov	r4, r0
 8002848:	4608      	mov	r0, r1
 800284a:	602b      	str	r3, [r5, #0]
 800284c:	f7ff f9b5 	bl	8001bba <_close>
 8002850:	1c43      	adds	r3, r0, #1
 8002852:	d102      	bne.n	800285a <_close_r+0x1a>
 8002854:	682b      	ldr	r3, [r5, #0]
 8002856:	b103      	cbz	r3, 800285a <_close_r+0x1a>
 8002858:	6023      	str	r3, [r4, #0]
 800285a:	bd38      	pop	{r3, r4, r5, pc}
 800285c:	20000338 	.word	0x20000338

08002860 <_lseek_r>:
 8002860:	b538      	push	{r3, r4, r5, lr}
 8002862:	4d07      	ldr	r5, [pc, #28]	@ (8002880 <_lseek_r+0x20>)
 8002864:	4604      	mov	r4, r0
 8002866:	4608      	mov	r0, r1
 8002868:	4611      	mov	r1, r2
 800286a:	2200      	movs	r2, #0
 800286c:	602a      	str	r2, [r5, #0]
 800286e:	461a      	mov	r2, r3
 8002870:	f7ff f9ca 	bl	8001c08 <_lseek>
 8002874:	1c43      	adds	r3, r0, #1
 8002876:	d102      	bne.n	800287e <_lseek_r+0x1e>
 8002878:	682b      	ldr	r3, [r5, #0]
 800287a:	b103      	cbz	r3, 800287e <_lseek_r+0x1e>
 800287c:	6023      	str	r3, [r4, #0]
 800287e:	bd38      	pop	{r3, r4, r5, pc}
 8002880:	20000338 	.word	0x20000338

08002884 <_read_r>:
 8002884:	b538      	push	{r3, r4, r5, lr}
 8002886:	4d07      	ldr	r5, [pc, #28]	@ (80028a4 <_read_r+0x20>)
 8002888:	4604      	mov	r4, r0
 800288a:	4608      	mov	r0, r1
 800288c:	4611      	mov	r1, r2
 800288e:	2200      	movs	r2, #0
 8002890:	602a      	str	r2, [r5, #0]
 8002892:	461a      	mov	r2, r3
 8002894:	f7ff f958 	bl	8001b48 <_read>
 8002898:	1c43      	adds	r3, r0, #1
 800289a:	d102      	bne.n	80028a2 <_read_r+0x1e>
 800289c:	682b      	ldr	r3, [r5, #0]
 800289e:	b103      	cbz	r3, 80028a2 <_read_r+0x1e>
 80028a0:	6023      	str	r3, [r4, #0]
 80028a2:	bd38      	pop	{r3, r4, r5, pc}
 80028a4:	20000338 	.word	0x20000338

080028a8 <_write_r>:
 80028a8:	b538      	push	{r3, r4, r5, lr}
 80028aa:	4d07      	ldr	r5, [pc, #28]	@ (80028c8 <_write_r+0x20>)
 80028ac:	4604      	mov	r4, r0
 80028ae:	4608      	mov	r0, r1
 80028b0:	4611      	mov	r1, r2
 80028b2:	2200      	movs	r2, #0
 80028b4:	602a      	str	r2, [r5, #0]
 80028b6:	461a      	mov	r2, r3
 80028b8:	f7ff f963 	bl	8001b82 <_write>
 80028bc:	1c43      	adds	r3, r0, #1
 80028be:	d102      	bne.n	80028c6 <_write_r+0x1e>
 80028c0:	682b      	ldr	r3, [r5, #0]
 80028c2:	b103      	cbz	r3, 80028c6 <_write_r+0x1e>
 80028c4:	6023      	str	r3, [r4, #0]
 80028c6:	bd38      	pop	{r3, r4, r5, pc}
 80028c8:	20000338 	.word	0x20000338

080028cc <__errno>:
 80028cc:	4b01      	ldr	r3, [pc, #4]	@ (80028d4 <__errno+0x8>)
 80028ce:	6818      	ldr	r0, [r3, #0]
 80028d0:	4770      	bx	lr
 80028d2:	bf00      	nop
 80028d4:	20000010 	.word	0x20000010

080028d8 <__libc_init_array>:
 80028d8:	b570      	push	{r4, r5, r6, lr}
 80028da:	4d0d      	ldr	r5, [pc, #52]	@ (8002910 <__libc_init_array+0x38>)
 80028dc:	4c0d      	ldr	r4, [pc, #52]	@ (8002914 <__libc_init_array+0x3c>)
 80028de:	1b64      	subs	r4, r4, r5
 80028e0:	10a4      	asrs	r4, r4, #2
 80028e2:	2600      	movs	r6, #0
 80028e4:	42a6      	cmp	r6, r4
 80028e6:	d109      	bne.n	80028fc <__libc_init_array+0x24>
 80028e8:	4d0b      	ldr	r5, [pc, #44]	@ (8002918 <__libc_init_array+0x40>)
 80028ea:	4c0c      	ldr	r4, [pc, #48]	@ (800291c <__libc_init_array+0x44>)
 80028ec:	f002 f868 	bl	80049c0 <_init>
 80028f0:	1b64      	subs	r4, r4, r5
 80028f2:	10a4      	asrs	r4, r4, #2
 80028f4:	2600      	movs	r6, #0
 80028f6:	42a6      	cmp	r6, r4
 80028f8:	d105      	bne.n	8002906 <__libc_init_array+0x2e>
 80028fa:	bd70      	pop	{r4, r5, r6, pc}
 80028fc:	f855 3b04 	ldr.w	r3, [r5], #4
 8002900:	4798      	blx	r3
 8002902:	3601      	adds	r6, #1
 8002904:	e7ee      	b.n	80028e4 <__libc_init_array+0xc>
 8002906:	f855 3b04 	ldr.w	r3, [r5], #4
 800290a:	4798      	blx	r3
 800290c:	3601      	adds	r6, #1
 800290e:	e7f2      	b.n	80028f6 <__libc_init_array+0x1e>
 8002910:	08004e3c 	.word	0x08004e3c
 8002914:	08004e3c 	.word	0x08004e3c
 8002918:	08004e3c 	.word	0x08004e3c
 800291c:	08004e40 	.word	0x08004e40

08002920 <__retarget_lock_init_recursive>:
 8002920:	4770      	bx	lr

08002922 <__retarget_lock_acquire_recursive>:
 8002922:	4770      	bx	lr

08002924 <__retarget_lock_release_recursive>:
 8002924:	4770      	bx	lr

08002926 <quorem>:
 8002926:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800292a:	6903      	ldr	r3, [r0, #16]
 800292c:	690c      	ldr	r4, [r1, #16]
 800292e:	42a3      	cmp	r3, r4
 8002930:	4607      	mov	r7, r0
 8002932:	db7e      	blt.n	8002a32 <quorem+0x10c>
 8002934:	3c01      	subs	r4, #1
 8002936:	f101 0814 	add.w	r8, r1, #20
 800293a:	00a3      	lsls	r3, r4, #2
 800293c:	f100 0514 	add.w	r5, r0, #20
 8002940:	9300      	str	r3, [sp, #0]
 8002942:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002946:	9301      	str	r3, [sp, #4]
 8002948:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800294c:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002950:	3301      	adds	r3, #1
 8002952:	429a      	cmp	r2, r3
 8002954:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8002958:	fbb2 f6f3 	udiv	r6, r2, r3
 800295c:	d32e      	bcc.n	80029bc <quorem+0x96>
 800295e:	f04f 0a00 	mov.w	sl, #0
 8002962:	46c4      	mov	ip, r8
 8002964:	46ae      	mov	lr, r5
 8002966:	46d3      	mov	fp, sl
 8002968:	f85c 3b04 	ldr.w	r3, [ip], #4
 800296c:	b298      	uxth	r0, r3
 800296e:	fb06 a000 	mla	r0, r6, r0, sl
 8002972:	0c02      	lsrs	r2, r0, #16
 8002974:	0c1b      	lsrs	r3, r3, #16
 8002976:	fb06 2303 	mla	r3, r6, r3, r2
 800297a:	f8de 2000 	ldr.w	r2, [lr]
 800297e:	b280      	uxth	r0, r0
 8002980:	b292      	uxth	r2, r2
 8002982:	1a12      	subs	r2, r2, r0
 8002984:	445a      	add	r2, fp
 8002986:	f8de 0000 	ldr.w	r0, [lr]
 800298a:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800298e:	b29b      	uxth	r3, r3
 8002990:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8002994:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8002998:	b292      	uxth	r2, r2
 800299a:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 800299e:	45e1      	cmp	r9, ip
 80029a0:	f84e 2b04 	str.w	r2, [lr], #4
 80029a4:	ea4f 4b23 	mov.w	fp, r3, asr #16
 80029a8:	d2de      	bcs.n	8002968 <quorem+0x42>
 80029aa:	9b00      	ldr	r3, [sp, #0]
 80029ac:	58eb      	ldr	r3, [r5, r3]
 80029ae:	b92b      	cbnz	r3, 80029bc <quorem+0x96>
 80029b0:	9b01      	ldr	r3, [sp, #4]
 80029b2:	3b04      	subs	r3, #4
 80029b4:	429d      	cmp	r5, r3
 80029b6:	461a      	mov	r2, r3
 80029b8:	d32f      	bcc.n	8002a1a <quorem+0xf4>
 80029ba:	613c      	str	r4, [r7, #16]
 80029bc:	4638      	mov	r0, r7
 80029be:	f001 f97d 	bl	8003cbc <__mcmp>
 80029c2:	2800      	cmp	r0, #0
 80029c4:	db25      	blt.n	8002a12 <quorem+0xec>
 80029c6:	4629      	mov	r1, r5
 80029c8:	2000      	movs	r0, #0
 80029ca:	f858 2b04 	ldr.w	r2, [r8], #4
 80029ce:	f8d1 c000 	ldr.w	ip, [r1]
 80029d2:	fa1f fe82 	uxth.w	lr, r2
 80029d6:	fa1f f38c 	uxth.w	r3, ip
 80029da:	eba3 030e 	sub.w	r3, r3, lr
 80029de:	4403      	add	r3, r0
 80029e0:	0c12      	lsrs	r2, r2, #16
 80029e2:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 80029e6:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 80029ea:	b29b      	uxth	r3, r3
 80029ec:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80029f0:	45c1      	cmp	r9, r8
 80029f2:	f841 3b04 	str.w	r3, [r1], #4
 80029f6:	ea4f 4022 	mov.w	r0, r2, asr #16
 80029fa:	d2e6      	bcs.n	80029ca <quorem+0xa4>
 80029fc:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002a00:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002a04:	b922      	cbnz	r2, 8002a10 <quorem+0xea>
 8002a06:	3b04      	subs	r3, #4
 8002a08:	429d      	cmp	r5, r3
 8002a0a:	461a      	mov	r2, r3
 8002a0c:	d30b      	bcc.n	8002a26 <quorem+0x100>
 8002a0e:	613c      	str	r4, [r7, #16]
 8002a10:	3601      	adds	r6, #1
 8002a12:	4630      	mov	r0, r6
 8002a14:	b003      	add	sp, #12
 8002a16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002a1a:	6812      	ldr	r2, [r2, #0]
 8002a1c:	3b04      	subs	r3, #4
 8002a1e:	2a00      	cmp	r2, #0
 8002a20:	d1cb      	bne.n	80029ba <quorem+0x94>
 8002a22:	3c01      	subs	r4, #1
 8002a24:	e7c6      	b.n	80029b4 <quorem+0x8e>
 8002a26:	6812      	ldr	r2, [r2, #0]
 8002a28:	3b04      	subs	r3, #4
 8002a2a:	2a00      	cmp	r2, #0
 8002a2c:	d1ef      	bne.n	8002a0e <quorem+0xe8>
 8002a2e:	3c01      	subs	r4, #1
 8002a30:	e7ea      	b.n	8002a08 <quorem+0xe2>
 8002a32:	2000      	movs	r0, #0
 8002a34:	e7ee      	b.n	8002a14 <quorem+0xee>
	...

08002a38 <_dtoa_r>:
 8002a38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002a3c:	69c7      	ldr	r7, [r0, #28]
 8002a3e:	b097      	sub	sp, #92	@ 0x5c
 8002a40:	ed8d 0b04 	vstr	d0, [sp, #16]
 8002a44:	ec55 4b10 	vmov	r4, r5, d0
 8002a48:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 8002a4a:	9107      	str	r1, [sp, #28]
 8002a4c:	4681      	mov	r9, r0
 8002a4e:	920c      	str	r2, [sp, #48]	@ 0x30
 8002a50:	9311      	str	r3, [sp, #68]	@ 0x44
 8002a52:	b97f      	cbnz	r7, 8002a74 <_dtoa_r+0x3c>
 8002a54:	2010      	movs	r0, #16
 8002a56:	f000 fe09 	bl	800366c <malloc>
 8002a5a:	4602      	mov	r2, r0
 8002a5c:	f8c9 001c 	str.w	r0, [r9, #28]
 8002a60:	b920      	cbnz	r0, 8002a6c <_dtoa_r+0x34>
 8002a62:	4ba9      	ldr	r3, [pc, #676]	@ (8002d08 <_dtoa_r+0x2d0>)
 8002a64:	21ef      	movs	r1, #239	@ 0xef
 8002a66:	48a9      	ldr	r0, [pc, #676]	@ (8002d0c <_dtoa_r+0x2d4>)
 8002a68:	f001 fc6c 	bl	8004344 <__assert_func>
 8002a6c:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8002a70:	6007      	str	r7, [r0, #0]
 8002a72:	60c7      	str	r7, [r0, #12]
 8002a74:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8002a78:	6819      	ldr	r1, [r3, #0]
 8002a7a:	b159      	cbz	r1, 8002a94 <_dtoa_r+0x5c>
 8002a7c:	685a      	ldr	r2, [r3, #4]
 8002a7e:	604a      	str	r2, [r1, #4]
 8002a80:	2301      	movs	r3, #1
 8002a82:	4093      	lsls	r3, r2
 8002a84:	608b      	str	r3, [r1, #8]
 8002a86:	4648      	mov	r0, r9
 8002a88:	f000 fee6 	bl	8003858 <_Bfree>
 8002a8c:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8002a90:	2200      	movs	r2, #0
 8002a92:	601a      	str	r2, [r3, #0]
 8002a94:	1e2b      	subs	r3, r5, #0
 8002a96:	bfb9      	ittee	lt
 8002a98:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8002a9c:	9305      	strlt	r3, [sp, #20]
 8002a9e:	2300      	movge	r3, #0
 8002aa0:	6033      	strge	r3, [r6, #0]
 8002aa2:	9f05      	ldr	r7, [sp, #20]
 8002aa4:	4b9a      	ldr	r3, [pc, #616]	@ (8002d10 <_dtoa_r+0x2d8>)
 8002aa6:	bfbc      	itt	lt
 8002aa8:	2201      	movlt	r2, #1
 8002aaa:	6032      	strlt	r2, [r6, #0]
 8002aac:	43bb      	bics	r3, r7
 8002aae:	d112      	bne.n	8002ad6 <_dtoa_r+0x9e>
 8002ab0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8002ab2:	f242 730f 	movw	r3, #9999	@ 0x270f
 8002ab6:	6013      	str	r3, [r2, #0]
 8002ab8:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8002abc:	4323      	orrs	r3, r4
 8002abe:	f000 855a 	beq.w	8003576 <_dtoa_r+0xb3e>
 8002ac2:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002ac4:	f8df a25c 	ldr.w	sl, [pc, #604]	@ 8002d24 <_dtoa_r+0x2ec>
 8002ac8:	2b00      	cmp	r3, #0
 8002aca:	f000 855c 	beq.w	8003586 <_dtoa_r+0xb4e>
 8002ace:	f10a 0303 	add.w	r3, sl, #3
 8002ad2:	f000 bd56 	b.w	8003582 <_dtoa_r+0xb4a>
 8002ad6:	ed9d 7b04 	vldr	d7, [sp, #16]
 8002ada:	2200      	movs	r2, #0
 8002adc:	ec51 0b17 	vmov	r0, r1, d7
 8002ae0:	2300      	movs	r3, #0
 8002ae2:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
 8002ae6:	f7fd fff7 	bl	8000ad8 <__aeabi_dcmpeq>
 8002aea:	4680      	mov	r8, r0
 8002aec:	b158      	cbz	r0, 8002b06 <_dtoa_r+0xce>
 8002aee:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8002af0:	2301      	movs	r3, #1
 8002af2:	6013      	str	r3, [r2, #0]
 8002af4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002af6:	b113      	cbz	r3, 8002afe <_dtoa_r+0xc6>
 8002af8:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8002afa:	4b86      	ldr	r3, [pc, #536]	@ (8002d14 <_dtoa_r+0x2dc>)
 8002afc:	6013      	str	r3, [r2, #0]
 8002afe:	f8df a228 	ldr.w	sl, [pc, #552]	@ 8002d28 <_dtoa_r+0x2f0>
 8002b02:	f000 bd40 	b.w	8003586 <_dtoa_r+0xb4e>
 8002b06:	ed9d 0b0a 	vldr	d0, [sp, #40]	@ 0x28
 8002b0a:	aa14      	add	r2, sp, #80	@ 0x50
 8002b0c:	a915      	add	r1, sp, #84	@ 0x54
 8002b0e:	4648      	mov	r0, r9
 8002b10:	f001 f984 	bl	8003e1c <__d2b>
 8002b14:	f3c7 560a 	ubfx	r6, r7, #20, #11
 8002b18:	9002      	str	r0, [sp, #8]
 8002b1a:	2e00      	cmp	r6, #0
 8002b1c:	d078      	beq.n	8002c10 <_dtoa_r+0x1d8>
 8002b1e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002b20:	f8cd 8048 	str.w	r8, [sp, #72]	@ 0x48
 8002b24:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002b28:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8002b2c:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8002b30:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8002b34:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8002b38:	4619      	mov	r1, r3
 8002b3a:	2200      	movs	r2, #0
 8002b3c:	4b76      	ldr	r3, [pc, #472]	@ (8002d18 <_dtoa_r+0x2e0>)
 8002b3e:	f7fd fbab 	bl	8000298 <__aeabi_dsub>
 8002b42:	a36b      	add	r3, pc, #428	@ (adr r3, 8002cf0 <_dtoa_r+0x2b8>)
 8002b44:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b48:	f7fd fd5e 	bl	8000608 <__aeabi_dmul>
 8002b4c:	a36a      	add	r3, pc, #424	@ (adr r3, 8002cf8 <_dtoa_r+0x2c0>)
 8002b4e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b52:	f7fd fba3 	bl	800029c <__adddf3>
 8002b56:	4604      	mov	r4, r0
 8002b58:	4630      	mov	r0, r6
 8002b5a:	460d      	mov	r5, r1
 8002b5c:	f7fd fcea 	bl	8000534 <__aeabi_i2d>
 8002b60:	a367      	add	r3, pc, #412	@ (adr r3, 8002d00 <_dtoa_r+0x2c8>)
 8002b62:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b66:	f7fd fd4f 	bl	8000608 <__aeabi_dmul>
 8002b6a:	4602      	mov	r2, r0
 8002b6c:	460b      	mov	r3, r1
 8002b6e:	4620      	mov	r0, r4
 8002b70:	4629      	mov	r1, r5
 8002b72:	f7fd fb93 	bl	800029c <__adddf3>
 8002b76:	4604      	mov	r4, r0
 8002b78:	460d      	mov	r5, r1
 8002b7a:	f7fd fff5 	bl	8000b68 <__aeabi_d2iz>
 8002b7e:	2200      	movs	r2, #0
 8002b80:	4607      	mov	r7, r0
 8002b82:	2300      	movs	r3, #0
 8002b84:	4620      	mov	r0, r4
 8002b86:	4629      	mov	r1, r5
 8002b88:	f7fd ffb0 	bl	8000aec <__aeabi_dcmplt>
 8002b8c:	b140      	cbz	r0, 8002ba0 <_dtoa_r+0x168>
 8002b8e:	4638      	mov	r0, r7
 8002b90:	f7fd fcd0 	bl	8000534 <__aeabi_i2d>
 8002b94:	4622      	mov	r2, r4
 8002b96:	462b      	mov	r3, r5
 8002b98:	f7fd ff9e 	bl	8000ad8 <__aeabi_dcmpeq>
 8002b9c:	b900      	cbnz	r0, 8002ba0 <_dtoa_r+0x168>
 8002b9e:	3f01      	subs	r7, #1
 8002ba0:	2f16      	cmp	r7, #22
 8002ba2:	d852      	bhi.n	8002c4a <_dtoa_r+0x212>
 8002ba4:	4b5d      	ldr	r3, [pc, #372]	@ (8002d1c <_dtoa_r+0x2e4>)
 8002ba6:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002baa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002bae:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8002bb2:	f7fd ff9b 	bl	8000aec <__aeabi_dcmplt>
 8002bb6:	2800      	cmp	r0, #0
 8002bb8:	d049      	beq.n	8002c4e <_dtoa_r+0x216>
 8002bba:	3f01      	subs	r7, #1
 8002bbc:	2300      	movs	r3, #0
 8002bbe:	9310      	str	r3, [sp, #64]	@ 0x40
 8002bc0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8002bc2:	1b9b      	subs	r3, r3, r6
 8002bc4:	1e5a      	subs	r2, r3, #1
 8002bc6:	bf45      	ittet	mi
 8002bc8:	f1c3 0301 	rsbmi	r3, r3, #1
 8002bcc:	9300      	strmi	r3, [sp, #0]
 8002bce:	2300      	movpl	r3, #0
 8002bd0:	2300      	movmi	r3, #0
 8002bd2:	9206      	str	r2, [sp, #24]
 8002bd4:	bf54      	ite	pl
 8002bd6:	9300      	strpl	r3, [sp, #0]
 8002bd8:	9306      	strmi	r3, [sp, #24]
 8002bda:	2f00      	cmp	r7, #0
 8002bdc:	db39      	blt.n	8002c52 <_dtoa_r+0x21a>
 8002bde:	9b06      	ldr	r3, [sp, #24]
 8002be0:	970d      	str	r7, [sp, #52]	@ 0x34
 8002be2:	443b      	add	r3, r7
 8002be4:	9306      	str	r3, [sp, #24]
 8002be6:	2300      	movs	r3, #0
 8002be8:	9308      	str	r3, [sp, #32]
 8002bea:	9b07      	ldr	r3, [sp, #28]
 8002bec:	2b09      	cmp	r3, #9
 8002bee:	d863      	bhi.n	8002cb8 <_dtoa_r+0x280>
 8002bf0:	2b05      	cmp	r3, #5
 8002bf2:	bfc4      	itt	gt
 8002bf4:	3b04      	subgt	r3, #4
 8002bf6:	9307      	strgt	r3, [sp, #28]
 8002bf8:	9b07      	ldr	r3, [sp, #28]
 8002bfa:	f1a3 0302 	sub.w	r3, r3, #2
 8002bfe:	bfcc      	ite	gt
 8002c00:	2400      	movgt	r4, #0
 8002c02:	2401      	movle	r4, #1
 8002c04:	2b03      	cmp	r3, #3
 8002c06:	d863      	bhi.n	8002cd0 <_dtoa_r+0x298>
 8002c08:	e8df f003 	tbb	[pc, r3]
 8002c0c:	2b375452 	.word	0x2b375452
 8002c10:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 8002c14:	441e      	add	r6, r3
 8002c16:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8002c1a:	2b20      	cmp	r3, #32
 8002c1c:	bfc1      	itttt	gt
 8002c1e:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8002c22:	409f      	lslgt	r7, r3
 8002c24:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8002c28:	fa24 f303 	lsrgt.w	r3, r4, r3
 8002c2c:	bfd6      	itet	le
 8002c2e:	f1c3 0320 	rsble	r3, r3, #32
 8002c32:	ea47 0003 	orrgt.w	r0, r7, r3
 8002c36:	fa04 f003 	lslle.w	r0, r4, r3
 8002c3a:	f7fd fc6b 	bl	8000514 <__aeabi_ui2d>
 8002c3e:	2201      	movs	r2, #1
 8002c40:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8002c44:	3e01      	subs	r6, #1
 8002c46:	9212      	str	r2, [sp, #72]	@ 0x48
 8002c48:	e776      	b.n	8002b38 <_dtoa_r+0x100>
 8002c4a:	2301      	movs	r3, #1
 8002c4c:	e7b7      	b.n	8002bbe <_dtoa_r+0x186>
 8002c4e:	9010      	str	r0, [sp, #64]	@ 0x40
 8002c50:	e7b6      	b.n	8002bc0 <_dtoa_r+0x188>
 8002c52:	9b00      	ldr	r3, [sp, #0]
 8002c54:	1bdb      	subs	r3, r3, r7
 8002c56:	9300      	str	r3, [sp, #0]
 8002c58:	427b      	negs	r3, r7
 8002c5a:	9308      	str	r3, [sp, #32]
 8002c5c:	2300      	movs	r3, #0
 8002c5e:	930d      	str	r3, [sp, #52]	@ 0x34
 8002c60:	e7c3      	b.n	8002bea <_dtoa_r+0x1b2>
 8002c62:	2301      	movs	r3, #1
 8002c64:	9309      	str	r3, [sp, #36]	@ 0x24
 8002c66:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8002c68:	eb07 0b03 	add.w	fp, r7, r3
 8002c6c:	f10b 0301 	add.w	r3, fp, #1
 8002c70:	2b01      	cmp	r3, #1
 8002c72:	9303      	str	r3, [sp, #12]
 8002c74:	bfb8      	it	lt
 8002c76:	2301      	movlt	r3, #1
 8002c78:	e006      	b.n	8002c88 <_dtoa_r+0x250>
 8002c7a:	2301      	movs	r3, #1
 8002c7c:	9309      	str	r3, [sp, #36]	@ 0x24
 8002c7e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8002c80:	2b00      	cmp	r3, #0
 8002c82:	dd28      	ble.n	8002cd6 <_dtoa_r+0x29e>
 8002c84:	469b      	mov	fp, r3
 8002c86:	9303      	str	r3, [sp, #12]
 8002c88:	f8d9 001c 	ldr.w	r0, [r9, #28]
 8002c8c:	2100      	movs	r1, #0
 8002c8e:	2204      	movs	r2, #4
 8002c90:	f102 0514 	add.w	r5, r2, #20
 8002c94:	429d      	cmp	r5, r3
 8002c96:	d926      	bls.n	8002ce6 <_dtoa_r+0x2ae>
 8002c98:	6041      	str	r1, [r0, #4]
 8002c9a:	4648      	mov	r0, r9
 8002c9c:	f000 fd9c 	bl	80037d8 <_Balloc>
 8002ca0:	4682      	mov	sl, r0
 8002ca2:	2800      	cmp	r0, #0
 8002ca4:	d142      	bne.n	8002d2c <_dtoa_r+0x2f4>
 8002ca6:	4b1e      	ldr	r3, [pc, #120]	@ (8002d20 <_dtoa_r+0x2e8>)
 8002ca8:	4602      	mov	r2, r0
 8002caa:	f240 11af 	movw	r1, #431	@ 0x1af
 8002cae:	e6da      	b.n	8002a66 <_dtoa_r+0x2e>
 8002cb0:	2300      	movs	r3, #0
 8002cb2:	e7e3      	b.n	8002c7c <_dtoa_r+0x244>
 8002cb4:	2300      	movs	r3, #0
 8002cb6:	e7d5      	b.n	8002c64 <_dtoa_r+0x22c>
 8002cb8:	2401      	movs	r4, #1
 8002cba:	2300      	movs	r3, #0
 8002cbc:	9307      	str	r3, [sp, #28]
 8002cbe:	9409      	str	r4, [sp, #36]	@ 0x24
 8002cc0:	f04f 3bff 	mov.w	fp, #4294967295
 8002cc4:	2200      	movs	r2, #0
 8002cc6:	f8cd b00c 	str.w	fp, [sp, #12]
 8002cca:	2312      	movs	r3, #18
 8002ccc:	920c      	str	r2, [sp, #48]	@ 0x30
 8002cce:	e7db      	b.n	8002c88 <_dtoa_r+0x250>
 8002cd0:	2301      	movs	r3, #1
 8002cd2:	9309      	str	r3, [sp, #36]	@ 0x24
 8002cd4:	e7f4      	b.n	8002cc0 <_dtoa_r+0x288>
 8002cd6:	f04f 0b01 	mov.w	fp, #1
 8002cda:	f8cd b00c 	str.w	fp, [sp, #12]
 8002cde:	465b      	mov	r3, fp
 8002ce0:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 8002ce4:	e7d0      	b.n	8002c88 <_dtoa_r+0x250>
 8002ce6:	3101      	adds	r1, #1
 8002ce8:	0052      	lsls	r2, r2, #1
 8002cea:	e7d1      	b.n	8002c90 <_dtoa_r+0x258>
 8002cec:	f3af 8000 	nop.w
 8002cf0:	636f4361 	.word	0x636f4361
 8002cf4:	3fd287a7 	.word	0x3fd287a7
 8002cf8:	8b60c8b3 	.word	0x8b60c8b3
 8002cfc:	3fc68a28 	.word	0x3fc68a28
 8002d00:	509f79fb 	.word	0x509f79fb
 8002d04:	3fd34413 	.word	0x3fd34413
 8002d08:	08004b00 	.word	0x08004b00
 8002d0c:	08004b17 	.word	0x08004b17
 8002d10:	7ff00000 	.word	0x7ff00000
 8002d14:	08004ad0 	.word	0x08004ad0
 8002d18:	3ff80000 	.word	0x3ff80000
 8002d1c:	08004c68 	.word	0x08004c68
 8002d20:	08004b6f 	.word	0x08004b6f
 8002d24:	08004afc 	.word	0x08004afc
 8002d28:	08004acf 	.word	0x08004acf
 8002d2c:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8002d30:	6018      	str	r0, [r3, #0]
 8002d32:	9b03      	ldr	r3, [sp, #12]
 8002d34:	2b0e      	cmp	r3, #14
 8002d36:	f200 80a1 	bhi.w	8002e7c <_dtoa_r+0x444>
 8002d3a:	2c00      	cmp	r4, #0
 8002d3c:	f000 809e 	beq.w	8002e7c <_dtoa_r+0x444>
 8002d40:	2f00      	cmp	r7, #0
 8002d42:	dd33      	ble.n	8002dac <_dtoa_r+0x374>
 8002d44:	4b9c      	ldr	r3, [pc, #624]	@ (8002fb8 <_dtoa_r+0x580>)
 8002d46:	f007 020f 	and.w	r2, r7, #15
 8002d4a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002d4e:	ed93 7b00 	vldr	d7, [r3]
 8002d52:	05f8      	lsls	r0, r7, #23
 8002d54:	ed8d 7b0e 	vstr	d7, [sp, #56]	@ 0x38
 8002d58:	ea4f 1427 	mov.w	r4, r7, asr #4
 8002d5c:	d516      	bpl.n	8002d8c <_dtoa_r+0x354>
 8002d5e:	4b97      	ldr	r3, [pc, #604]	@ (8002fbc <_dtoa_r+0x584>)
 8002d60:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8002d64:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002d68:	f7fd fd78 	bl	800085c <__aeabi_ddiv>
 8002d6c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002d70:	f004 040f 	and.w	r4, r4, #15
 8002d74:	2603      	movs	r6, #3
 8002d76:	4d91      	ldr	r5, [pc, #580]	@ (8002fbc <_dtoa_r+0x584>)
 8002d78:	b954      	cbnz	r4, 8002d90 <_dtoa_r+0x358>
 8002d7a:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8002d7e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002d82:	f7fd fd6b 	bl	800085c <__aeabi_ddiv>
 8002d86:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002d8a:	e028      	b.n	8002dde <_dtoa_r+0x3a6>
 8002d8c:	2602      	movs	r6, #2
 8002d8e:	e7f2      	b.n	8002d76 <_dtoa_r+0x33e>
 8002d90:	07e1      	lsls	r1, r4, #31
 8002d92:	d508      	bpl.n	8002da6 <_dtoa_r+0x36e>
 8002d94:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8002d98:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002d9c:	f7fd fc34 	bl	8000608 <__aeabi_dmul>
 8002da0:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8002da4:	3601      	adds	r6, #1
 8002da6:	1064      	asrs	r4, r4, #1
 8002da8:	3508      	adds	r5, #8
 8002daa:	e7e5      	b.n	8002d78 <_dtoa_r+0x340>
 8002dac:	f000 80af 	beq.w	8002f0e <_dtoa_r+0x4d6>
 8002db0:	427c      	negs	r4, r7
 8002db2:	4b81      	ldr	r3, [pc, #516]	@ (8002fb8 <_dtoa_r+0x580>)
 8002db4:	4d81      	ldr	r5, [pc, #516]	@ (8002fbc <_dtoa_r+0x584>)
 8002db6:	f004 020f 	and.w	r2, r4, #15
 8002dba:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002dbe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002dc2:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8002dc6:	f7fd fc1f 	bl	8000608 <__aeabi_dmul>
 8002dca:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002dce:	1124      	asrs	r4, r4, #4
 8002dd0:	2300      	movs	r3, #0
 8002dd2:	2602      	movs	r6, #2
 8002dd4:	2c00      	cmp	r4, #0
 8002dd6:	f040 808f 	bne.w	8002ef8 <_dtoa_r+0x4c0>
 8002dda:	2b00      	cmp	r3, #0
 8002ddc:	d1d3      	bne.n	8002d86 <_dtoa_r+0x34e>
 8002dde:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8002de0:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8002de4:	2b00      	cmp	r3, #0
 8002de6:	f000 8094 	beq.w	8002f12 <_dtoa_r+0x4da>
 8002dea:	4b75      	ldr	r3, [pc, #468]	@ (8002fc0 <_dtoa_r+0x588>)
 8002dec:	2200      	movs	r2, #0
 8002dee:	4620      	mov	r0, r4
 8002df0:	4629      	mov	r1, r5
 8002df2:	f7fd fe7b 	bl	8000aec <__aeabi_dcmplt>
 8002df6:	2800      	cmp	r0, #0
 8002df8:	f000 808b 	beq.w	8002f12 <_dtoa_r+0x4da>
 8002dfc:	9b03      	ldr	r3, [sp, #12]
 8002dfe:	2b00      	cmp	r3, #0
 8002e00:	f000 8087 	beq.w	8002f12 <_dtoa_r+0x4da>
 8002e04:	f1bb 0f00 	cmp.w	fp, #0
 8002e08:	dd34      	ble.n	8002e74 <_dtoa_r+0x43c>
 8002e0a:	4620      	mov	r0, r4
 8002e0c:	4b6d      	ldr	r3, [pc, #436]	@ (8002fc4 <_dtoa_r+0x58c>)
 8002e0e:	2200      	movs	r2, #0
 8002e10:	4629      	mov	r1, r5
 8002e12:	f7fd fbf9 	bl	8000608 <__aeabi_dmul>
 8002e16:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002e1a:	f107 38ff 	add.w	r8, r7, #4294967295
 8002e1e:	3601      	adds	r6, #1
 8002e20:	465c      	mov	r4, fp
 8002e22:	4630      	mov	r0, r6
 8002e24:	f7fd fb86 	bl	8000534 <__aeabi_i2d>
 8002e28:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002e2c:	f7fd fbec 	bl	8000608 <__aeabi_dmul>
 8002e30:	4b65      	ldr	r3, [pc, #404]	@ (8002fc8 <_dtoa_r+0x590>)
 8002e32:	2200      	movs	r2, #0
 8002e34:	f7fd fa32 	bl	800029c <__adddf3>
 8002e38:	4605      	mov	r5, r0
 8002e3a:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8002e3e:	2c00      	cmp	r4, #0
 8002e40:	d16a      	bne.n	8002f18 <_dtoa_r+0x4e0>
 8002e42:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002e46:	4b61      	ldr	r3, [pc, #388]	@ (8002fcc <_dtoa_r+0x594>)
 8002e48:	2200      	movs	r2, #0
 8002e4a:	f7fd fa25 	bl	8000298 <__aeabi_dsub>
 8002e4e:	4602      	mov	r2, r0
 8002e50:	460b      	mov	r3, r1
 8002e52:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002e56:	462a      	mov	r2, r5
 8002e58:	4633      	mov	r3, r6
 8002e5a:	f7fd fe65 	bl	8000b28 <__aeabi_dcmpgt>
 8002e5e:	2800      	cmp	r0, #0
 8002e60:	f040 8298 	bne.w	8003394 <_dtoa_r+0x95c>
 8002e64:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002e68:	462a      	mov	r2, r5
 8002e6a:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8002e6e:	f7fd fe3d 	bl	8000aec <__aeabi_dcmplt>
 8002e72:	bb38      	cbnz	r0, 8002ec4 <_dtoa_r+0x48c>
 8002e74:	e9dd 340a 	ldrd	r3, r4, [sp, #40]	@ 0x28
 8002e78:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8002e7c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8002e7e:	2b00      	cmp	r3, #0
 8002e80:	f2c0 8157 	blt.w	8003132 <_dtoa_r+0x6fa>
 8002e84:	2f0e      	cmp	r7, #14
 8002e86:	f300 8154 	bgt.w	8003132 <_dtoa_r+0x6fa>
 8002e8a:	4b4b      	ldr	r3, [pc, #300]	@ (8002fb8 <_dtoa_r+0x580>)
 8002e8c:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002e90:	ed93 7b00 	vldr	d7, [r3]
 8002e94:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8002e96:	2b00      	cmp	r3, #0
 8002e98:	ed8d 7b00 	vstr	d7, [sp]
 8002e9c:	f280 80e5 	bge.w	800306a <_dtoa_r+0x632>
 8002ea0:	9b03      	ldr	r3, [sp, #12]
 8002ea2:	2b00      	cmp	r3, #0
 8002ea4:	f300 80e1 	bgt.w	800306a <_dtoa_r+0x632>
 8002ea8:	d10c      	bne.n	8002ec4 <_dtoa_r+0x48c>
 8002eaa:	4b48      	ldr	r3, [pc, #288]	@ (8002fcc <_dtoa_r+0x594>)
 8002eac:	2200      	movs	r2, #0
 8002eae:	ec51 0b17 	vmov	r0, r1, d7
 8002eb2:	f7fd fba9 	bl	8000608 <__aeabi_dmul>
 8002eb6:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002eba:	f7fd fe2b 	bl	8000b14 <__aeabi_dcmpge>
 8002ebe:	2800      	cmp	r0, #0
 8002ec0:	f000 8266 	beq.w	8003390 <_dtoa_r+0x958>
 8002ec4:	2400      	movs	r4, #0
 8002ec6:	4625      	mov	r5, r4
 8002ec8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8002eca:	4656      	mov	r6, sl
 8002ecc:	ea6f 0803 	mvn.w	r8, r3
 8002ed0:	2700      	movs	r7, #0
 8002ed2:	4621      	mov	r1, r4
 8002ed4:	4648      	mov	r0, r9
 8002ed6:	f000 fcbf 	bl	8003858 <_Bfree>
 8002eda:	2d00      	cmp	r5, #0
 8002edc:	f000 80bd 	beq.w	800305a <_dtoa_r+0x622>
 8002ee0:	b12f      	cbz	r7, 8002eee <_dtoa_r+0x4b6>
 8002ee2:	42af      	cmp	r7, r5
 8002ee4:	d003      	beq.n	8002eee <_dtoa_r+0x4b6>
 8002ee6:	4639      	mov	r1, r7
 8002ee8:	4648      	mov	r0, r9
 8002eea:	f000 fcb5 	bl	8003858 <_Bfree>
 8002eee:	4629      	mov	r1, r5
 8002ef0:	4648      	mov	r0, r9
 8002ef2:	f000 fcb1 	bl	8003858 <_Bfree>
 8002ef6:	e0b0      	b.n	800305a <_dtoa_r+0x622>
 8002ef8:	07e2      	lsls	r2, r4, #31
 8002efa:	d505      	bpl.n	8002f08 <_dtoa_r+0x4d0>
 8002efc:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002f00:	f7fd fb82 	bl	8000608 <__aeabi_dmul>
 8002f04:	3601      	adds	r6, #1
 8002f06:	2301      	movs	r3, #1
 8002f08:	1064      	asrs	r4, r4, #1
 8002f0a:	3508      	adds	r5, #8
 8002f0c:	e762      	b.n	8002dd4 <_dtoa_r+0x39c>
 8002f0e:	2602      	movs	r6, #2
 8002f10:	e765      	b.n	8002dde <_dtoa_r+0x3a6>
 8002f12:	9c03      	ldr	r4, [sp, #12]
 8002f14:	46b8      	mov	r8, r7
 8002f16:	e784      	b.n	8002e22 <_dtoa_r+0x3ea>
 8002f18:	4b27      	ldr	r3, [pc, #156]	@ (8002fb8 <_dtoa_r+0x580>)
 8002f1a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8002f1c:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8002f20:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8002f24:	4454      	add	r4, sl
 8002f26:	2900      	cmp	r1, #0
 8002f28:	d054      	beq.n	8002fd4 <_dtoa_r+0x59c>
 8002f2a:	4929      	ldr	r1, [pc, #164]	@ (8002fd0 <_dtoa_r+0x598>)
 8002f2c:	2000      	movs	r0, #0
 8002f2e:	f7fd fc95 	bl	800085c <__aeabi_ddiv>
 8002f32:	4633      	mov	r3, r6
 8002f34:	462a      	mov	r2, r5
 8002f36:	f7fd f9af 	bl	8000298 <__aeabi_dsub>
 8002f3a:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8002f3e:	4656      	mov	r6, sl
 8002f40:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002f44:	f7fd fe10 	bl	8000b68 <__aeabi_d2iz>
 8002f48:	4605      	mov	r5, r0
 8002f4a:	f7fd faf3 	bl	8000534 <__aeabi_i2d>
 8002f4e:	4602      	mov	r2, r0
 8002f50:	460b      	mov	r3, r1
 8002f52:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002f56:	f7fd f99f 	bl	8000298 <__aeabi_dsub>
 8002f5a:	3530      	adds	r5, #48	@ 0x30
 8002f5c:	4602      	mov	r2, r0
 8002f5e:	460b      	mov	r3, r1
 8002f60:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002f64:	f806 5b01 	strb.w	r5, [r6], #1
 8002f68:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8002f6c:	f7fd fdbe 	bl	8000aec <__aeabi_dcmplt>
 8002f70:	2800      	cmp	r0, #0
 8002f72:	d172      	bne.n	800305a <_dtoa_r+0x622>
 8002f74:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002f78:	4911      	ldr	r1, [pc, #68]	@ (8002fc0 <_dtoa_r+0x588>)
 8002f7a:	2000      	movs	r0, #0
 8002f7c:	f7fd f98c 	bl	8000298 <__aeabi_dsub>
 8002f80:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8002f84:	f7fd fdb2 	bl	8000aec <__aeabi_dcmplt>
 8002f88:	2800      	cmp	r0, #0
 8002f8a:	f040 80b4 	bne.w	80030f6 <_dtoa_r+0x6be>
 8002f8e:	42a6      	cmp	r6, r4
 8002f90:	f43f af70 	beq.w	8002e74 <_dtoa_r+0x43c>
 8002f94:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8002f98:	4b0a      	ldr	r3, [pc, #40]	@ (8002fc4 <_dtoa_r+0x58c>)
 8002f9a:	2200      	movs	r2, #0
 8002f9c:	f7fd fb34 	bl	8000608 <__aeabi_dmul>
 8002fa0:	4b08      	ldr	r3, [pc, #32]	@ (8002fc4 <_dtoa_r+0x58c>)
 8002fa2:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8002fa6:	2200      	movs	r2, #0
 8002fa8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002fac:	f7fd fb2c 	bl	8000608 <__aeabi_dmul>
 8002fb0:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002fb4:	e7c4      	b.n	8002f40 <_dtoa_r+0x508>
 8002fb6:	bf00      	nop
 8002fb8:	08004c68 	.word	0x08004c68
 8002fbc:	08004c40 	.word	0x08004c40
 8002fc0:	3ff00000 	.word	0x3ff00000
 8002fc4:	40240000 	.word	0x40240000
 8002fc8:	401c0000 	.word	0x401c0000
 8002fcc:	40140000 	.word	0x40140000
 8002fd0:	3fe00000 	.word	0x3fe00000
 8002fd4:	4631      	mov	r1, r6
 8002fd6:	4628      	mov	r0, r5
 8002fd8:	f7fd fb16 	bl	8000608 <__aeabi_dmul>
 8002fdc:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8002fe0:	9413      	str	r4, [sp, #76]	@ 0x4c
 8002fe2:	4656      	mov	r6, sl
 8002fe4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002fe8:	f7fd fdbe 	bl	8000b68 <__aeabi_d2iz>
 8002fec:	4605      	mov	r5, r0
 8002fee:	f7fd faa1 	bl	8000534 <__aeabi_i2d>
 8002ff2:	4602      	mov	r2, r0
 8002ff4:	460b      	mov	r3, r1
 8002ff6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002ffa:	f7fd f94d 	bl	8000298 <__aeabi_dsub>
 8002ffe:	3530      	adds	r5, #48	@ 0x30
 8003000:	f806 5b01 	strb.w	r5, [r6], #1
 8003004:	4602      	mov	r2, r0
 8003006:	460b      	mov	r3, r1
 8003008:	42a6      	cmp	r6, r4
 800300a:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800300e:	f04f 0200 	mov.w	r2, #0
 8003012:	d124      	bne.n	800305e <_dtoa_r+0x626>
 8003014:	4baf      	ldr	r3, [pc, #700]	@ (80032d4 <_dtoa_r+0x89c>)
 8003016:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 800301a:	f7fd f93f 	bl	800029c <__adddf3>
 800301e:	4602      	mov	r2, r0
 8003020:	460b      	mov	r3, r1
 8003022:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003026:	f7fd fd7f 	bl	8000b28 <__aeabi_dcmpgt>
 800302a:	2800      	cmp	r0, #0
 800302c:	d163      	bne.n	80030f6 <_dtoa_r+0x6be>
 800302e:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8003032:	49a8      	ldr	r1, [pc, #672]	@ (80032d4 <_dtoa_r+0x89c>)
 8003034:	2000      	movs	r0, #0
 8003036:	f7fd f92f 	bl	8000298 <__aeabi_dsub>
 800303a:	4602      	mov	r2, r0
 800303c:	460b      	mov	r3, r1
 800303e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003042:	f7fd fd53 	bl	8000aec <__aeabi_dcmplt>
 8003046:	2800      	cmp	r0, #0
 8003048:	f43f af14 	beq.w	8002e74 <_dtoa_r+0x43c>
 800304c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 800304e:	1e73      	subs	r3, r6, #1
 8003050:	9313      	str	r3, [sp, #76]	@ 0x4c
 8003052:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8003056:	2b30      	cmp	r3, #48	@ 0x30
 8003058:	d0f8      	beq.n	800304c <_dtoa_r+0x614>
 800305a:	4647      	mov	r7, r8
 800305c:	e03b      	b.n	80030d6 <_dtoa_r+0x69e>
 800305e:	4b9e      	ldr	r3, [pc, #632]	@ (80032d8 <_dtoa_r+0x8a0>)
 8003060:	f7fd fad2 	bl	8000608 <__aeabi_dmul>
 8003064:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8003068:	e7bc      	b.n	8002fe4 <_dtoa_r+0x5ac>
 800306a:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 800306e:	4656      	mov	r6, sl
 8003070:	e9dd 2300 	ldrd	r2, r3, [sp]
 8003074:	4620      	mov	r0, r4
 8003076:	4629      	mov	r1, r5
 8003078:	f7fd fbf0 	bl	800085c <__aeabi_ddiv>
 800307c:	f7fd fd74 	bl	8000b68 <__aeabi_d2iz>
 8003080:	4680      	mov	r8, r0
 8003082:	f7fd fa57 	bl	8000534 <__aeabi_i2d>
 8003086:	e9dd 2300 	ldrd	r2, r3, [sp]
 800308a:	f7fd fabd 	bl	8000608 <__aeabi_dmul>
 800308e:	4602      	mov	r2, r0
 8003090:	460b      	mov	r3, r1
 8003092:	4620      	mov	r0, r4
 8003094:	4629      	mov	r1, r5
 8003096:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 800309a:	f7fd f8fd 	bl	8000298 <__aeabi_dsub>
 800309e:	f806 4b01 	strb.w	r4, [r6], #1
 80030a2:	9d03      	ldr	r5, [sp, #12]
 80030a4:	eba6 040a 	sub.w	r4, r6, sl
 80030a8:	42a5      	cmp	r5, r4
 80030aa:	4602      	mov	r2, r0
 80030ac:	460b      	mov	r3, r1
 80030ae:	d133      	bne.n	8003118 <_dtoa_r+0x6e0>
 80030b0:	f7fd f8f4 	bl	800029c <__adddf3>
 80030b4:	e9dd 2300 	ldrd	r2, r3, [sp]
 80030b8:	4604      	mov	r4, r0
 80030ba:	460d      	mov	r5, r1
 80030bc:	f7fd fd34 	bl	8000b28 <__aeabi_dcmpgt>
 80030c0:	b9c0      	cbnz	r0, 80030f4 <_dtoa_r+0x6bc>
 80030c2:	e9dd 2300 	ldrd	r2, r3, [sp]
 80030c6:	4620      	mov	r0, r4
 80030c8:	4629      	mov	r1, r5
 80030ca:	f7fd fd05 	bl	8000ad8 <__aeabi_dcmpeq>
 80030ce:	b110      	cbz	r0, 80030d6 <_dtoa_r+0x69e>
 80030d0:	f018 0f01 	tst.w	r8, #1
 80030d4:	d10e      	bne.n	80030f4 <_dtoa_r+0x6bc>
 80030d6:	9902      	ldr	r1, [sp, #8]
 80030d8:	4648      	mov	r0, r9
 80030da:	f000 fbbd 	bl	8003858 <_Bfree>
 80030de:	2300      	movs	r3, #0
 80030e0:	7033      	strb	r3, [r6, #0]
 80030e2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80030e4:	3701      	adds	r7, #1
 80030e6:	601f      	str	r7, [r3, #0]
 80030e8:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80030ea:	2b00      	cmp	r3, #0
 80030ec:	f000 824b 	beq.w	8003586 <_dtoa_r+0xb4e>
 80030f0:	601e      	str	r6, [r3, #0]
 80030f2:	e248      	b.n	8003586 <_dtoa_r+0xb4e>
 80030f4:	46b8      	mov	r8, r7
 80030f6:	4633      	mov	r3, r6
 80030f8:	461e      	mov	r6, r3
 80030fa:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80030fe:	2a39      	cmp	r2, #57	@ 0x39
 8003100:	d106      	bne.n	8003110 <_dtoa_r+0x6d8>
 8003102:	459a      	cmp	sl, r3
 8003104:	d1f8      	bne.n	80030f8 <_dtoa_r+0x6c0>
 8003106:	2230      	movs	r2, #48	@ 0x30
 8003108:	f108 0801 	add.w	r8, r8, #1
 800310c:	f88a 2000 	strb.w	r2, [sl]
 8003110:	781a      	ldrb	r2, [r3, #0]
 8003112:	3201      	adds	r2, #1
 8003114:	701a      	strb	r2, [r3, #0]
 8003116:	e7a0      	b.n	800305a <_dtoa_r+0x622>
 8003118:	4b6f      	ldr	r3, [pc, #444]	@ (80032d8 <_dtoa_r+0x8a0>)
 800311a:	2200      	movs	r2, #0
 800311c:	f7fd fa74 	bl	8000608 <__aeabi_dmul>
 8003120:	2200      	movs	r2, #0
 8003122:	2300      	movs	r3, #0
 8003124:	4604      	mov	r4, r0
 8003126:	460d      	mov	r5, r1
 8003128:	f7fd fcd6 	bl	8000ad8 <__aeabi_dcmpeq>
 800312c:	2800      	cmp	r0, #0
 800312e:	d09f      	beq.n	8003070 <_dtoa_r+0x638>
 8003130:	e7d1      	b.n	80030d6 <_dtoa_r+0x69e>
 8003132:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003134:	2a00      	cmp	r2, #0
 8003136:	f000 80ea 	beq.w	800330e <_dtoa_r+0x8d6>
 800313a:	9a07      	ldr	r2, [sp, #28]
 800313c:	2a01      	cmp	r2, #1
 800313e:	f300 80cd 	bgt.w	80032dc <_dtoa_r+0x8a4>
 8003142:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8003144:	2a00      	cmp	r2, #0
 8003146:	f000 80c1 	beq.w	80032cc <_dtoa_r+0x894>
 800314a:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 800314e:	9c08      	ldr	r4, [sp, #32]
 8003150:	9e00      	ldr	r6, [sp, #0]
 8003152:	9a00      	ldr	r2, [sp, #0]
 8003154:	441a      	add	r2, r3
 8003156:	9200      	str	r2, [sp, #0]
 8003158:	9a06      	ldr	r2, [sp, #24]
 800315a:	2101      	movs	r1, #1
 800315c:	441a      	add	r2, r3
 800315e:	4648      	mov	r0, r9
 8003160:	9206      	str	r2, [sp, #24]
 8003162:	f000 fc2d 	bl	80039c0 <__i2b>
 8003166:	4605      	mov	r5, r0
 8003168:	b166      	cbz	r6, 8003184 <_dtoa_r+0x74c>
 800316a:	9b06      	ldr	r3, [sp, #24]
 800316c:	2b00      	cmp	r3, #0
 800316e:	dd09      	ble.n	8003184 <_dtoa_r+0x74c>
 8003170:	42b3      	cmp	r3, r6
 8003172:	9a00      	ldr	r2, [sp, #0]
 8003174:	bfa8      	it	ge
 8003176:	4633      	movge	r3, r6
 8003178:	1ad2      	subs	r2, r2, r3
 800317a:	9200      	str	r2, [sp, #0]
 800317c:	9a06      	ldr	r2, [sp, #24]
 800317e:	1af6      	subs	r6, r6, r3
 8003180:	1ad3      	subs	r3, r2, r3
 8003182:	9306      	str	r3, [sp, #24]
 8003184:	9b08      	ldr	r3, [sp, #32]
 8003186:	b30b      	cbz	r3, 80031cc <_dtoa_r+0x794>
 8003188:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800318a:	2b00      	cmp	r3, #0
 800318c:	f000 80c6 	beq.w	800331c <_dtoa_r+0x8e4>
 8003190:	2c00      	cmp	r4, #0
 8003192:	f000 80c0 	beq.w	8003316 <_dtoa_r+0x8de>
 8003196:	4629      	mov	r1, r5
 8003198:	4622      	mov	r2, r4
 800319a:	4648      	mov	r0, r9
 800319c:	f000 fcc8 	bl	8003b30 <__pow5mult>
 80031a0:	9a02      	ldr	r2, [sp, #8]
 80031a2:	4601      	mov	r1, r0
 80031a4:	4605      	mov	r5, r0
 80031a6:	4648      	mov	r0, r9
 80031a8:	f000 fc20 	bl	80039ec <__multiply>
 80031ac:	9902      	ldr	r1, [sp, #8]
 80031ae:	4680      	mov	r8, r0
 80031b0:	4648      	mov	r0, r9
 80031b2:	f000 fb51 	bl	8003858 <_Bfree>
 80031b6:	9b08      	ldr	r3, [sp, #32]
 80031b8:	1b1b      	subs	r3, r3, r4
 80031ba:	9308      	str	r3, [sp, #32]
 80031bc:	f000 80b1 	beq.w	8003322 <_dtoa_r+0x8ea>
 80031c0:	9a08      	ldr	r2, [sp, #32]
 80031c2:	4641      	mov	r1, r8
 80031c4:	4648      	mov	r0, r9
 80031c6:	f000 fcb3 	bl	8003b30 <__pow5mult>
 80031ca:	9002      	str	r0, [sp, #8]
 80031cc:	2101      	movs	r1, #1
 80031ce:	4648      	mov	r0, r9
 80031d0:	f000 fbf6 	bl	80039c0 <__i2b>
 80031d4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80031d6:	4604      	mov	r4, r0
 80031d8:	2b00      	cmp	r3, #0
 80031da:	f000 81d8 	beq.w	800358e <_dtoa_r+0xb56>
 80031de:	461a      	mov	r2, r3
 80031e0:	4601      	mov	r1, r0
 80031e2:	4648      	mov	r0, r9
 80031e4:	f000 fca4 	bl	8003b30 <__pow5mult>
 80031e8:	9b07      	ldr	r3, [sp, #28]
 80031ea:	2b01      	cmp	r3, #1
 80031ec:	4604      	mov	r4, r0
 80031ee:	f300 809f 	bgt.w	8003330 <_dtoa_r+0x8f8>
 80031f2:	9b04      	ldr	r3, [sp, #16]
 80031f4:	2b00      	cmp	r3, #0
 80031f6:	f040 8097 	bne.w	8003328 <_dtoa_r+0x8f0>
 80031fa:	9b05      	ldr	r3, [sp, #20]
 80031fc:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003200:	2b00      	cmp	r3, #0
 8003202:	f040 8093 	bne.w	800332c <_dtoa_r+0x8f4>
 8003206:	9b05      	ldr	r3, [sp, #20]
 8003208:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800320c:	0d1b      	lsrs	r3, r3, #20
 800320e:	051b      	lsls	r3, r3, #20
 8003210:	b133      	cbz	r3, 8003220 <_dtoa_r+0x7e8>
 8003212:	9b00      	ldr	r3, [sp, #0]
 8003214:	3301      	adds	r3, #1
 8003216:	9300      	str	r3, [sp, #0]
 8003218:	9b06      	ldr	r3, [sp, #24]
 800321a:	3301      	adds	r3, #1
 800321c:	9306      	str	r3, [sp, #24]
 800321e:	2301      	movs	r3, #1
 8003220:	9308      	str	r3, [sp, #32]
 8003222:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003224:	2b00      	cmp	r3, #0
 8003226:	f000 81b8 	beq.w	800359a <_dtoa_r+0xb62>
 800322a:	6923      	ldr	r3, [r4, #16]
 800322c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8003230:	6918      	ldr	r0, [r3, #16]
 8003232:	f000 fb79 	bl	8003928 <__hi0bits>
 8003236:	f1c0 0020 	rsb	r0, r0, #32
 800323a:	9b06      	ldr	r3, [sp, #24]
 800323c:	4418      	add	r0, r3
 800323e:	f010 001f 	ands.w	r0, r0, #31
 8003242:	f000 8082 	beq.w	800334a <_dtoa_r+0x912>
 8003246:	f1c0 0320 	rsb	r3, r0, #32
 800324a:	2b04      	cmp	r3, #4
 800324c:	dd73      	ble.n	8003336 <_dtoa_r+0x8fe>
 800324e:	9b00      	ldr	r3, [sp, #0]
 8003250:	f1c0 001c 	rsb	r0, r0, #28
 8003254:	4403      	add	r3, r0
 8003256:	9300      	str	r3, [sp, #0]
 8003258:	9b06      	ldr	r3, [sp, #24]
 800325a:	4403      	add	r3, r0
 800325c:	4406      	add	r6, r0
 800325e:	9306      	str	r3, [sp, #24]
 8003260:	9b00      	ldr	r3, [sp, #0]
 8003262:	2b00      	cmp	r3, #0
 8003264:	dd05      	ble.n	8003272 <_dtoa_r+0x83a>
 8003266:	9902      	ldr	r1, [sp, #8]
 8003268:	461a      	mov	r2, r3
 800326a:	4648      	mov	r0, r9
 800326c:	f000 fcba 	bl	8003be4 <__lshift>
 8003270:	9002      	str	r0, [sp, #8]
 8003272:	9b06      	ldr	r3, [sp, #24]
 8003274:	2b00      	cmp	r3, #0
 8003276:	dd05      	ble.n	8003284 <_dtoa_r+0x84c>
 8003278:	4621      	mov	r1, r4
 800327a:	461a      	mov	r2, r3
 800327c:	4648      	mov	r0, r9
 800327e:	f000 fcb1 	bl	8003be4 <__lshift>
 8003282:	4604      	mov	r4, r0
 8003284:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8003286:	2b00      	cmp	r3, #0
 8003288:	d061      	beq.n	800334e <_dtoa_r+0x916>
 800328a:	9802      	ldr	r0, [sp, #8]
 800328c:	4621      	mov	r1, r4
 800328e:	f000 fd15 	bl	8003cbc <__mcmp>
 8003292:	2800      	cmp	r0, #0
 8003294:	da5b      	bge.n	800334e <_dtoa_r+0x916>
 8003296:	2300      	movs	r3, #0
 8003298:	9902      	ldr	r1, [sp, #8]
 800329a:	220a      	movs	r2, #10
 800329c:	4648      	mov	r0, r9
 800329e:	f000 fafd 	bl	800389c <__multadd>
 80032a2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80032a4:	9002      	str	r0, [sp, #8]
 80032a6:	f107 38ff 	add.w	r8, r7, #4294967295
 80032aa:	2b00      	cmp	r3, #0
 80032ac:	f000 8177 	beq.w	800359e <_dtoa_r+0xb66>
 80032b0:	4629      	mov	r1, r5
 80032b2:	2300      	movs	r3, #0
 80032b4:	220a      	movs	r2, #10
 80032b6:	4648      	mov	r0, r9
 80032b8:	f000 faf0 	bl	800389c <__multadd>
 80032bc:	f1bb 0f00 	cmp.w	fp, #0
 80032c0:	4605      	mov	r5, r0
 80032c2:	dc6f      	bgt.n	80033a4 <_dtoa_r+0x96c>
 80032c4:	9b07      	ldr	r3, [sp, #28]
 80032c6:	2b02      	cmp	r3, #2
 80032c8:	dc49      	bgt.n	800335e <_dtoa_r+0x926>
 80032ca:	e06b      	b.n	80033a4 <_dtoa_r+0x96c>
 80032cc:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80032ce:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 80032d2:	e73c      	b.n	800314e <_dtoa_r+0x716>
 80032d4:	3fe00000 	.word	0x3fe00000
 80032d8:	40240000 	.word	0x40240000
 80032dc:	9b03      	ldr	r3, [sp, #12]
 80032de:	1e5c      	subs	r4, r3, #1
 80032e0:	9b08      	ldr	r3, [sp, #32]
 80032e2:	42a3      	cmp	r3, r4
 80032e4:	db09      	blt.n	80032fa <_dtoa_r+0x8c2>
 80032e6:	1b1c      	subs	r4, r3, r4
 80032e8:	9b03      	ldr	r3, [sp, #12]
 80032ea:	2b00      	cmp	r3, #0
 80032ec:	f6bf af30 	bge.w	8003150 <_dtoa_r+0x718>
 80032f0:	9b00      	ldr	r3, [sp, #0]
 80032f2:	9a03      	ldr	r2, [sp, #12]
 80032f4:	1a9e      	subs	r6, r3, r2
 80032f6:	2300      	movs	r3, #0
 80032f8:	e72b      	b.n	8003152 <_dtoa_r+0x71a>
 80032fa:	9b08      	ldr	r3, [sp, #32]
 80032fc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80032fe:	9408      	str	r4, [sp, #32]
 8003300:	1ae3      	subs	r3, r4, r3
 8003302:	441a      	add	r2, r3
 8003304:	9e00      	ldr	r6, [sp, #0]
 8003306:	9b03      	ldr	r3, [sp, #12]
 8003308:	920d      	str	r2, [sp, #52]	@ 0x34
 800330a:	2400      	movs	r4, #0
 800330c:	e721      	b.n	8003152 <_dtoa_r+0x71a>
 800330e:	9c08      	ldr	r4, [sp, #32]
 8003310:	9e00      	ldr	r6, [sp, #0]
 8003312:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8003314:	e728      	b.n	8003168 <_dtoa_r+0x730>
 8003316:	f8dd 8008 	ldr.w	r8, [sp, #8]
 800331a:	e751      	b.n	80031c0 <_dtoa_r+0x788>
 800331c:	9a08      	ldr	r2, [sp, #32]
 800331e:	9902      	ldr	r1, [sp, #8]
 8003320:	e750      	b.n	80031c4 <_dtoa_r+0x78c>
 8003322:	f8cd 8008 	str.w	r8, [sp, #8]
 8003326:	e751      	b.n	80031cc <_dtoa_r+0x794>
 8003328:	2300      	movs	r3, #0
 800332a:	e779      	b.n	8003220 <_dtoa_r+0x7e8>
 800332c:	9b04      	ldr	r3, [sp, #16]
 800332e:	e777      	b.n	8003220 <_dtoa_r+0x7e8>
 8003330:	2300      	movs	r3, #0
 8003332:	9308      	str	r3, [sp, #32]
 8003334:	e779      	b.n	800322a <_dtoa_r+0x7f2>
 8003336:	d093      	beq.n	8003260 <_dtoa_r+0x828>
 8003338:	9a00      	ldr	r2, [sp, #0]
 800333a:	331c      	adds	r3, #28
 800333c:	441a      	add	r2, r3
 800333e:	9200      	str	r2, [sp, #0]
 8003340:	9a06      	ldr	r2, [sp, #24]
 8003342:	441a      	add	r2, r3
 8003344:	441e      	add	r6, r3
 8003346:	9206      	str	r2, [sp, #24]
 8003348:	e78a      	b.n	8003260 <_dtoa_r+0x828>
 800334a:	4603      	mov	r3, r0
 800334c:	e7f4      	b.n	8003338 <_dtoa_r+0x900>
 800334e:	9b03      	ldr	r3, [sp, #12]
 8003350:	2b00      	cmp	r3, #0
 8003352:	46b8      	mov	r8, r7
 8003354:	dc20      	bgt.n	8003398 <_dtoa_r+0x960>
 8003356:	469b      	mov	fp, r3
 8003358:	9b07      	ldr	r3, [sp, #28]
 800335a:	2b02      	cmp	r3, #2
 800335c:	dd1e      	ble.n	800339c <_dtoa_r+0x964>
 800335e:	f1bb 0f00 	cmp.w	fp, #0
 8003362:	f47f adb1 	bne.w	8002ec8 <_dtoa_r+0x490>
 8003366:	4621      	mov	r1, r4
 8003368:	465b      	mov	r3, fp
 800336a:	2205      	movs	r2, #5
 800336c:	4648      	mov	r0, r9
 800336e:	f000 fa95 	bl	800389c <__multadd>
 8003372:	4601      	mov	r1, r0
 8003374:	4604      	mov	r4, r0
 8003376:	9802      	ldr	r0, [sp, #8]
 8003378:	f000 fca0 	bl	8003cbc <__mcmp>
 800337c:	2800      	cmp	r0, #0
 800337e:	f77f ada3 	ble.w	8002ec8 <_dtoa_r+0x490>
 8003382:	4656      	mov	r6, sl
 8003384:	2331      	movs	r3, #49	@ 0x31
 8003386:	f806 3b01 	strb.w	r3, [r6], #1
 800338a:	f108 0801 	add.w	r8, r8, #1
 800338e:	e59f      	b.n	8002ed0 <_dtoa_r+0x498>
 8003390:	9c03      	ldr	r4, [sp, #12]
 8003392:	46b8      	mov	r8, r7
 8003394:	4625      	mov	r5, r4
 8003396:	e7f4      	b.n	8003382 <_dtoa_r+0x94a>
 8003398:	f8dd b00c 	ldr.w	fp, [sp, #12]
 800339c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800339e:	2b00      	cmp	r3, #0
 80033a0:	f000 8101 	beq.w	80035a6 <_dtoa_r+0xb6e>
 80033a4:	2e00      	cmp	r6, #0
 80033a6:	dd05      	ble.n	80033b4 <_dtoa_r+0x97c>
 80033a8:	4629      	mov	r1, r5
 80033aa:	4632      	mov	r2, r6
 80033ac:	4648      	mov	r0, r9
 80033ae:	f000 fc19 	bl	8003be4 <__lshift>
 80033b2:	4605      	mov	r5, r0
 80033b4:	9b08      	ldr	r3, [sp, #32]
 80033b6:	2b00      	cmp	r3, #0
 80033b8:	d05c      	beq.n	8003474 <_dtoa_r+0xa3c>
 80033ba:	6869      	ldr	r1, [r5, #4]
 80033bc:	4648      	mov	r0, r9
 80033be:	f000 fa0b 	bl	80037d8 <_Balloc>
 80033c2:	4606      	mov	r6, r0
 80033c4:	b928      	cbnz	r0, 80033d2 <_dtoa_r+0x99a>
 80033c6:	4b82      	ldr	r3, [pc, #520]	@ (80035d0 <_dtoa_r+0xb98>)
 80033c8:	4602      	mov	r2, r0
 80033ca:	f240 21ef 	movw	r1, #751	@ 0x2ef
 80033ce:	f7ff bb4a 	b.w	8002a66 <_dtoa_r+0x2e>
 80033d2:	692a      	ldr	r2, [r5, #16]
 80033d4:	3202      	adds	r2, #2
 80033d6:	0092      	lsls	r2, r2, #2
 80033d8:	f105 010c 	add.w	r1, r5, #12
 80033dc:	300c      	adds	r0, #12
 80033de:	f000 ffa3 	bl	8004328 <memcpy>
 80033e2:	2201      	movs	r2, #1
 80033e4:	4631      	mov	r1, r6
 80033e6:	4648      	mov	r0, r9
 80033e8:	f000 fbfc 	bl	8003be4 <__lshift>
 80033ec:	f10a 0301 	add.w	r3, sl, #1
 80033f0:	9300      	str	r3, [sp, #0]
 80033f2:	eb0a 030b 	add.w	r3, sl, fp
 80033f6:	9308      	str	r3, [sp, #32]
 80033f8:	9b04      	ldr	r3, [sp, #16]
 80033fa:	f003 0301 	and.w	r3, r3, #1
 80033fe:	462f      	mov	r7, r5
 8003400:	9306      	str	r3, [sp, #24]
 8003402:	4605      	mov	r5, r0
 8003404:	9b00      	ldr	r3, [sp, #0]
 8003406:	9802      	ldr	r0, [sp, #8]
 8003408:	4621      	mov	r1, r4
 800340a:	f103 3bff 	add.w	fp, r3, #4294967295
 800340e:	f7ff fa8a 	bl	8002926 <quorem>
 8003412:	4603      	mov	r3, r0
 8003414:	3330      	adds	r3, #48	@ 0x30
 8003416:	9003      	str	r0, [sp, #12]
 8003418:	4639      	mov	r1, r7
 800341a:	9802      	ldr	r0, [sp, #8]
 800341c:	9309      	str	r3, [sp, #36]	@ 0x24
 800341e:	f000 fc4d 	bl	8003cbc <__mcmp>
 8003422:	462a      	mov	r2, r5
 8003424:	9004      	str	r0, [sp, #16]
 8003426:	4621      	mov	r1, r4
 8003428:	4648      	mov	r0, r9
 800342a:	f000 fc63 	bl	8003cf4 <__mdiff>
 800342e:	68c2      	ldr	r2, [r0, #12]
 8003430:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003432:	4606      	mov	r6, r0
 8003434:	bb02      	cbnz	r2, 8003478 <_dtoa_r+0xa40>
 8003436:	4601      	mov	r1, r0
 8003438:	9802      	ldr	r0, [sp, #8]
 800343a:	f000 fc3f 	bl	8003cbc <__mcmp>
 800343e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003440:	4602      	mov	r2, r0
 8003442:	4631      	mov	r1, r6
 8003444:	4648      	mov	r0, r9
 8003446:	920c      	str	r2, [sp, #48]	@ 0x30
 8003448:	9309      	str	r3, [sp, #36]	@ 0x24
 800344a:	f000 fa05 	bl	8003858 <_Bfree>
 800344e:	9b07      	ldr	r3, [sp, #28]
 8003450:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8003452:	9e00      	ldr	r6, [sp, #0]
 8003454:	ea42 0103 	orr.w	r1, r2, r3
 8003458:	9b06      	ldr	r3, [sp, #24]
 800345a:	4319      	orrs	r1, r3
 800345c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800345e:	d10d      	bne.n	800347c <_dtoa_r+0xa44>
 8003460:	2b39      	cmp	r3, #57	@ 0x39
 8003462:	d027      	beq.n	80034b4 <_dtoa_r+0xa7c>
 8003464:	9a04      	ldr	r2, [sp, #16]
 8003466:	2a00      	cmp	r2, #0
 8003468:	dd01      	ble.n	800346e <_dtoa_r+0xa36>
 800346a:	9b03      	ldr	r3, [sp, #12]
 800346c:	3331      	adds	r3, #49	@ 0x31
 800346e:	f88b 3000 	strb.w	r3, [fp]
 8003472:	e52e      	b.n	8002ed2 <_dtoa_r+0x49a>
 8003474:	4628      	mov	r0, r5
 8003476:	e7b9      	b.n	80033ec <_dtoa_r+0x9b4>
 8003478:	2201      	movs	r2, #1
 800347a:	e7e2      	b.n	8003442 <_dtoa_r+0xa0a>
 800347c:	9904      	ldr	r1, [sp, #16]
 800347e:	2900      	cmp	r1, #0
 8003480:	db04      	blt.n	800348c <_dtoa_r+0xa54>
 8003482:	9807      	ldr	r0, [sp, #28]
 8003484:	4301      	orrs	r1, r0
 8003486:	9806      	ldr	r0, [sp, #24]
 8003488:	4301      	orrs	r1, r0
 800348a:	d120      	bne.n	80034ce <_dtoa_r+0xa96>
 800348c:	2a00      	cmp	r2, #0
 800348e:	ddee      	ble.n	800346e <_dtoa_r+0xa36>
 8003490:	9902      	ldr	r1, [sp, #8]
 8003492:	9300      	str	r3, [sp, #0]
 8003494:	2201      	movs	r2, #1
 8003496:	4648      	mov	r0, r9
 8003498:	f000 fba4 	bl	8003be4 <__lshift>
 800349c:	4621      	mov	r1, r4
 800349e:	9002      	str	r0, [sp, #8]
 80034a0:	f000 fc0c 	bl	8003cbc <__mcmp>
 80034a4:	2800      	cmp	r0, #0
 80034a6:	9b00      	ldr	r3, [sp, #0]
 80034a8:	dc02      	bgt.n	80034b0 <_dtoa_r+0xa78>
 80034aa:	d1e0      	bne.n	800346e <_dtoa_r+0xa36>
 80034ac:	07da      	lsls	r2, r3, #31
 80034ae:	d5de      	bpl.n	800346e <_dtoa_r+0xa36>
 80034b0:	2b39      	cmp	r3, #57	@ 0x39
 80034b2:	d1da      	bne.n	800346a <_dtoa_r+0xa32>
 80034b4:	2339      	movs	r3, #57	@ 0x39
 80034b6:	f88b 3000 	strb.w	r3, [fp]
 80034ba:	4633      	mov	r3, r6
 80034bc:	461e      	mov	r6, r3
 80034be:	3b01      	subs	r3, #1
 80034c0:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 80034c4:	2a39      	cmp	r2, #57	@ 0x39
 80034c6:	d04e      	beq.n	8003566 <_dtoa_r+0xb2e>
 80034c8:	3201      	adds	r2, #1
 80034ca:	701a      	strb	r2, [r3, #0]
 80034cc:	e501      	b.n	8002ed2 <_dtoa_r+0x49a>
 80034ce:	2a00      	cmp	r2, #0
 80034d0:	dd03      	ble.n	80034da <_dtoa_r+0xaa2>
 80034d2:	2b39      	cmp	r3, #57	@ 0x39
 80034d4:	d0ee      	beq.n	80034b4 <_dtoa_r+0xa7c>
 80034d6:	3301      	adds	r3, #1
 80034d8:	e7c9      	b.n	800346e <_dtoa_r+0xa36>
 80034da:	9a00      	ldr	r2, [sp, #0]
 80034dc:	9908      	ldr	r1, [sp, #32]
 80034de:	f802 3c01 	strb.w	r3, [r2, #-1]
 80034e2:	428a      	cmp	r2, r1
 80034e4:	d028      	beq.n	8003538 <_dtoa_r+0xb00>
 80034e6:	9902      	ldr	r1, [sp, #8]
 80034e8:	2300      	movs	r3, #0
 80034ea:	220a      	movs	r2, #10
 80034ec:	4648      	mov	r0, r9
 80034ee:	f000 f9d5 	bl	800389c <__multadd>
 80034f2:	42af      	cmp	r7, r5
 80034f4:	9002      	str	r0, [sp, #8]
 80034f6:	f04f 0300 	mov.w	r3, #0
 80034fa:	f04f 020a 	mov.w	r2, #10
 80034fe:	4639      	mov	r1, r7
 8003500:	4648      	mov	r0, r9
 8003502:	d107      	bne.n	8003514 <_dtoa_r+0xadc>
 8003504:	f000 f9ca 	bl	800389c <__multadd>
 8003508:	4607      	mov	r7, r0
 800350a:	4605      	mov	r5, r0
 800350c:	9b00      	ldr	r3, [sp, #0]
 800350e:	3301      	adds	r3, #1
 8003510:	9300      	str	r3, [sp, #0]
 8003512:	e777      	b.n	8003404 <_dtoa_r+0x9cc>
 8003514:	f000 f9c2 	bl	800389c <__multadd>
 8003518:	4629      	mov	r1, r5
 800351a:	4607      	mov	r7, r0
 800351c:	2300      	movs	r3, #0
 800351e:	220a      	movs	r2, #10
 8003520:	4648      	mov	r0, r9
 8003522:	f000 f9bb 	bl	800389c <__multadd>
 8003526:	4605      	mov	r5, r0
 8003528:	e7f0      	b.n	800350c <_dtoa_r+0xad4>
 800352a:	f1bb 0f00 	cmp.w	fp, #0
 800352e:	bfcc      	ite	gt
 8003530:	465e      	movgt	r6, fp
 8003532:	2601      	movle	r6, #1
 8003534:	4456      	add	r6, sl
 8003536:	2700      	movs	r7, #0
 8003538:	9902      	ldr	r1, [sp, #8]
 800353a:	9300      	str	r3, [sp, #0]
 800353c:	2201      	movs	r2, #1
 800353e:	4648      	mov	r0, r9
 8003540:	f000 fb50 	bl	8003be4 <__lshift>
 8003544:	4621      	mov	r1, r4
 8003546:	9002      	str	r0, [sp, #8]
 8003548:	f000 fbb8 	bl	8003cbc <__mcmp>
 800354c:	2800      	cmp	r0, #0
 800354e:	dcb4      	bgt.n	80034ba <_dtoa_r+0xa82>
 8003550:	d102      	bne.n	8003558 <_dtoa_r+0xb20>
 8003552:	9b00      	ldr	r3, [sp, #0]
 8003554:	07db      	lsls	r3, r3, #31
 8003556:	d4b0      	bmi.n	80034ba <_dtoa_r+0xa82>
 8003558:	4633      	mov	r3, r6
 800355a:	461e      	mov	r6, r3
 800355c:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003560:	2a30      	cmp	r2, #48	@ 0x30
 8003562:	d0fa      	beq.n	800355a <_dtoa_r+0xb22>
 8003564:	e4b5      	b.n	8002ed2 <_dtoa_r+0x49a>
 8003566:	459a      	cmp	sl, r3
 8003568:	d1a8      	bne.n	80034bc <_dtoa_r+0xa84>
 800356a:	2331      	movs	r3, #49	@ 0x31
 800356c:	f108 0801 	add.w	r8, r8, #1
 8003570:	f88a 3000 	strb.w	r3, [sl]
 8003574:	e4ad      	b.n	8002ed2 <_dtoa_r+0x49a>
 8003576:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8003578:	f8df a058 	ldr.w	sl, [pc, #88]	@ 80035d4 <_dtoa_r+0xb9c>
 800357c:	b11b      	cbz	r3, 8003586 <_dtoa_r+0xb4e>
 800357e:	f10a 0308 	add.w	r3, sl, #8
 8003582:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8003584:	6013      	str	r3, [r2, #0]
 8003586:	4650      	mov	r0, sl
 8003588:	b017      	add	sp, #92	@ 0x5c
 800358a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800358e:	9b07      	ldr	r3, [sp, #28]
 8003590:	2b01      	cmp	r3, #1
 8003592:	f77f ae2e 	ble.w	80031f2 <_dtoa_r+0x7ba>
 8003596:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003598:	9308      	str	r3, [sp, #32]
 800359a:	2001      	movs	r0, #1
 800359c:	e64d      	b.n	800323a <_dtoa_r+0x802>
 800359e:	f1bb 0f00 	cmp.w	fp, #0
 80035a2:	f77f aed9 	ble.w	8003358 <_dtoa_r+0x920>
 80035a6:	4656      	mov	r6, sl
 80035a8:	9802      	ldr	r0, [sp, #8]
 80035aa:	4621      	mov	r1, r4
 80035ac:	f7ff f9bb 	bl	8002926 <quorem>
 80035b0:	f100 0330 	add.w	r3, r0, #48	@ 0x30
 80035b4:	f806 3b01 	strb.w	r3, [r6], #1
 80035b8:	eba6 020a 	sub.w	r2, r6, sl
 80035bc:	4593      	cmp	fp, r2
 80035be:	ddb4      	ble.n	800352a <_dtoa_r+0xaf2>
 80035c0:	9902      	ldr	r1, [sp, #8]
 80035c2:	2300      	movs	r3, #0
 80035c4:	220a      	movs	r2, #10
 80035c6:	4648      	mov	r0, r9
 80035c8:	f000 f968 	bl	800389c <__multadd>
 80035cc:	9002      	str	r0, [sp, #8]
 80035ce:	e7eb      	b.n	80035a8 <_dtoa_r+0xb70>
 80035d0:	08004b6f 	.word	0x08004b6f
 80035d4:	08004af3 	.word	0x08004af3

080035d8 <_free_r>:
 80035d8:	b538      	push	{r3, r4, r5, lr}
 80035da:	4605      	mov	r5, r0
 80035dc:	2900      	cmp	r1, #0
 80035de:	d041      	beq.n	8003664 <_free_r+0x8c>
 80035e0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80035e4:	1f0c      	subs	r4, r1, #4
 80035e6:	2b00      	cmp	r3, #0
 80035e8:	bfb8      	it	lt
 80035ea:	18e4      	addlt	r4, r4, r3
 80035ec:	f000 f8e8 	bl	80037c0 <__malloc_lock>
 80035f0:	4a1d      	ldr	r2, [pc, #116]	@ (8003668 <_free_r+0x90>)
 80035f2:	6813      	ldr	r3, [r2, #0]
 80035f4:	b933      	cbnz	r3, 8003604 <_free_r+0x2c>
 80035f6:	6063      	str	r3, [r4, #4]
 80035f8:	6014      	str	r4, [r2, #0]
 80035fa:	4628      	mov	r0, r5
 80035fc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003600:	f000 b8e4 	b.w	80037cc <__malloc_unlock>
 8003604:	42a3      	cmp	r3, r4
 8003606:	d908      	bls.n	800361a <_free_r+0x42>
 8003608:	6820      	ldr	r0, [r4, #0]
 800360a:	1821      	adds	r1, r4, r0
 800360c:	428b      	cmp	r3, r1
 800360e:	bf01      	itttt	eq
 8003610:	6819      	ldreq	r1, [r3, #0]
 8003612:	685b      	ldreq	r3, [r3, #4]
 8003614:	1809      	addeq	r1, r1, r0
 8003616:	6021      	streq	r1, [r4, #0]
 8003618:	e7ed      	b.n	80035f6 <_free_r+0x1e>
 800361a:	461a      	mov	r2, r3
 800361c:	685b      	ldr	r3, [r3, #4]
 800361e:	b10b      	cbz	r3, 8003624 <_free_r+0x4c>
 8003620:	42a3      	cmp	r3, r4
 8003622:	d9fa      	bls.n	800361a <_free_r+0x42>
 8003624:	6811      	ldr	r1, [r2, #0]
 8003626:	1850      	adds	r0, r2, r1
 8003628:	42a0      	cmp	r0, r4
 800362a:	d10b      	bne.n	8003644 <_free_r+0x6c>
 800362c:	6820      	ldr	r0, [r4, #0]
 800362e:	4401      	add	r1, r0
 8003630:	1850      	adds	r0, r2, r1
 8003632:	4283      	cmp	r3, r0
 8003634:	6011      	str	r1, [r2, #0]
 8003636:	d1e0      	bne.n	80035fa <_free_r+0x22>
 8003638:	6818      	ldr	r0, [r3, #0]
 800363a:	685b      	ldr	r3, [r3, #4]
 800363c:	6053      	str	r3, [r2, #4]
 800363e:	4408      	add	r0, r1
 8003640:	6010      	str	r0, [r2, #0]
 8003642:	e7da      	b.n	80035fa <_free_r+0x22>
 8003644:	d902      	bls.n	800364c <_free_r+0x74>
 8003646:	230c      	movs	r3, #12
 8003648:	602b      	str	r3, [r5, #0]
 800364a:	e7d6      	b.n	80035fa <_free_r+0x22>
 800364c:	6820      	ldr	r0, [r4, #0]
 800364e:	1821      	adds	r1, r4, r0
 8003650:	428b      	cmp	r3, r1
 8003652:	bf04      	itt	eq
 8003654:	6819      	ldreq	r1, [r3, #0]
 8003656:	685b      	ldreq	r3, [r3, #4]
 8003658:	6063      	str	r3, [r4, #4]
 800365a:	bf04      	itt	eq
 800365c:	1809      	addeq	r1, r1, r0
 800365e:	6021      	streq	r1, [r4, #0]
 8003660:	6054      	str	r4, [r2, #4]
 8003662:	e7ca      	b.n	80035fa <_free_r+0x22>
 8003664:	bd38      	pop	{r3, r4, r5, pc}
 8003666:	bf00      	nop
 8003668:	20000344 	.word	0x20000344

0800366c <malloc>:
 800366c:	4b02      	ldr	r3, [pc, #8]	@ (8003678 <malloc+0xc>)
 800366e:	4601      	mov	r1, r0
 8003670:	6818      	ldr	r0, [r3, #0]
 8003672:	f000 b825 	b.w	80036c0 <_malloc_r>
 8003676:	bf00      	nop
 8003678:	20000010 	.word	0x20000010

0800367c <sbrk_aligned>:
 800367c:	b570      	push	{r4, r5, r6, lr}
 800367e:	4e0f      	ldr	r6, [pc, #60]	@ (80036bc <sbrk_aligned+0x40>)
 8003680:	460c      	mov	r4, r1
 8003682:	6831      	ldr	r1, [r6, #0]
 8003684:	4605      	mov	r5, r0
 8003686:	b911      	cbnz	r1, 800368e <sbrk_aligned+0x12>
 8003688:	f000 fe3e 	bl	8004308 <_sbrk_r>
 800368c:	6030      	str	r0, [r6, #0]
 800368e:	4621      	mov	r1, r4
 8003690:	4628      	mov	r0, r5
 8003692:	f000 fe39 	bl	8004308 <_sbrk_r>
 8003696:	1c43      	adds	r3, r0, #1
 8003698:	d103      	bne.n	80036a2 <sbrk_aligned+0x26>
 800369a:	f04f 34ff 	mov.w	r4, #4294967295
 800369e:	4620      	mov	r0, r4
 80036a0:	bd70      	pop	{r4, r5, r6, pc}
 80036a2:	1cc4      	adds	r4, r0, #3
 80036a4:	f024 0403 	bic.w	r4, r4, #3
 80036a8:	42a0      	cmp	r0, r4
 80036aa:	d0f8      	beq.n	800369e <sbrk_aligned+0x22>
 80036ac:	1a21      	subs	r1, r4, r0
 80036ae:	4628      	mov	r0, r5
 80036b0:	f000 fe2a 	bl	8004308 <_sbrk_r>
 80036b4:	3001      	adds	r0, #1
 80036b6:	d1f2      	bne.n	800369e <sbrk_aligned+0x22>
 80036b8:	e7ef      	b.n	800369a <sbrk_aligned+0x1e>
 80036ba:	bf00      	nop
 80036bc:	20000340 	.word	0x20000340

080036c0 <_malloc_r>:
 80036c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80036c4:	1ccd      	adds	r5, r1, #3
 80036c6:	f025 0503 	bic.w	r5, r5, #3
 80036ca:	3508      	adds	r5, #8
 80036cc:	2d0c      	cmp	r5, #12
 80036ce:	bf38      	it	cc
 80036d0:	250c      	movcc	r5, #12
 80036d2:	2d00      	cmp	r5, #0
 80036d4:	4606      	mov	r6, r0
 80036d6:	db01      	blt.n	80036dc <_malloc_r+0x1c>
 80036d8:	42a9      	cmp	r1, r5
 80036da:	d904      	bls.n	80036e6 <_malloc_r+0x26>
 80036dc:	230c      	movs	r3, #12
 80036de:	6033      	str	r3, [r6, #0]
 80036e0:	2000      	movs	r0, #0
 80036e2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80036e6:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80037bc <_malloc_r+0xfc>
 80036ea:	f000 f869 	bl	80037c0 <__malloc_lock>
 80036ee:	f8d8 3000 	ldr.w	r3, [r8]
 80036f2:	461c      	mov	r4, r3
 80036f4:	bb44      	cbnz	r4, 8003748 <_malloc_r+0x88>
 80036f6:	4629      	mov	r1, r5
 80036f8:	4630      	mov	r0, r6
 80036fa:	f7ff ffbf 	bl	800367c <sbrk_aligned>
 80036fe:	1c43      	adds	r3, r0, #1
 8003700:	4604      	mov	r4, r0
 8003702:	d158      	bne.n	80037b6 <_malloc_r+0xf6>
 8003704:	f8d8 4000 	ldr.w	r4, [r8]
 8003708:	4627      	mov	r7, r4
 800370a:	2f00      	cmp	r7, #0
 800370c:	d143      	bne.n	8003796 <_malloc_r+0xd6>
 800370e:	2c00      	cmp	r4, #0
 8003710:	d04b      	beq.n	80037aa <_malloc_r+0xea>
 8003712:	6823      	ldr	r3, [r4, #0]
 8003714:	4639      	mov	r1, r7
 8003716:	4630      	mov	r0, r6
 8003718:	eb04 0903 	add.w	r9, r4, r3
 800371c:	f000 fdf4 	bl	8004308 <_sbrk_r>
 8003720:	4581      	cmp	r9, r0
 8003722:	d142      	bne.n	80037aa <_malloc_r+0xea>
 8003724:	6821      	ldr	r1, [r4, #0]
 8003726:	1a6d      	subs	r5, r5, r1
 8003728:	4629      	mov	r1, r5
 800372a:	4630      	mov	r0, r6
 800372c:	f7ff ffa6 	bl	800367c <sbrk_aligned>
 8003730:	3001      	adds	r0, #1
 8003732:	d03a      	beq.n	80037aa <_malloc_r+0xea>
 8003734:	6823      	ldr	r3, [r4, #0]
 8003736:	442b      	add	r3, r5
 8003738:	6023      	str	r3, [r4, #0]
 800373a:	f8d8 3000 	ldr.w	r3, [r8]
 800373e:	685a      	ldr	r2, [r3, #4]
 8003740:	bb62      	cbnz	r2, 800379c <_malloc_r+0xdc>
 8003742:	f8c8 7000 	str.w	r7, [r8]
 8003746:	e00f      	b.n	8003768 <_malloc_r+0xa8>
 8003748:	6822      	ldr	r2, [r4, #0]
 800374a:	1b52      	subs	r2, r2, r5
 800374c:	d420      	bmi.n	8003790 <_malloc_r+0xd0>
 800374e:	2a0b      	cmp	r2, #11
 8003750:	d917      	bls.n	8003782 <_malloc_r+0xc2>
 8003752:	1961      	adds	r1, r4, r5
 8003754:	42a3      	cmp	r3, r4
 8003756:	6025      	str	r5, [r4, #0]
 8003758:	bf18      	it	ne
 800375a:	6059      	strne	r1, [r3, #4]
 800375c:	6863      	ldr	r3, [r4, #4]
 800375e:	bf08      	it	eq
 8003760:	f8c8 1000 	streq.w	r1, [r8]
 8003764:	5162      	str	r2, [r4, r5]
 8003766:	604b      	str	r3, [r1, #4]
 8003768:	4630      	mov	r0, r6
 800376a:	f000 f82f 	bl	80037cc <__malloc_unlock>
 800376e:	f104 000b 	add.w	r0, r4, #11
 8003772:	1d23      	adds	r3, r4, #4
 8003774:	f020 0007 	bic.w	r0, r0, #7
 8003778:	1ac2      	subs	r2, r0, r3
 800377a:	bf1c      	itt	ne
 800377c:	1a1b      	subne	r3, r3, r0
 800377e:	50a3      	strne	r3, [r4, r2]
 8003780:	e7af      	b.n	80036e2 <_malloc_r+0x22>
 8003782:	6862      	ldr	r2, [r4, #4]
 8003784:	42a3      	cmp	r3, r4
 8003786:	bf0c      	ite	eq
 8003788:	f8c8 2000 	streq.w	r2, [r8]
 800378c:	605a      	strne	r2, [r3, #4]
 800378e:	e7eb      	b.n	8003768 <_malloc_r+0xa8>
 8003790:	4623      	mov	r3, r4
 8003792:	6864      	ldr	r4, [r4, #4]
 8003794:	e7ae      	b.n	80036f4 <_malloc_r+0x34>
 8003796:	463c      	mov	r4, r7
 8003798:	687f      	ldr	r7, [r7, #4]
 800379a:	e7b6      	b.n	800370a <_malloc_r+0x4a>
 800379c:	461a      	mov	r2, r3
 800379e:	685b      	ldr	r3, [r3, #4]
 80037a0:	42a3      	cmp	r3, r4
 80037a2:	d1fb      	bne.n	800379c <_malloc_r+0xdc>
 80037a4:	2300      	movs	r3, #0
 80037a6:	6053      	str	r3, [r2, #4]
 80037a8:	e7de      	b.n	8003768 <_malloc_r+0xa8>
 80037aa:	230c      	movs	r3, #12
 80037ac:	6033      	str	r3, [r6, #0]
 80037ae:	4630      	mov	r0, r6
 80037b0:	f000 f80c 	bl	80037cc <__malloc_unlock>
 80037b4:	e794      	b.n	80036e0 <_malloc_r+0x20>
 80037b6:	6005      	str	r5, [r0, #0]
 80037b8:	e7d6      	b.n	8003768 <_malloc_r+0xa8>
 80037ba:	bf00      	nop
 80037bc:	20000344 	.word	0x20000344

080037c0 <__malloc_lock>:
 80037c0:	4801      	ldr	r0, [pc, #4]	@ (80037c8 <__malloc_lock+0x8>)
 80037c2:	f7ff b8ae 	b.w	8002922 <__retarget_lock_acquire_recursive>
 80037c6:	bf00      	nop
 80037c8:	2000033c 	.word	0x2000033c

080037cc <__malloc_unlock>:
 80037cc:	4801      	ldr	r0, [pc, #4]	@ (80037d4 <__malloc_unlock+0x8>)
 80037ce:	f7ff b8a9 	b.w	8002924 <__retarget_lock_release_recursive>
 80037d2:	bf00      	nop
 80037d4:	2000033c 	.word	0x2000033c

080037d8 <_Balloc>:
 80037d8:	b570      	push	{r4, r5, r6, lr}
 80037da:	69c6      	ldr	r6, [r0, #28]
 80037dc:	4604      	mov	r4, r0
 80037de:	460d      	mov	r5, r1
 80037e0:	b976      	cbnz	r6, 8003800 <_Balloc+0x28>
 80037e2:	2010      	movs	r0, #16
 80037e4:	f7ff ff42 	bl	800366c <malloc>
 80037e8:	4602      	mov	r2, r0
 80037ea:	61e0      	str	r0, [r4, #28]
 80037ec:	b920      	cbnz	r0, 80037f8 <_Balloc+0x20>
 80037ee:	4b18      	ldr	r3, [pc, #96]	@ (8003850 <_Balloc+0x78>)
 80037f0:	4818      	ldr	r0, [pc, #96]	@ (8003854 <_Balloc+0x7c>)
 80037f2:	216b      	movs	r1, #107	@ 0x6b
 80037f4:	f000 fda6 	bl	8004344 <__assert_func>
 80037f8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80037fc:	6006      	str	r6, [r0, #0]
 80037fe:	60c6      	str	r6, [r0, #12]
 8003800:	69e6      	ldr	r6, [r4, #28]
 8003802:	68f3      	ldr	r3, [r6, #12]
 8003804:	b183      	cbz	r3, 8003828 <_Balloc+0x50>
 8003806:	69e3      	ldr	r3, [r4, #28]
 8003808:	68db      	ldr	r3, [r3, #12]
 800380a:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800380e:	b9b8      	cbnz	r0, 8003840 <_Balloc+0x68>
 8003810:	2101      	movs	r1, #1
 8003812:	fa01 f605 	lsl.w	r6, r1, r5
 8003816:	1d72      	adds	r2, r6, #5
 8003818:	0092      	lsls	r2, r2, #2
 800381a:	4620      	mov	r0, r4
 800381c:	f000 fdb0 	bl	8004380 <_calloc_r>
 8003820:	b160      	cbz	r0, 800383c <_Balloc+0x64>
 8003822:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8003826:	e00e      	b.n	8003846 <_Balloc+0x6e>
 8003828:	2221      	movs	r2, #33	@ 0x21
 800382a:	2104      	movs	r1, #4
 800382c:	4620      	mov	r0, r4
 800382e:	f000 fda7 	bl	8004380 <_calloc_r>
 8003832:	69e3      	ldr	r3, [r4, #28]
 8003834:	60f0      	str	r0, [r6, #12]
 8003836:	68db      	ldr	r3, [r3, #12]
 8003838:	2b00      	cmp	r3, #0
 800383a:	d1e4      	bne.n	8003806 <_Balloc+0x2e>
 800383c:	2000      	movs	r0, #0
 800383e:	bd70      	pop	{r4, r5, r6, pc}
 8003840:	6802      	ldr	r2, [r0, #0]
 8003842:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8003846:	2300      	movs	r3, #0
 8003848:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800384c:	e7f7      	b.n	800383e <_Balloc+0x66>
 800384e:	bf00      	nop
 8003850:	08004b00 	.word	0x08004b00
 8003854:	08004b80 	.word	0x08004b80

08003858 <_Bfree>:
 8003858:	b570      	push	{r4, r5, r6, lr}
 800385a:	69c6      	ldr	r6, [r0, #28]
 800385c:	4605      	mov	r5, r0
 800385e:	460c      	mov	r4, r1
 8003860:	b976      	cbnz	r6, 8003880 <_Bfree+0x28>
 8003862:	2010      	movs	r0, #16
 8003864:	f7ff ff02 	bl	800366c <malloc>
 8003868:	4602      	mov	r2, r0
 800386a:	61e8      	str	r0, [r5, #28]
 800386c:	b920      	cbnz	r0, 8003878 <_Bfree+0x20>
 800386e:	4b09      	ldr	r3, [pc, #36]	@ (8003894 <_Bfree+0x3c>)
 8003870:	4809      	ldr	r0, [pc, #36]	@ (8003898 <_Bfree+0x40>)
 8003872:	218f      	movs	r1, #143	@ 0x8f
 8003874:	f000 fd66 	bl	8004344 <__assert_func>
 8003878:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800387c:	6006      	str	r6, [r0, #0]
 800387e:	60c6      	str	r6, [r0, #12]
 8003880:	b13c      	cbz	r4, 8003892 <_Bfree+0x3a>
 8003882:	69eb      	ldr	r3, [r5, #28]
 8003884:	6862      	ldr	r2, [r4, #4]
 8003886:	68db      	ldr	r3, [r3, #12]
 8003888:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800388c:	6021      	str	r1, [r4, #0]
 800388e:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003892:	bd70      	pop	{r4, r5, r6, pc}
 8003894:	08004b00 	.word	0x08004b00
 8003898:	08004b80 	.word	0x08004b80

0800389c <__multadd>:
 800389c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80038a0:	690d      	ldr	r5, [r1, #16]
 80038a2:	4607      	mov	r7, r0
 80038a4:	460c      	mov	r4, r1
 80038a6:	461e      	mov	r6, r3
 80038a8:	f101 0c14 	add.w	ip, r1, #20
 80038ac:	2000      	movs	r0, #0
 80038ae:	f8dc 3000 	ldr.w	r3, [ip]
 80038b2:	b299      	uxth	r1, r3
 80038b4:	fb02 6101 	mla	r1, r2, r1, r6
 80038b8:	0c1e      	lsrs	r6, r3, #16
 80038ba:	0c0b      	lsrs	r3, r1, #16
 80038bc:	fb02 3306 	mla	r3, r2, r6, r3
 80038c0:	b289      	uxth	r1, r1
 80038c2:	3001      	adds	r0, #1
 80038c4:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80038c8:	4285      	cmp	r5, r0
 80038ca:	f84c 1b04 	str.w	r1, [ip], #4
 80038ce:	ea4f 4613 	mov.w	r6, r3, lsr #16
 80038d2:	dcec      	bgt.n	80038ae <__multadd+0x12>
 80038d4:	b30e      	cbz	r6, 800391a <__multadd+0x7e>
 80038d6:	68a3      	ldr	r3, [r4, #8]
 80038d8:	42ab      	cmp	r3, r5
 80038da:	dc19      	bgt.n	8003910 <__multadd+0x74>
 80038dc:	6861      	ldr	r1, [r4, #4]
 80038de:	4638      	mov	r0, r7
 80038e0:	3101      	adds	r1, #1
 80038e2:	f7ff ff79 	bl	80037d8 <_Balloc>
 80038e6:	4680      	mov	r8, r0
 80038e8:	b928      	cbnz	r0, 80038f6 <__multadd+0x5a>
 80038ea:	4602      	mov	r2, r0
 80038ec:	4b0c      	ldr	r3, [pc, #48]	@ (8003920 <__multadd+0x84>)
 80038ee:	480d      	ldr	r0, [pc, #52]	@ (8003924 <__multadd+0x88>)
 80038f0:	21ba      	movs	r1, #186	@ 0xba
 80038f2:	f000 fd27 	bl	8004344 <__assert_func>
 80038f6:	6922      	ldr	r2, [r4, #16]
 80038f8:	3202      	adds	r2, #2
 80038fa:	f104 010c 	add.w	r1, r4, #12
 80038fe:	0092      	lsls	r2, r2, #2
 8003900:	300c      	adds	r0, #12
 8003902:	f000 fd11 	bl	8004328 <memcpy>
 8003906:	4621      	mov	r1, r4
 8003908:	4638      	mov	r0, r7
 800390a:	f7ff ffa5 	bl	8003858 <_Bfree>
 800390e:	4644      	mov	r4, r8
 8003910:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8003914:	3501      	adds	r5, #1
 8003916:	615e      	str	r6, [r3, #20]
 8003918:	6125      	str	r5, [r4, #16]
 800391a:	4620      	mov	r0, r4
 800391c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003920:	08004b6f 	.word	0x08004b6f
 8003924:	08004b80 	.word	0x08004b80

08003928 <__hi0bits>:
 8003928:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 800392c:	4603      	mov	r3, r0
 800392e:	bf36      	itet	cc
 8003930:	0403      	lslcc	r3, r0, #16
 8003932:	2000      	movcs	r0, #0
 8003934:	2010      	movcc	r0, #16
 8003936:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800393a:	bf3c      	itt	cc
 800393c:	021b      	lslcc	r3, r3, #8
 800393e:	3008      	addcc	r0, #8
 8003940:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8003944:	bf3c      	itt	cc
 8003946:	011b      	lslcc	r3, r3, #4
 8003948:	3004      	addcc	r0, #4
 800394a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800394e:	bf3c      	itt	cc
 8003950:	009b      	lslcc	r3, r3, #2
 8003952:	3002      	addcc	r0, #2
 8003954:	2b00      	cmp	r3, #0
 8003956:	db05      	blt.n	8003964 <__hi0bits+0x3c>
 8003958:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 800395c:	f100 0001 	add.w	r0, r0, #1
 8003960:	bf08      	it	eq
 8003962:	2020      	moveq	r0, #32
 8003964:	4770      	bx	lr

08003966 <__lo0bits>:
 8003966:	6803      	ldr	r3, [r0, #0]
 8003968:	4602      	mov	r2, r0
 800396a:	f013 0007 	ands.w	r0, r3, #7
 800396e:	d00b      	beq.n	8003988 <__lo0bits+0x22>
 8003970:	07d9      	lsls	r1, r3, #31
 8003972:	d421      	bmi.n	80039b8 <__lo0bits+0x52>
 8003974:	0798      	lsls	r0, r3, #30
 8003976:	bf49      	itett	mi
 8003978:	085b      	lsrmi	r3, r3, #1
 800397a:	089b      	lsrpl	r3, r3, #2
 800397c:	2001      	movmi	r0, #1
 800397e:	6013      	strmi	r3, [r2, #0]
 8003980:	bf5c      	itt	pl
 8003982:	6013      	strpl	r3, [r2, #0]
 8003984:	2002      	movpl	r0, #2
 8003986:	4770      	bx	lr
 8003988:	b299      	uxth	r1, r3
 800398a:	b909      	cbnz	r1, 8003990 <__lo0bits+0x2a>
 800398c:	0c1b      	lsrs	r3, r3, #16
 800398e:	2010      	movs	r0, #16
 8003990:	b2d9      	uxtb	r1, r3
 8003992:	b909      	cbnz	r1, 8003998 <__lo0bits+0x32>
 8003994:	3008      	adds	r0, #8
 8003996:	0a1b      	lsrs	r3, r3, #8
 8003998:	0719      	lsls	r1, r3, #28
 800399a:	bf04      	itt	eq
 800399c:	091b      	lsreq	r3, r3, #4
 800399e:	3004      	addeq	r0, #4
 80039a0:	0799      	lsls	r1, r3, #30
 80039a2:	bf04      	itt	eq
 80039a4:	089b      	lsreq	r3, r3, #2
 80039a6:	3002      	addeq	r0, #2
 80039a8:	07d9      	lsls	r1, r3, #31
 80039aa:	d403      	bmi.n	80039b4 <__lo0bits+0x4e>
 80039ac:	085b      	lsrs	r3, r3, #1
 80039ae:	f100 0001 	add.w	r0, r0, #1
 80039b2:	d003      	beq.n	80039bc <__lo0bits+0x56>
 80039b4:	6013      	str	r3, [r2, #0]
 80039b6:	4770      	bx	lr
 80039b8:	2000      	movs	r0, #0
 80039ba:	4770      	bx	lr
 80039bc:	2020      	movs	r0, #32
 80039be:	4770      	bx	lr

080039c0 <__i2b>:
 80039c0:	b510      	push	{r4, lr}
 80039c2:	460c      	mov	r4, r1
 80039c4:	2101      	movs	r1, #1
 80039c6:	f7ff ff07 	bl	80037d8 <_Balloc>
 80039ca:	4602      	mov	r2, r0
 80039cc:	b928      	cbnz	r0, 80039da <__i2b+0x1a>
 80039ce:	4b05      	ldr	r3, [pc, #20]	@ (80039e4 <__i2b+0x24>)
 80039d0:	4805      	ldr	r0, [pc, #20]	@ (80039e8 <__i2b+0x28>)
 80039d2:	f240 1145 	movw	r1, #325	@ 0x145
 80039d6:	f000 fcb5 	bl	8004344 <__assert_func>
 80039da:	2301      	movs	r3, #1
 80039dc:	6144      	str	r4, [r0, #20]
 80039de:	6103      	str	r3, [r0, #16]
 80039e0:	bd10      	pop	{r4, pc}
 80039e2:	bf00      	nop
 80039e4:	08004b6f 	.word	0x08004b6f
 80039e8:	08004b80 	.word	0x08004b80

080039ec <__multiply>:
 80039ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80039f0:	4617      	mov	r7, r2
 80039f2:	690a      	ldr	r2, [r1, #16]
 80039f4:	693b      	ldr	r3, [r7, #16]
 80039f6:	429a      	cmp	r2, r3
 80039f8:	bfa8      	it	ge
 80039fa:	463b      	movge	r3, r7
 80039fc:	4689      	mov	r9, r1
 80039fe:	bfa4      	itt	ge
 8003a00:	460f      	movge	r7, r1
 8003a02:	4699      	movge	r9, r3
 8003a04:	693d      	ldr	r5, [r7, #16]
 8003a06:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8003a0a:	68bb      	ldr	r3, [r7, #8]
 8003a0c:	6879      	ldr	r1, [r7, #4]
 8003a0e:	eb05 060a 	add.w	r6, r5, sl
 8003a12:	42b3      	cmp	r3, r6
 8003a14:	b085      	sub	sp, #20
 8003a16:	bfb8      	it	lt
 8003a18:	3101      	addlt	r1, #1
 8003a1a:	f7ff fedd 	bl	80037d8 <_Balloc>
 8003a1e:	b930      	cbnz	r0, 8003a2e <__multiply+0x42>
 8003a20:	4602      	mov	r2, r0
 8003a22:	4b41      	ldr	r3, [pc, #260]	@ (8003b28 <__multiply+0x13c>)
 8003a24:	4841      	ldr	r0, [pc, #260]	@ (8003b2c <__multiply+0x140>)
 8003a26:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8003a2a:	f000 fc8b 	bl	8004344 <__assert_func>
 8003a2e:	f100 0414 	add.w	r4, r0, #20
 8003a32:	eb04 0e86 	add.w	lr, r4, r6, lsl #2
 8003a36:	4623      	mov	r3, r4
 8003a38:	2200      	movs	r2, #0
 8003a3a:	4573      	cmp	r3, lr
 8003a3c:	d320      	bcc.n	8003a80 <__multiply+0x94>
 8003a3e:	f107 0814 	add.w	r8, r7, #20
 8003a42:	f109 0114 	add.w	r1, r9, #20
 8003a46:	eb08 0585 	add.w	r5, r8, r5, lsl #2
 8003a4a:	eb01 038a 	add.w	r3, r1, sl, lsl #2
 8003a4e:	9302      	str	r3, [sp, #8]
 8003a50:	1beb      	subs	r3, r5, r7
 8003a52:	3b15      	subs	r3, #21
 8003a54:	f023 0303 	bic.w	r3, r3, #3
 8003a58:	3304      	adds	r3, #4
 8003a5a:	3715      	adds	r7, #21
 8003a5c:	42bd      	cmp	r5, r7
 8003a5e:	bf38      	it	cc
 8003a60:	2304      	movcc	r3, #4
 8003a62:	9301      	str	r3, [sp, #4]
 8003a64:	9b02      	ldr	r3, [sp, #8]
 8003a66:	9103      	str	r1, [sp, #12]
 8003a68:	428b      	cmp	r3, r1
 8003a6a:	d80c      	bhi.n	8003a86 <__multiply+0x9a>
 8003a6c:	2e00      	cmp	r6, #0
 8003a6e:	dd03      	ble.n	8003a78 <__multiply+0x8c>
 8003a70:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8003a74:	2b00      	cmp	r3, #0
 8003a76:	d055      	beq.n	8003b24 <__multiply+0x138>
 8003a78:	6106      	str	r6, [r0, #16]
 8003a7a:	b005      	add	sp, #20
 8003a7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003a80:	f843 2b04 	str.w	r2, [r3], #4
 8003a84:	e7d9      	b.n	8003a3a <__multiply+0x4e>
 8003a86:	f8b1 a000 	ldrh.w	sl, [r1]
 8003a8a:	f1ba 0f00 	cmp.w	sl, #0
 8003a8e:	d01f      	beq.n	8003ad0 <__multiply+0xe4>
 8003a90:	46c4      	mov	ip, r8
 8003a92:	46a1      	mov	r9, r4
 8003a94:	2700      	movs	r7, #0
 8003a96:	f85c 2b04 	ldr.w	r2, [ip], #4
 8003a9a:	f8d9 3000 	ldr.w	r3, [r9]
 8003a9e:	fa1f fb82 	uxth.w	fp, r2
 8003aa2:	b29b      	uxth	r3, r3
 8003aa4:	fb0a 330b 	mla	r3, sl, fp, r3
 8003aa8:	443b      	add	r3, r7
 8003aaa:	f8d9 7000 	ldr.w	r7, [r9]
 8003aae:	0c12      	lsrs	r2, r2, #16
 8003ab0:	0c3f      	lsrs	r7, r7, #16
 8003ab2:	fb0a 7202 	mla	r2, sl, r2, r7
 8003ab6:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 8003aba:	b29b      	uxth	r3, r3
 8003abc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003ac0:	4565      	cmp	r5, ip
 8003ac2:	f849 3b04 	str.w	r3, [r9], #4
 8003ac6:	ea4f 4712 	mov.w	r7, r2, lsr #16
 8003aca:	d8e4      	bhi.n	8003a96 <__multiply+0xaa>
 8003acc:	9b01      	ldr	r3, [sp, #4]
 8003ace:	50e7      	str	r7, [r4, r3]
 8003ad0:	9b03      	ldr	r3, [sp, #12]
 8003ad2:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8003ad6:	3104      	adds	r1, #4
 8003ad8:	f1b9 0f00 	cmp.w	r9, #0
 8003adc:	d020      	beq.n	8003b20 <__multiply+0x134>
 8003ade:	6823      	ldr	r3, [r4, #0]
 8003ae0:	4647      	mov	r7, r8
 8003ae2:	46a4      	mov	ip, r4
 8003ae4:	f04f 0a00 	mov.w	sl, #0
 8003ae8:	f8b7 b000 	ldrh.w	fp, [r7]
 8003aec:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 8003af0:	fb09 220b 	mla	r2, r9, fp, r2
 8003af4:	4452      	add	r2, sl
 8003af6:	b29b      	uxth	r3, r3
 8003af8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003afc:	f84c 3b04 	str.w	r3, [ip], #4
 8003b00:	f857 3b04 	ldr.w	r3, [r7], #4
 8003b04:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003b08:	f8bc 3000 	ldrh.w	r3, [ip]
 8003b0c:	fb09 330a 	mla	r3, r9, sl, r3
 8003b10:	eb03 4312 	add.w	r3, r3, r2, lsr #16
 8003b14:	42bd      	cmp	r5, r7
 8003b16:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003b1a:	d8e5      	bhi.n	8003ae8 <__multiply+0xfc>
 8003b1c:	9a01      	ldr	r2, [sp, #4]
 8003b1e:	50a3      	str	r3, [r4, r2]
 8003b20:	3404      	adds	r4, #4
 8003b22:	e79f      	b.n	8003a64 <__multiply+0x78>
 8003b24:	3e01      	subs	r6, #1
 8003b26:	e7a1      	b.n	8003a6c <__multiply+0x80>
 8003b28:	08004b6f 	.word	0x08004b6f
 8003b2c:	08004b80 	.word	0x08004b80

08003b30 <__pow5mult>:
 8003b30:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003b34:	4615      	mov	r5, r2
 8003b36:	f012 0203 	ands.w	r2, r2, #3
 8003b3a:	4607      	mov	r7, r0
 8003b3c:	460e      	mov	r6, r1
 8003b3e:	d007      	beq.n	8003b50 <__pow5mult+0x20>
 8003b40:	4c25      	ldr	r4, [pc, #148]	@ (8003bd8 <__pow5mult+0xa8>)
 8003b42:	3a01      	subs	r2, #1
 8003b44:	2300      	movs	r3, #0
 8003b46:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8003b4a:	f7ff fea7 	bl	800389c <__multadd>
 8003b4e:	4606      	mov	r6, r0
 8003b50:	10ad      	asrs	r5, r5, #2
 8003b52:	d03d      	beq.n	8003bd0 <__pow5mult+0xa0>
 8003b54:	69fc      	ldr	r4, [r7, #28]
 8003b56:	b97c      	cbnz	r4, 8003b78 <__pow5mult+0x48>
 8003b58:	2010      	movs	r0, #16
 8003b5a:	f7ff fd87 	bl	800366c <malloc>
 8003b5e:	4602      	mov	r2, r0
 8003b60:	61f8      	str	r0, [r7, #28]
 8003b62:	b928      	cbnz	r0, 8003b70 <__pow5mult+0x40>
 8003b64:	4b1d      	ldr	r3, [pc, #116]	@ (8003bdc <__pow5mult+0xac>)
 8003b66:	481e      	ldr	r0, [pc, #120]	@ (8003be0 <__pow5mult+0xb0>)
 8003b68:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8003b6c:	f000 fbea 	bl	8004344 <__assert_func>
 8003b70:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8003b74:	6004      	str	r4, [r0, #0]
 8003b76:	60c4      	str	r4, [r0, #12]
 8003b78:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8003b7c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8003b80:	b94c      	cbnz	r4, 8003b96 <__pow5mult+0x66>
 8003b82:	f240 2171 	movw	r1, #625	@ 0x271
 8003b86:	4638      	mov	r0, r7
 8003b88:	f7ff ff1a 	bl	80039c0 <__i2b>
 8003b8c:	2300      	movs	r3, #0
 8003b8e:	f8c8 0008 	str.w	r0, [r8, #8]
 8003b92:	4604      	mov	r4, r0
 8003b94:	6003      	str	r3, [r0, #0]
 8003b96:	f04f 0900 	mov.w	r9, #0
 8003b9a:	07eb      	lsls	r3, r5, #31
 8003b9c:	d50a      	bpl.n	8003bb4 <__pow5mult+0x84>
 8003b9e:	4631      	mov	r1, r6
 8003ba0:	4622      	mov	r2, r4
 8003ba2:	4638      	mov	r0, r7
 8003ba4:	f7ff ff22 	bl	80039ec <__multiply>
 8003ba8:	4631      	mov	r1, r6
 8003baa:	4680      	mov	r8, r0
 8003bac:	4638      	mov	r0, r7
 8003bae:	f7ff fe53 	bl	8003858 <_Bfree>
 8003bb2:	4646      	mov	r6, r8
 8003bb4:	106d      	asrs	r5, r5, #1
 8003bb6:	d00b      	beq.n	8003bd0 <__pow5mult+0xa0>
 8003bb8:	6820      	ldr	r0, [r4, #0]
 8003bba:	b938      	cbnz	r0, 8003bcc <__pow5mult+0x9c>
 8003bbc:	4622      	mov	r2, r4
 8003bbe:	4621      	mov	r1, r4
 8003bc0:	4638      	mov	r0, r7
 8003bc2:	f7ff ff13 	bl	80039ec <__multiply>
 8003bc6:	6020      	str	r0, [r4, #0]
 8003bc8:	f8c0 9000 	str.w	r9, [r0]
 8003bcc:	4604      	mov	r4, r0
 8003bce:	e7e4      	b.n	8003b9a <__pow5mult+0x6a>
 8003bd0:	4630      	mov	r0, r6
 8003bd2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003bd6:	bf00      	nop
 8003bd8:	08004c30 	.word	0x08004c30
 8003bdc:	08004b00 	.word	0x08004b00
 8003be0:	08004b80 	.word	0x08004b80

08003be4 <__lshift>:
 8003be4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003be8:	460c      	mov	r4, r1
 8003bea:	6849      	ldr	r1, [r1, #4]
 8003bec:	6923      	ldr	r3, [r4, #16]
 8003bee:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8003bf2:	68a3      	ldr	r3, [r4, #8]
 8003bf4:	4607      	mov	r7, r0
 8003bf6:	4691      	mov	r9, r2
 8003bf8:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003bfc:	f108 0601 	add.w	r6, r8, #1
 8003c00:	42b3      	cmp	r3, r6
 8003c02:	db0b      	blt.n	8003c1c <__lshift+0x38>
 8003c04:	4638      	mov	r0, r7
 8003c06:	f7ff fde7 	bl	80037d8 <_Balloc>
 8003c0a:	4605      	mov	r5, r0
 8003c0c:	b948      	cbnz	r0, 8003c22 <__lshift+0x3e>
 8003c0e:	4602      	mov	r2, r0
 8003c10:	4b28      	ldr	r3, [pc, #160]	@ (8003cb4 <__lshift+0xd0>)
 8003c12:	4829      	ldr	r0, [pc, #164]	@ (8003cb8 <__lshift+0xd4>)
 8003c14:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8003c18:	f000 fb94 	bl	8004344 <__assert_func>
 8003c1c:	3101      	adds	r1, #1
 8003c1e:	005b      	lsls	r3, r3, #1
 8003c20:	e7ee      	b.n	8003c00 <__lshift+0x1c>
 8003c22:	2300      	movs	r3, #0
 8003c24:	f100 0114 	add.w	r1, r0, #20
 8003c28:	f100 0210 	add.w	r2, r0, #16
 8003c2c:	4618      	mov	r0, r3
 8003c2e:	4553      	cmp	r3, sl
 8003c30:	db33      	blt.n	8003c9a <__lshift+0xb6>
 8003c32:	6920      	ldr	r0, [r4, #16]
 8003c34:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003c38:	f104 0314 	add.w	r3, r4, #20
 8003c3c:	f019 091f 	ands.w	r9, r9, #31
 8003c40:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8003c44:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8003c48:	d02b      	beq.n	8003ca2 <__lshift+0xbe>
 8003c4a:	f1c9 0e20 	rsb	lr, r9, #32
 8003c4e:	468a      	mov	sl, r1
 8003c50:	2200      	movs	r2, #0
 8003c52:	6818      	ldr	r0, [r3, #0]
 8003c54:	fa00 f009 	lsl.w	r0, r0, r9
 8003c58:	4310      	orrs	r0, r2
 8003c5a:	f84a 0b04 	str.w	r0, [sl], #4
 8003c5e:	f853 2b04 	ldr.w	r2, [r3], #4
 8003c62:	459c      	cmp	ip, r3
 8003c64:	fa22 f20e 	lsr.w	r2, r2, lr
 8003c68:	d8f3      	bhi.n	8003c52 <__lshift+0x6e>
 8003c6a:	ebac 0304 	sub.w	r3, ip, r4
 8003c6e:	3b15      	subs	r3, #21
 8003c70:	f023 0303 	bic.w	r3, r3, #3
 8003c74:	3304      	adds	r3, #4
 8003c76:	f104 0015 	add.w	r0, r4, #21
 8003c7a:	4560      	cmp	r0, ip
 8003c7c:	bf88      	it	hi
 8003c7e:	2304      	movhi	r3, #4
 8003c80:	50ca      	str	r2, [r1, r3]
 8003c82:	b10a      	cbz	r2, 8003c88 <__lshift+0xa4>
 8003c84:	f108 0602 	add.w	r6, r8, #2
 8003c88:	3e01      	subs	r6, #1
 8003c8a:	4638      	mov	r0, r7
 8003c8c:	612e      	str	r6, [r5, #16]
 8003c8e:	4621      	mov	r1, r4
 8003c90:	f7ff fde2 	bl	8003858 <_Bfree>
 8003c94:	4628      	mov	r0, r5
 8003c96:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003c9a:	f842 0f04 	str.w	r0, [r2, #4]!
 8003c9e:	3301      	adds	r3, #1
 8003ca0:	e7c5      	b.n	8003c2e <__lshift+0x4a>
 8003ca2:	3904      	subs	r1, #4
 8003ca4:	f853 2b04 	ldr.w	r2, [r3], #4
 8003ca8:	f841 2f04 	str.w	r2, [r1, #4]!
 8003cac:	459c      	cmp	ip, r3
 8003cae:	d8f9      	bhi.n	8003ca4 <__lshift+0xc0>
 8003cb0:	e7ea      	b.n	8003c88 <__lshift+0xa4>
 8003cb2:	bf00      	nop
 8003cb4:	08004b6f 	.word	0x08004b6f
 8003cb8:	08004b80 	.word	0x08004b80

08003cbc <__mcmp>:
 8003cbc:	690a      	ldr	r2, [r1, #16]
 8003cbe:	4603      	mov	r3, r0
 8003cc0:	6900      	ldr	r0, [r0, #16]
 8003cc2:	1a80      	subs	r0, r0, r2
 8003cc4:	b530      	push	{r4, r5, lr}
 8003cc6:	d10e      	bne.n	8003ce6 <__mcmp+0x2a>
 8003cc8:	3314      	adds	r3, #20
 8003cca:	3114      	adds	r1, #20
 8003ccc:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8003cd0:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8003cd4:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8003cd8:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8003cdc:	4295      	cmp	r5, r2
 8003cde:	d003      	beq.n	8003ce8 <__mcmp+0x2c>
 8003ce0:	d205      	bcs.n	8003cee <__mcmp+0x32>
 8003ce2:	f04f 30ff 	mov.w	r0, #4294967295
 8003ce6:	bd30      	pop	{r4, r5, pc}
 8003ce8:	42a3      	cmp	r3, r4
 8003cea:	d3f3      	bcc.n	8003cd4 <__mcmp+0x18>
 8003cec:	e7fb      	b.n	8003ce6 <__mcmp+0x2a>
 8003cee:	2001      	movs	r0, #1
 8003cf0:	e7f9      	b.n	8003ce6 <__mcmp+0x2a>
	...

08003cf4 <__mdiff>:
 8003cf4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003cf8:	4689      	mov	r9, r1
 8003cfa:	4606      	mov	r6, r0
 8003cfc:	4611      	mov	r1, r2
 8003cfe:	4648      	mov	r0, r9
 8003d00:	4614      	mov	r4, r2
 8003d02:	f7ff ffdb 	bl	8003cbc <__mcmp>
 8003d06:	1e05      	subs	r5, r0, #0
 8003d08:	d112      	bne.n	8003d30 <__mdiff+0x3c>
 8003d0a:	4629      	mov	r1, r5
 8003d0c:	4630      	mov	r0, r6
 8003d0e:	f7ff fd63 	bl	80037d8 <_Balloc>
 8003d12:	4602      	mov	r2, r0
 8003d14:	b928      	cbnz	r0, 8003d22 <__mdiff+0x2e>
 8003d16:	4b3f      	ldr	r3, [pc, #252]	@ (8003e14 <__mdiff+0x120>)
 8003d18:	f240 2137 	movw	r1, #567	@ 0x237
 8003d1c:	483e      	ldr	r0, [pc, #248]	@ (8003e18 <__mdiff+0x124>)
 8003d1e:	f000 fb11 	bl	8004344 <__assert_func>
 8003d22:	2301      	movs	r3, #1
 8003d24:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8003d28:	4610      	mov	r0, r2
 8003d2a:	b003      	add	sp, #12
 8003d2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003d30:	bfbc      	itt	lt
 8003d32:	464b      	movlt	r3, r9
 8003d34:	46a1      	movlt	r9, r4
 8003d36:	4630      	mov	r0, r6
 8003d38:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8003d3c:	bfba      	itte	lt
 8003d3e:	461c      	movlt	r4, r3
 8003d40:	2501      	movlt	r5, #1
 8003d42:	2500      	movge	r5, #0
 8003d44:	f7ff fd48 	bl	80037d8 <_Balloc>
 8003d48:	4602      	mov	r2, r0
 8003d4a:	b918      	cbnz	r0, 8003d54 <__mdiff+0x60>
 8003d4c:	4b31      	ldr	r3, [pc, #196]	@ (8003e14 <__mdiff+0x120>)
 8003d4e:	f240 2145 	movw	r1, #581	@ 0x245
 8003d52:	e7e3      	b.n	8003d1c <__mdiff+0x28>
 8003d54:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8003d58:	6926      	ldr	r6, [r4, #16]
 8003d5a:	60c5      	str	r5, [r0, #12]
 8003d5c:	f109 0310 	add.w	r3, r9, #16
 8003d60:	f109 0514 	add.w	r5, r9, #20
 8003d64:	f104 0e14 	add.w	lr, r4, #20
 8003d68:	f100 0b14 	add.w	fp, r0, #20
 8003d6c:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8003d70:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8003d74:	9301      	str	r3, [sp, #4]
 8003d76:	46d9      	mov	r9, fp
 8003d78:	f04f 0c00 	mov.w	ip, #0
 8003d7c:	9b01      	ldr	r3, [sp, #4]
 8003d7e:	f85e 0b04 	ldr.w	r0, [lr], #4
 8003d82:	f853 af04 	ldr.w	sl, [r3, #4]!
 8003d86:	9301      	str	r3, [sp, #4]
 8003d88:	fa1f f38a 	uxth.w	r3, sl
 8003d8c:	4619      	mov	r1, r3
 8003d8e:	b283      	uxth	r3, r0
 8003d90:	1acb      	subs	r3, r1, r3
 8003d92:	0c00      	lsrs	r0, r0, #16
 8003d94:	4463      	add	r3, ip
 8003d96:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8003d9a:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8003d9e:	b29b      	uxth	r3, r3
 8003da0:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8003da4:	4576      	cmp	r6, lr
 8003da6:	f849 3b04 	str.w	r3, [r9], #4
 8003daa:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003dae:	d8e5      	bhi.n	8003d7c <__mdiff+0x88>
 8003db0:	1b33      	subs	r3, r6, r4
 8003db2:	3b15      	subs	r3, #21
 8003db4:	f023 0303 	bic.w	r3, r3, #3
 8003db8:	3415      	adds	r4, #21
 8003dba:	3304      	adds	r3, #4
 8003dbc:	42a6      	cmp	r6, r4
 8003dbe:	bf38      	it	cc
 8003dc0:	2304      	movcc	r3, #4
 8003dc2:	441d      	add	r5, r3
 8003dc4:	445b      	add	r3, fp
 8003dc6:	461e      	mov	r6, r3
 8003dc8:	462c      	mov	r4, r5
 8003dca:	4544      	cmp	r4, r8
 8003dcc:	d30e      	bcc.n	8003dec <__mdiff+0xf8>
 8003dce:	f108 0103 	add.w	r1, r8, #3
 8003dd2:	1b49      	subs	r1, r1, r5
 8003dd4:	f021 0103 	bic.w	r1, r1, #3
 8003dd8:	3d03      	subs	r5, #3
 8003dda:	45a8      	cmp	r8, r5
 8003ddc:	bf38      	it	cc
 8003dde:	2100      	movcc	r1, #0
 8003de0:	440b      	add	r3, r1
 8003de2:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8003de6:	b191      	cbz	r1, 8003e0e <__mdiff+0x11a>
 8003de8:	6117      	str	r7, [r2, #16]
 8003dea:	e79d      	b.n	8003d28 <__mdiff+0x34>
 8003dec:	f854 1b04 	ldr.w	r1, [r4], #4
 8003df0:	46e6      	mov	lr, ip
 8003df2:	0c08      	lsrs	r0, r1, #16
 8003df4:	fa1c fc81 	uxtah	ip, ip, r1
 8003df8:	4471      	add	r1, lr
 8003dfa:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8003dfe:	b289      	uxth	r1, r1
 8003e00:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8003e04:	f846 1b04 	str.w	r1, [r6], #4
 8003e08:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003e0c:	e7dd      	b.n	8003dca <__mdiff+0xd6>
 8003e0e:	3f01      	subs	r7, #1
 8003e10:	e7e7      	b.n	8003de2 <__mdiff+0xee>
 8003e12:	bf00      	nop
 8003e14:	08004b6f 	.word	0x08004b6f
 8003e18:	08004b80 	.word	0x08004b80

08003e1c <__d2b>:
 8003e1c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8003e20:	460f      	mov	r7, r1
 8003e22:	2101      	movs	r1, #1
 8003e24:	ec59 8b10 	vmov	r8, r9, d0
 8003e28:	4616      	mov	r6, r2
 8003e2a:	f7ff fcd5 	bl	80037d8 <_Balloc>
 8003e2e:	4604      	mov	r4, r0
 8003e30:	b930      	cbnz	r0, 8003e40 <__d2b+0x24>
 8003e32:	4602      	mov	r2, r0
 8003e34:	4b23      	ldr	r3, [pc, #140]	@ (8003ec4 <__d2b+0xa8>)
 8003e36:	4824      	ldr	r0, [pc, #144]	@ (8003ec8 <__d2b+0xac>)
 8003e38:	f240 310f 	movw	r1, #783	@ 0x30f
 8003e3c:	f000 fa82 	bl	8004344 <__assert_func>
 8003e40:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8003e44:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003e48:	b10d      	cbz	r5, 8003e4e <__d2b+0x32>
 8003e4a:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8003e4e:	9301      	str	r3, [sp, #4]
 8003e50:	f1b8 0300 	subs.w	r3, r8, #0
 8003e54:	d023      	beq.n	8003e9e <__d2b+0x82>
 8003e56:	4668      	mov	r0, sp
 8003e58:	9300      	str	r3, [sp, #0]
 8003e5a:	f7ff fd84 	bl	8003966 <__lo0bits>
 8003e5e:	e9dd 1200 	ldrd	r1, r2, [sp]
 8003e62:	b1d0      	cbz	r0, 8003e9a <__d2b+0x7e>
 8003e64:	f1c0 0320 	rsb	r3, r0, #32
 8003e68:	fa02 f303 	lsl.w	r3, r2, r3
 8003e6c:	430b      	orrs	r3, r1
 8003e6e:	40c2      	lsrs	r2, r0
 8003e70:	6163      	str	r3, [r4, #20]
 8003e72:	9201      	str	r2, [sp, #4]
 8003e74:	9b01      	ldr	r3, [sp, #4]
 8003e76:	61a3      	str	r3, [r4, #24]
 8003e78:	2b00      	cmp	r3, #0
 8003e7a:	bf0c      	ite	eq
 8003e7c:	2201      	moveq	r2, #1
 8003e7e:	2202      	movne	r2, #2
 8003e80:	6122      	str	r2, [r4, #16]
 8003e82:	b1a5      	cbz	r5, 8003eae <__d2b+0x92>
 8003e84:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8003e88:	4405      	add	r5, r0
 8003e8a:	603d      	str	r5, [r7, #0]
 8003e8c:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8003e90:	6030      	str	r0, [r6, #0]
 8003e92:	4620      	mov	r0, r4
 8003e94:	b003      	add	sp, #12
 8003e96:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003e9a:	6161      	str	r1, [r4, #20]
 8003e9c:	e7ea      	b.n	8003e74 <__d2b+0x58>
 8003e9e:	a801      	add	r0, sp, #4
 8003ea0:	f7ff fd61 	bl	8003966 <__lo0bits>
 8003ea4:	9b01      	ldr	r3, [sp, #4]
 8003ea6:	6163      	str	r3, [r4, #20]
 8003ea8:	3020      	adds	r0, #32
 8003eaa:	2201      	movs	r2, #1
 8003eac:	e7e8      	b.n	8003e80 <__d2b+0x64>
 8003eae:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8003eb2:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8003eb6:	6038      	str	r0, [r7, #0]
 8003eb8:	6918      	ldr	r0, [r3, #16]
 8003eba:	f7ff fd35 	bl	8003928 <__hi0bits>
 8003ebe:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8003ec2:	e7e5      	b.n	8003e90 <__d2b+0x74>
 8003ec4:	08004b6f 	.word	0x08004b6f
 8003ec8:	08004b80 	.word	0x08004b80

08003ecc <__ssputs_r>:
 8003ecc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003ed0:	688e      	ldr	r6, [r1, #8]
 8003ed2:	461f      	mov	r7, r3
 8003ed4:	42be      	cmp	r6, r7
 8003ed6:	680b      	ldr	r3, [r1, #0]
 8003ed8:	4682      	mov	sl, r0
 8003eda:	460c      	mov	r4, r1
 8003edc:	4690      	mov	r8, r2
 8003ede:	d82d      	bhi.n	8003f3c <__ssputs_r+0x70>
 8003ee0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003ee4:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8003ee8:	d026      	beq.n	8003f38 <__ssputs_r+0x6c>
 8003eea:	6965      	ldr	r5, [r4, #20]
 8003eec:	6909      	ldr	r1, [r1, #16]
 8003eee:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003ef2:	eba3 0901 	sub.w	r9, r3, r1
 8003ef6:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8003efa:	1c7b      	adds	r3, r7, #1
 8003efc:	444b      	add	r3, r9
 8003efe:	106d      	asrs	r5, r5, #1
 8003f00:	429d      	cmp	r5, r3
 8003f02:	bf38      	it	cc
 8003f04:	461d      	movcc	r5, r3
 8003f06:	0553      	lsls	r3, r2, #21
 8003f08:	d527      	bpl.n	8003f5a <__ssputs_r+0x8e>
 8003f0a:	4629      	mov	r1, r5
 8003f0c:	f7ff fbd8 	bl	80036c0 <_malloc_r>
 8003f10:	4606      	mov	r6, r0
 8003f12:	b360      	cbz	r0, 8003f6e <__ssputs_r+0xa2>
 8003f14:	6921      	ldr	r1, [r4, #16]
 8003f16:	464a      	mov	r2, r9
 8003f18:	f000 fa06 	bl	8004328 <memcpy>
 8003f1c:	89a3      	ldrh	r3, [r4, #12]
 8003f1e:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8003f22:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003f26:	81a3      	strh	r3, [r4, #12]
 8003f28:	6126      	str	r6, [r4, #16]
 8003f2a:	6165      	str	r5, [r4, #20]
 8003f2c:	444e      	add	r6, r9
 8003f2e:	eba5 0509 	sub.w	r5, r5, r9
 8003f32:	6026      	str	r6, [r4, #0]
 8003f34:	60a5      	str	r5, [r4, #8]
 8003f36:	463e      	mov	r6, r7
 8003f38:	42be      	cmp	r6, r7
 8003f3a:	d900      	bls.n	8003f3e <__ssputs_r+0x72>
 8003f3c:	463e      	mov	r6, r7
 8003f3e:	6820      	ldr	r0, [r4, #0]
 8003f40:	4632      	mov	r2, r6
 8003f42:	4641      	mov	r1, r8
 8003f44:	f000 f9c6 	bl	80042d4 <memmove>
 8003f48:	68a3      	ldr	r3, [r4, #8]
 8003f4a:	1b9b      	subs	r3, r3, r6
 8003f4c:	60a3      	str	r3, [r4, #8]
 8003f4e:	6823      	ldr	r3, [r4, #0]
 8003f50:	4433      	add	r3, r6
 8003f52:	6023      	str	r3, [r4, #0]
 8003f54:	2000      	movs	r0, #0
 8003f56:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003f5a:	462a      	mov	r2, r5
 8003f5c:	f000 fa36 	bl	80043cc <_realloc_r>
 8003f60:	4606      	mov	r6, r0
 8003f62:	2800      	cmp	r0, #0
 8003f64:	d1e0      	bne.n	8003f28 <__ssputs_r+0x5c>
 8003f66:	6921      	ldr	r1, [r4, #16]
 8003f68:	4650      	mov	r0, sl
 8003f6a:	f7ff fb35 	bl	80035d8 <_free_r>
 8003f6e:	230c      	movs	r3, #12
 8003f70:	f8ca 3000 	str.w	r3, [sl]
 8003f74:	89a3      	ldrh	r3, [r4, #12]
 8003f76:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003f7a:	81a3      	strh	r3, [r4, #12]
 8003f7c:	f04f 30ff 	mov.w	r0, #4294967295
 8003f80:	e7e9      	b.n	8003f56 <__ssputs_r+0x8a>
	...

08003f84 <_svfiprintf_r>:
 8003f84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003f88:	4698      	mov	r8, r3
 8003f8a:	898b      	ldrh	r3, [r1, #12]
 8003f8c:	061b      	lsls	r3, r3, #24
 8003f8e:	b09d      	sub	sp, #116	@ 0x74
 8003f90:	4607      	mov	r7, r0
 8003f92:	460d      	mov	r5, r1
 8003f94:	4614      	mov	r4, r2
 8003f96:	d510      	bpl.n	8003fba <_svfiprintf_r+0x36>
 8003f98:	690b      	ldr	r3, [r1, #16]
 8003f9a:	b973      	cbnz	r3, 8003fba <_svfiprintf_r+0x36>
 8003f9c:	2140      	movs	r1, #64	@ 0x40
 8003f9e:	f7ff fb8f 	bl	80036c0 <_malloc_r>
 8003fa2:	6028      	str	r0, [r5, #0]
 8003fa4:	6128      	str	r0, [r5, #16]
 8003fa6:	b930      	cbnz	r0, 8003fb6 <_svfiprintf_r+0x32>
 8003fa8:	230c      	movs	r3, #12
 8003faa:	603b      	str	r3, [r7, #0]
 8003fac:	f04f 30ff 	mov.w	r0, #4294967295
 8003fb0:	b01d      	add	sp, #116	@ 0x74
 8003fb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003fb6:	2340      	movs	r3, #64	@ 0x40
 8003fb8:	616b      	str	r3, [r5, #20]
 8003fba:	2300      	movs	r3, #0
 8003fbc:	9309      	str	r3, [sp, #36]	@ 0x24
 8003fbe:	2320      	movs	r3, #32
 8003fc0:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8003fc4:	f8cd 800c 	str.w	r8, [sp, #12]
 8003fc8:	2330      	movs	r3, #48	@ 0x30
 8003fca:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8004168 <_svfiprintf_r+0x1e4>
 8003fce:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8003fd2:	f04f 0901 	mov.w	r9, #1
 8003fd6:	4623      	mov	r3, r4
 8003fd8:	469a      	mov	sl, r3
 8003fda:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003fde:	b10a      	cbz	r2, 8003fe4 <_svfiprintf_r+0x60>
 8003fe0:	2a25      	cmp	r2, #37	@ 0x25
 8003fe2:	d1f9      	bne.n	8003fd8 <_svfiprintf_r+0x54>
 8003fe4:	ebba 0b04 	subs.w	fp, sl, r4
 8003fe8:	d00b      	beq.n	8004002 <_svfiprintf_r+0x7e>
 8003fea:	465b      	mov	r3, fp
 8003fec:	4622      	mov	r2, r4
 8003fee:	4629      	mov	r1, r5
 8003ff0:	4638      	mov	r0, r7
 8003ff2:	f7ff ff6b 	bl	8003ecc <__ssputs_r>
 8003ff6:	3001      	adds	r0, #1
 8003ff8:	f000 80a7 	beq.w	800414a <_svfiprintf_r+0x1c6>
 8003ffc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003ffe:	445a      	add	r2, fp
 8004000:	9209      	str	r2, [sp, #36]	@ 0x24
 8004002:	f89a 3000 	ldrb.w	r3, [sl]
 8004006:	2b00      	cmp	r3, #0
 8004008:	f000 809f 	beq.w	800414a <_svfiprintf_r+0x1c6>
 800400c:	2300      	movs	r3, #0
 800400e:	f04f 32ff 	mov.w	r2, #4294967295
 8004012:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004016:	f10a 0a01 	add.w	sl, sl, #1
 800401a:	9304      	str	r3, [sp, #16]
 800401c:	9307      	str	r3, [sp, #28]
 800401e:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8004022:	931a      	str	r3, [sp, #104]	@ 0x68
 8004024:	4654      	mov	r4, sl
 8004026:	2205      	movs	r2, #5
 8004028:	f814 1b01 	ldrb.w	r1, [r4], #1
 800402c:	484e      	ldr	r0, [pc, #312]	@ (8004168 <_svfiprintf_r+0x1e4>)
 800402e:	f7fc f8d7 	bl	80001e0 <memchr>
 8004032:	9a04      	ldr	r2, [sp, #16]
 8004034:	b9d8      	cbnz	r0, 800406e <_svfiprintf_r+0xea>
 8004036:	06d0      	lsls	r0, r2, #27
 8004038:	bf44      	itt	mi
 800403a:	2320      	movmi	r3, #32
 800403c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004040:	0711      	lsls	r1, r2, #28
 8004042:	bf44      	itt	mi
 8004044:	232b      	movmi	r3, #43	@ 0x2b
 8004046:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800404a:	f89a 3000 	ldrb.w	r3, [sl]
 800404e:	2b2a      	cmp	r3, #42	@ 0x2a
 8004050:	d015      	beq.n	800407e <_svfiprintf_r+0xfa>
 8004052:	9a07      	ldr	r2, [sp, #28]
 8004054:	4654      	mov	r4, sl
 8004056:	2000      	movs	r0, #0
 8004058:	f04f 0c0a 	mov.w	ip, #10
 800405c:	4621      	mov	r1, r4
 800405e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004062:	3b30      	subs	r3, #48	@ 0x30
 8004064:	2b09      	cmp	r3, #9
 8004066:	d94b      	bls.n	8004100 <_svfiprintf_r+0x17c>
 8004068:	b1b0      	cbz	r0, 8004098 <_svfiprintf_r+0x114>
 800406a:	9207      	str	r2, [sp, #28]
 800406c:	e014      	b.n	8004098 <_svfiprintf_r+0x114>
 800406e:	eba0 0308 	sub.w	r3, r0, r8
 8004072:	fa09 f303 	lsl.w	r3, r9, r3
 8004076:	4313      	orrs	r3, r2
 8004078:	9304      	str	r3, [sp, #16]
 800407a:	46a2      	mov	sl, r4
 800407c:	e7d2      	b.n	8004024 <_svfiprintf_r+0xa0>
 800407e:	9b03      	ldr	r3, [sp, #12]
 8004080:	1d19      	adds	r1, r3, #4
 8004082:	681b      	ldr	r3, [r3, #0]
 8004084:	9103      	str	r1, [sp, #12]
 8004086:	2b00      	cmp	r3, #0
 8004088:	bfbb      	ittet	lt
 800408a:	425b      	neglt	r3, r3
 800408c:	f042 0202 	orrlt.w	r2, r2, #2
 8004090:	9307      	strge	r3, [sp, #28]
 8004092:	9307      	strlt	r3, [sp, #28]
 8004094:	bfb8      	it	lt
 8004096:	9204      	strlt	r2, [sp, #16]
 8004098:	7823      	ldrb	r3, [r4, #0]
 800409a:	2b2e      	cmp	r3, #46	@ 0x2e
 800409c:	d10a      	bne.n	80040b4 <_svfiprintf_r+0x130>
 800409e:	7863      	ldrb	r3, [r4, #1]
 80040a0:	2b2a      	cmp	r3, #42	@ 0x2a
 80040a2:	d132      	bne.n	800410a <_svfiprintf_r+0x186>
 80040a4:	9b03      	ldr	r3, [sp, #12]
 80040a6:	1d1a      	adds	r2, r3, #4
 80040a8:	681b      	ldr	r3, [r3, #0]
 80040aa:	9203      	str	r2, [sp, #12]
 80040ac:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80040b0:	3402      	adds	r4, #2
 80040b2:	9305      	str	r3, [sp, #20]
 80040b4:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8004178 <_svfiprintf_r+0x1f4>
 80040b8:	7821      	ldrb	r1, [r4, #0]
 80040ba:	2203      	movs	r2, #3
 80040bc:	4650      	mov	r0, sl
 80040be:	f7fc f88f 	bl	80001e0 <memchr>
 80040c2:	b138      	cbz	r0, 80040d4 <_svfiprintf_r+0x150>
 80040c4:	9b04      	ldr	r3, [sp, #16]
 80040c6:	eba0 000a 	sub.w	r0, r0, sl
 80040ca:	2240      	movs	r2, #64	@ 0x40
 80040cc:	4082      	lsls	r2, r0
 80040ce:	4313      	orrs	r3, r2
 80040d0:	3401      	adds	r4, #1
 80040d2:	9304      	str	r3, [sp, #16]
 80040d4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80040d8:	4824      	ldr	r0, [pc, #144]	@ (800416c <_svfiprintf_r+0x1e8>)
 80040da:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80040de:	2206      	movs	r2, #6
 80040e0:	f7fc f87e 	bl	80001e0 <memchr>
 80040e4:	2800      	cmp	r0, #0
 80040e6:	d036      	beq.n	8004156 <_svfiprintf_r+0x1d2>
 80040e8:	4b21      	ldr	r3, [pc, #132]	@ (8004170 <_svfiprintf_r+0x1ec>)
 80040ea:	bb1b      	cbnz	r3, 8004134 <_svfiprintf_r+0x1b0>
 80040ec:	9b03      	ldr	r3, [sp, #12]
 80040ee:	3307      	adds	r3, #7
 80040f0:	f023 0307 	bic.w	r3, r3, #7
 80040f4:	3308      	adds	r3, #8
 80040f6:	9303      	str	r3, [sp, #12]
 80040f8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80040fa:	4433      	add	r3, r6
 80040fc:	9309      	str	r3, [sp, #36]	@ 0x24
 80040fe:	e76a      	b.n	8003fd6 <_svfiprintf_r+0x52>
 8004100:	fb0c 3202 	mla	r2, ip, r2, r3
 8004104:	460c      	mov	r4, r1
 8004106:	2001      	movs	r0, #1
 8004108:	e7a8      	b.n	800405c <_svfiprintf_r+0xd8>
 800410a:	2300      	movs	r3, #0
 800410c:	3401      	adds	r4, #1
 800410e:	9305      	str	r3, [sp, #20]
 8004110:	4619      	mov	r1, r3
 8004112:	f04f 0c0a 	mov.w	ip, #10
 8004116:	4620      	mov	r0, r4
 8004118:	f810 2b01 	ldrb.w	r2, [r0], #1
 800411c:	3a30      	subs	r2, #48	@ 0x30
 800411e:	2a09      	cmp	r2, #9
 8004120:	d903      	bls.n	800412a <_svfiprintf_r+0x1a6>
 8004122:	2b00      	cmp	r3, #0
 8004124:	d0c6      	beq.n	80040b4 <_svfiprintf_r+0x130>
 8004126:	9105      	str	r1, [sp, #20]
 8004128:	e7c4      	b.n	80040b4 <_svfiprintf_r+0x130>
 800412a:	fb0c 2101 	mla	r1, ip, r1, r2
 800412e:	4604      	mov	r4, r0
 8004130:	2301      	movs	r3, #1
 8004132:	e7f0      	b.n	8004116 <_svfiprintf_r+0x192>
 8004134:	ab03      	add	r3, sp, #12
 8004136:	9300      	str	r3, [sp, #0]
 8004138:	462a      	mov	r2, r5
 800413a:	4b0e      	ldr	r3, [pc, #56]	@ (8004174 <_svfiprintf_r+0x1f0>)
 800413c:	a904      	add	r1, sp, #16
 800413e:	4638      	mov	r0, r7
 8004140:	f7fd fe80 	bl	8001e44 <_printf_float>
 8004144:	1c42      	adds	r2, r0, #1
 8004146:	4606      	mov	r6, r0
 8004148:	d1d6      	bne.n	80040f8 <_svfiprintf_r+0x174>
 800414a:	89ab      	ldrh	r3, [r5, #12]
 800414c:	065b      	lsls	r3, r3, #25
 800414e:	f53f af2d 	bmi.w	8003fac <_svfiprintf_r+0x28>
 8004152:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004154:	e72c      	b.n	8003fb0 <_svfiprintf_r+0x2c>
 8004156:	ab03      	add	r3, sp, #12
 8004158:	9300      	str	r3, [sp, #0]
 800415a:	462a      	mov	r2, r5
 800415c:	4b05      	ldr	r3, [pc, #20]	@ (8004174 <_svfiprintf_r+0x1f0>)
 800415e:	a904      	add	r1, sp, #16
 8004160:	4638      	mov	r0, r7
 8004162:	f7fe f907 	bl	8002374 <_printf_i>
 8004166:	e7ed      	b.n	8004144 <_svfiprintf_r+0x1c0>
 8004168:	08004bd9 	.word	0x08004bd9
 800416c:	08004be3 	.word	0x08004be3
 8004170:	08001e45 	.word	0x08001e45
 8004174:	08003ecd 	.word	0x08003ecd
 8004178:	08004bdf 	.word	0x08004bdf

0800417c <__sflush_r>:
 800417c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8004180:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004184:	0716      	lsls	r6, r2, #28
 8004186:	4605      	mov	r5, r0
 8004188:	460c      	mov	r4, r1
 800418a:	d454      	bmi.n	8004236 <__sflush_r+0xba>
 800418c:	684b      	ldr	r3, [r1, #4]
 800418e:	2b00      	cmp	r3, #0
 8004190:	dc02      	bgt.n	8004198 <__sflush_r+0x1c>
 8004192:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8004194:	2b00      	cmp	r3, #0
 8004196:	dd48      	ble.n	800422a <__sflush_r+0xae>
 8004198:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800419a:	2e00      	cmp	r6, #0
 800419c:	d045      	beq.n	800422a <__sflush_r+0xae>
 800419e:	2300      	movs	r3, #0
 80041a0:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80041a4:	682f      	ldr	r7, [r5, #0]
 80041a6:	6a21      	ldr	r1, [r4, #32]
 80041a8:	602b      	str	r3, [r5, #0]
 80041aa:	d030      	beq.n	800420e <__sflush_r+0x92>
 80041ac:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80041ae:	89a3      	ldrh	r3, [r4, #12]
 80041b0:	0759      	lsls	r1, r3, #29
 80041b2:	d505      	bpl.n	80041c0 <__sflush_r+0x44>
 80041b4:	6863      	ldr	r3, [r4, #4]
 80041b6:	1ad2      	subs	r2, r2, r3
 80041b8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80041ba:	b10b      	cbz	r3, 80041c0 <__sflush_r+0x44>
 80041bc:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80041be:	1ad2      	subs	r2, r2, r3
 80041c0:	2300      	movs	r3, #0
 80041c2:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80041c4:	6a21      	ldr	r1, [r4, #32]
 80041c6:	4628      	mov	r0, r5
 80041c8:	47b0      	blx	r6
 80041ca:	1c43      	adds	r3, r0, #1
 80041cc:	89a3      	ldrh	r3, [r4, #12]
 80041ce:	d106      	bne.n	80041de <__sflush_r+0x62>
 80041d0:	6829      	ldr	r1, [r5, #0]
 80041d2:	291d      	cmp	r1, #29
 80041d4:	d82b      	bhi.n	800422e <__sflush_r+0xb2>
 80041d6:	4a2a      	ldr	r2, [pc, #168]	@ (8004280 <__sflush_r+0x104>)
 80041d8:	40ca      	lsrs	r2, r1
 80041da:	07d6      	lsls	r6, r2, #31
 80041dc:	d527      	bpl.n	800422e <__sflush_r+0xb2>
 80041de:	2200      	movs	r2, #0
 80041e0:	6062      	str	r2, [r4, #4]
 80041e2:	04d9      	lsls	r1, r3, #19
 80041e4:	6922      	ldr	r2, [r4, #16]
 80041e6:	6022      	str	r2, [r4, #0]
 80041e8:	d504      	bpl.n	80041f4 <__sflush_r+0x78>
 80041ea:	1c42      	adds	r2, r0, #1
 80041ec:	d101      	bne.n	80041f2 <__sflush_r+0x76>
 80041ee:	682b      	ldr	r3, [r5, #0]
 80041f0:	b903      	cbnz	r3, 80041f4 <__sflush_r+0x78>
 80041f2:	6560      	str	r0, [r4, #84]	@ 0x54
 80041f4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80041f6:	602f      	str	r7, [r5, #0]
 80041f8:	b1b9      	cbz	r1, 800422a <__sflush_r+0xae>
 80041fa:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80041fe:	4299      	cmp	r1, r3
 8004200:	d002      	beq.n	8004208 <__sflush_r+0x8c>
 8004202:	4628      	mov	r0, r5
 8004204:	f7ff f9e8 	bl	80035d8 <_free_r>
 8004208:	2300      	movs	r3, #0
 800420a:	6363      	str	r3, [r4, #52]	@ 0x34
 800420c:	e00d      	b.n	800422a <__sflush_r+0xae>
 800420e:	2301      	movs	r3, #1
 8004210:	4628      	mov	r0, r5
 8004212:	47b0      	blx	r6
 8004214:	4602      	mov	r2, r0
 8004216:	1c50      	adds	r0, r2, #1
 8004218:	d1c9      	bne.n	80041ae <__sflush_r+0x32>
 800421a:	682b      	ldr	r3, [r5, #0]
 800421c:	2b00      	cmp	r3, #0
 800421e:	d0c6      	beq.n	80041ae <__sflush_r+0x32>
 8004220:	2b1d      	cmp	r3, #29
 8004222:	d001      	beq.n	8004228 <__sflush_r+0xac>
 8004224:	2b16      	cmp	r3, #22
 8004226:	d11e      	bne.n	8004266 <__sflush_r+0xea>
 8004228:	602f      	str	r7, [r5, #0]
 800422a:	2000      	movs	r0, #0
 800422c:	e022      	b.n	8004274 <__sflush_r+0xf8>
 800422e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8004232:	b21b      	sxth	r3, r3
 8004234:	e01b      	b.n	800426e <__sflush_r+0xf2>
 8004236:	690f      	ldr	r7, [r1, #16]
 8004238:	2f00      	cmp	r7, #0
 800423a:	d0f6      	beq.n	800422a <__sflush_r+0xae>
 800423c:	0793      	lsls	r3, r2, #30
 800423e:	680e      	ldr	r6, [r1, #0]
 8004240:	bf08      	it	eq
 8004242:	694b      	ldreq	r3, [r1, #20]
 8004244:	600f      	str	r7, [r1, #0]
 8004246:	bf18      	it	ne
 8004248:	2300      	movne	r3, #0
 800424a:	eba6 0807 	sub.w	r8, r6, r7
 800424e:	608b      	str	r3, [r1, #8]
 8004250:	f1b8 0f00 	cmp.w	r8, #0
 8004254:	dde9      	ble.n	800422a <__sflush_r+0xae>
 8004256:	6a21      	ldr	r1, [r4, #32]
 8004258:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 800425a:	4643      	mov	r3, r8
 800425c:	463a      	mov	r2, r7
 800425e:	4628      	mov	r0, r5
 8004260:	47b0      	blx	r6
 8004262:	2800      	cmp	r0, #0
 8004264:	dc08      	bgt.n	8004278 <__sflush_r+0xfc>
 8004266:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800426a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800426e:	81a3      	strh	r3, [r4, #12]
 8004270:	f04f 30ff 	mov.w	r0, #4294967295
 8004274:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004278:	4407      	add	r7, r0
 800427a:	eba8 0800 	sub.w	r8, r8, r0
 800427e:	e7e7      	b.n	8004250 <__sflush_r+0xd4>
 8004280:	20400001 	.word	0x20400001

08004284 <_fflush_r>:
 8004284:	b538      	push	{r3, r4, r5, lr}
 8004286:	690b      	ldr	r3, [r1, #16]
 8004288:	4605      	mov	r5, r0
 800428a:	460c      	mov	r4, r1
 800428c:	b913      	cbnz	r3, 8004294 <_fflush_r+0x10>
 800428e:	2500      	movs	r5, #0
 8004290:	4628      	mov	r0, r5
 8004292:	bd38      	pop	{r3, r4, r5, pc}
 8004294:	b118      	cbz	r0, 800429e <_fflush_r+0x1a>
 8004296:	6a03      	ldr	r3, [r0, #32]
 8004298:	b90b      	cbnz	r3, 800429e <_fflush_r+0x1a>
 800429a:	f7fe fa15 	bl	80026c8 <__sinit>
 800429e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80042a2:	2b00      	cmp	r3, #0
 80042a4:	d0f3      	beq.n	800428e <_fflush_r+0xa>
 80042a6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80042a8:	07d0      	lsls	r0, r2, #31
 80042aa:	d404      	bmi.n	80042b6 <_fflush_r+0x32>
 80042ac:	0599      	lsls	r1, r3, #22
 80042ae:	d402      	bmi.n	80042b6 <_fflush_r+0x32>
 80042b0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80042b2:	f7fe fb36 	bl	8002922 <__retarget_lock_acquire_recursive>
 80042b6:	4628      	mov	r0, r5
 80042b8:	4621      	mov	r1, r4
 80042ba:	f7ff ff5f 	bl	800417c <__sflush_r>
 80042be:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80042c0:	07da      	lsls	r2, r3, #31
 80042c2:	4605      	mov	r5, r0
 80042c4:	d4e4      	bmi.n	8004290 <_fflush_r+0xc>
 80042c6:	89a3      	ldrh	r3, [r4, #12]
 80042c8:	059b      	lsls	r3, r3, #22
 80042ca:	d4e1      	bmi.n	8004290 <_fflush_r+0xc>
 80042cc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80042ce:	f7fe fb29 	bl	8002924 <__retarget_lock_release_recursive>
 80042d2:	e7dd      	b.n	8004290 <_fflush_r+0xc>

080042d4 <memmove>:
 80042d4:	4288      	cmp	r0, r1
 80042d6:	b510      	push	{r4, lr}
 80042d8:	eb01 0402 	add.w	r4, r1, r2
 80042dc:	d902      	bls.n	80042e4 <memmove+0x10>
 80042de:	4284      	cmp	r4, r0
 80042e0:	4623      	mov	r3, r4
 80042e2:	d807      	bhi.n	80042f4 <memmove+0x20>
 80042e4:	1e43      	subs	r3, r0, #1
 80042e6:	42a1      	cmp	r1, r4
 80042e8:	d008      	beq.n	80042fc <memmove+0x28>
 80042ea:	f811 2b01 	ldrb.w	r2, [r1], #1
 80042ee:	f803 2f01 	strb.w	r2, [r3, #1]!
 80042f2:	e7f8      	b.n	80042e6 <memmove+0x12>
 80042f4:	4402      	add	r2, r0
 80042f6:	4601      	mov	r1, r0
 80042f8:	428a      	cmp	r2, r1
 80042fa:	d100      	bne.n	80042fe <memmove+0x2a>
 80042fc:	bd10      	pop	{r4, pc}
 80042fe:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8004302:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8004306:	e7f7      	b.n	80042f8 <memmove+0x24>

08004308 <_sbrk_r>:
 8004308:	b538      	push	{r3, r4, r5, lr}
 800430a:	4d06      	ldr	r5, [pc, #24]	@ (8004324 <_sbrk_r+0x1c>)
 800430c:	2300      	movs	r3, #0
 800430e:	4604      	mov	r4, r0
 8004310:	4608      	mov	r0, r1
 8004312:	602b      	str	r3, [r5, #0]
 8004314:	f7fd fc86 	bl	8001c24 <_sbrk>
 8004318:	1c43      	adds	r3, r0, #1
 800431a:	d102      	bne.n	8004322 <_sbrk_r+0x1a>
 800431c:	682b      	ldr	r3, [r5, #0]
 800431e:	b103      	cbz	r3, 8004322 <_sbrk_r+0x1a>
 8004320:	6023      	str	r3, [r4, #0]
 8004322:	bd38      	pop	{r3, r4, r5, pc}
 8004324:	20000338 	.word	0x20000338

08004328 <memcpy>:
 8004328:	440a      	add	r2, r1
 800432a:	4291      	cmp	r1, r2
 800432c:	f100 33ff 	add.w	r3, r0, #4294967295
 8004330:	d100      	bne.n	8004334 <memcpy+0xc>
 8004332:	4770      	bx	lr
 8004334:	b510      	push	{r4, lr}
 8004336:	f811 4b01 	ldrb.w	r4, [r1], #1
 800433a:	f803 4f01 	strb.w	r4, [r3, #1]!
 800433e:	4291      	cmp	r1, r2
 8004340:	d1f9      	bne.n	8004336 <memcpy+0xe>
 8004342:	bd10      	pop	{r4, pc}

08004344 <__assert_func>:
 8004344:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004346:	4614      	mov	r4, r2
 8004348:	461a      	mov	r2, r3
 800434a:	4b09      	ldr	r3, [pc, #36]	@ (8004370 <__assert_func+0x2c>)
 800434c:	681b      	ldr	r3, [r3, #0]
 800434e:	4605      	mov	r5, r0
 8004350:	68d8      	ldr	r0, [r3, #12]
 8004352:	b14c      	cbz	r4, 8004368 <__assert_func+0x24>
 8004354:	4b07      	ldr	r3, [pc, #28]	@ (8004374 <__assert_func+0x30>)
 8004356:	9100      	str	r1, [sp, #0]
 8004358:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800435c:	4906      	ldr	r1, [pc, #24]	@ (8004378 <__assert_func+0x34>)
 800435e:	462b      	mov	r3, r5
 8004360:	f000 f870 	bl	8004444 <fiprintf>
 8004364:	f000 f880 	bl	8004468 <abort>
 8004368:	4b04      	ldr	r3, [pc, #16]	@ (800437c <__assert_func+0x38>)
 800436a:	461c      	mov	r4, r3
 800436c:	e7f3      	b.n	8004356 <__assert_func+0x12>
 800436e:	bf00      	nop
 8004370:	20000010 	.word	0x20000010
 8004374:	08004bf4 	.word	0x08004bf4
 8004378:	08004c01 	.word	0x08004c01
 800437c:	08004c2f 	.word	0x08004c2f

08004380 <_calloc_r>:
 8004380:	b570      	push	{r4, r5, r6, lr}
 8004382:	fba1 5402 	umull	r5, r4, r1, r2
 8004386:	b934      	cbnz	r4, 8004396 <_calloc_r+0x16>
 8004388:	4629      	mov	r1, r5
 800438a:	f7ff f999 	bl	80036c0 <_malloc_r>
 800438e:	4606      	mov	r6, r0
 8004390:	b928      	cbnz	r0, 800439e <_calloc_r+0x1e>
 8004392:	4630      	mov	r0, r6
 8004394:	bd70      	pop	{r4, r5, r6, pc}
 8004396:	220c      	movs	r2, #12
 8004398:	6002      	str	r2, [r0, #0]
 800439a:	2600      	movs	r6, #0
 800439c:	e7f9      	b.n	8004392 <_calloc_r+0x12>
 800439e:	462a      	mov	r2, r5
 80043a0:	4621      	mov	r1, r4
 80043a2:	f7fe fa40 	bl	8002826 <memset>
 80043a6:	e7f4      	b.n	8004392 <_calloc_r+0x12>

080043a8 <__ascii_mbtowc>:
 80043a8:	b082      	sub	sp, #8
 80043aa:	b901      	cbnz	r1, 80043ae <__ascii_mbtowc+0x6>
 80043ac:	a901      	add	r1, sp, #4
 80043ae:	b142      	cbz	r2, 80043c2 <__ascii_mbtowc+0x1a>
 80043b0:	b14b      	cbz	r3, 80043c6 <__ascii_mbtowc+0x1e>
 80043b2:	7813      	ldrb	r3, [r2, #0]
 80043b4:	600b      	str	r3, [r1, #0]
 80043b6:	7812      	ldrb	r2, [r2, #0]
 80043b8:	1e10      	subs	r0, r2, #0
 80043ba:	bf18      	it	ne
 80043bc:	2001      	movne	r0, #1
 80043be:	b002      	add	sp, #8
 80043c0:	4770      	bx	lr
 80043c2:	4610      	mov	r0, r2
 80043c4:	e7fb      	b.n	80043be <__ascii_mbtowc+0x16>
 80043c6:	f06f 0001 	mvn.w	r0, #1
 80043ca:	e7f8      	b.n	80043be <__ascii_mbtowc+0x16>

080043cc <_realloc_r>:
 80043cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80043d0:	4607      	mov	r7, r0
 80043d2:	4614      	mov	r4, r2
 80043d4:	460d      	mov	r5, r1
 80043d6:	b921      	cbnz	r1, 80043e2 <_realloc_r+0x16>
 80043d8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80043dc:	4611      	mov	r1, r2
 80043de:	f7ff b96f 	b.w	80036c0 <_malloc_r>
 80043e2:	b92a      	cbnz	r2, 80043f0 <_realloc_r+0x24>
 80043e4:	f7ff f8f8 	bl	80035d8 <_free_r>
 80043e8:	4625      	mov	r5, r4
 80043ea:	4628      	mov	r0, r5
 80043ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80043f0:	f000 f841 	bl	8004476 <_malloc_usable_size_r>
 80043f4:	4284      	cmp	r4, r0
 80043f6:	4606      	mov	r6, r0
 80043f8:	d802      	bhi.n	8004400 <_realloc_r+0x34>
 80043fa:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80043fe:	d8f4      	bhi.n	80043ea <_realloc_r+0x1e>
 8004400:	4621      	mov	r1, r4
 8004402:	4638      	mov	r0, r7
 8004404:	f7ff f95c 	bl	80036c0 <_malloc_r>
 8004408:	4680      	mov	r8, r0
 800440a:	b908      	cbnz	r0, 8004410 <_realloc_r+0x44>
 800440c:	4645      	mov	r5, r8
 800440e:	e7ec      	b.n	80043ea <_realloc_r+0x1e>
 8004410:	42b4      	cmp	r4, r6
 8004412:	4622      	mov	r2, r4
 8004414:	4629      	mov	r1, r5
 8004416:	bf28      	it	cs
 8004418:	4632      	movcs	r2, r6
 800441a:	f7ff ff85 	bl	8004328 <memcpy>
 800441e:	4629      	mov	r1, r5
 8004420:	4638      	mov	r0, r7
 8004422:	f7ff f8d9 	bl	80035d8 <_free_r>
 8004426:	e7f1      	b.n	800440c <_realloc_r+0x40>

08004428 <__ascii_wctomb>:
 8004428:	4603      	mov	r3, r0
 800442a:	4608      	mov	r0, r1
 800442c:	b141      	cbz	r1, 8004440 <__ascii_wctomb+0x18>
 800442e:	2aff      	cmp	r2, #255	@ 0xff
 8004430:	d904      	bls.n	800443c <__ascii_wctomb+0x14>
 8004432:	228a      	movs	r2, #138	@ 0x8a
 8004434:	601a      	str	r2, [r3, #0]
 8004436:	f04f 30ff 	mov.w	r0, #4294967295
 800443a:	4770      	bx	lr
 800443c:	700a      	strb	r2, [r1, #0]
 800443e:	2001      	movs	r0, #1
 8004440:	4770      	bx	lr
	...

08004444 <fiprintf>:
 8004444:	b40e      	push	{r1, r2, r3}
 8004446:	b503      	push	{r0, r1, lr}
 8004448:	4601      	mov	r1, r0
 800444a:	ab03      	add	r3, sp, #12
 800444c:	4805      	ldr	r0, [pc, #20]	@ (8004464 <fiprintf+0x20>)
 800444e:	f853 2b04 	ldr.w	r2, [r3], #4
 8004452:	6800      	ldr	r0, [r0, #0]
 8004454:	9301      	str	r3, [sp, #4]
 8004456:	f000 f83f 	bl	80044d8 <_vfiprintf_r>
 800445a:	b002      	add	sp, #8
 800445c:	f85d eb04 	ldr.w	lr, [sp], #4
 8004460:	b003      	add	sp, #12
 8004462:	4770      	bx	lr
 8004464:	20000010 	.word	0x20000010

08004468 <abort>:
 8004468:	b508      	push	{r3, lr}
 800446a:	2006      	movs	r0, #6
 800446c:	f000 fa08 	bl	8004880 <raise>
 8004470:	2001      	movs	r0, #1
 8004472:	f7fd fb5e 	bl	8001b32 <_exit>

08004476 <_malloc_usable_size_r>:
 8004476:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800447a:	1f18      	subs	r0, r3, #4
 800447c:	2b00      	cmp	r3, #0
 800447e:	bfbc      	itt	lt
 8004480:	580b      	ldrlt	r3, [r1, r0]
 8004482:	18c0      	addlt	r0, r0, r3
 8004484:	4770      	bx	lr

08004486 <__sfputc_r>:
 8004486:	6893      	ldr	r3, [r2, #8]
 8004488:	3b01      	subs	r3, #1
 800448a:	2b00      	cmp	r3, #0
 800448c:	b410      	push	{r4}
 800448e:	6093      	str	r3, [r2, #8]
 8004490:	da08      	bge.n	80044a4 <__sfputc_r+0x1e>
 8004492:	6994      	ldr	r4, [r2, #24]
 8004494:	42a3      	cmp	r3, r4
 8004496:	db01      	blt.n	800449c <__sfputc_r+0x16>
 8004498:	290a      	cmp	r1, #10
 800449a:	d103      	bne.n	80044a4 <__sfputc_r+0x1e>
 800449c:	f85d 4b04 	ldr.w	r4, [sp], #4
 80044a0:	f000 b932 	b.w	8004708 <__swbuf_r>
 80044a4:	6813      	ldr	r3, [r2, #0]
 80044a6:	1c58      	adds	r0, r3, #1
 80044a8:	6010      	str	r0, [r2, #0]
 80044aa:	7019      	strb	r1, [r3, #0]
 80044ac:	4608      	mov	r0, r1
 80044ae:	f85d 4b04 	ldr.w	r4, [sp], #4
 80044b2:	4770      	bx	lr

080044b4 <__sfputs_r>:
 80044b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80044b6:	4606      	mov	r6, r0
 80044b8:	460f      	mov	r7, r1
 80044ba:	4614      	mov	r4, r2
 80044bc:	18d5      	adds	r5, r2, r3
 80044be:	42ac      	cmp	r4, r5
 80044c0:	d101      	bne.n	80044c6 <__sfputs_r+0x12>
 80044c2:	2000      	movs	r0, #0
 80044c4:	e007      	b.n	80044d6 <__sfputs_r+0x22>
 80044c6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80044ca:	463a      	mov	r2, r7
 80044cc:	4630      	mov	r0, r6
 80044ce:	f7ff ffda 	bl	8004486 <__sfputc_r>
 80044d2:	1c43      	adds	r3, r0, #1
 80044d4:	d1f3      	bne.n	80044be <__sfputs_r+0xa>
 80044d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080044d8 <_vfiprintf_r>:
 80044d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80044dc:	460d      	mov	r5, r1
 80044de:	b09d      	sub	sp, #116	@ 0x74
 80044e0:	4614      	mov	r4, r2
 80044e2:	4698      	mov	r8, r3
 80044e4:	4606      	mov	r6, r0
 80044e6:	b118      	cbz	r0, 80044f0 <_vfiprintf_r+0x18>
 80044e8:	6a03      	ldr	r3, [r0, #32]
 80044ea:	b90b      	cbnz	r3, 80044f0 <_vfiprintf_r+0x18>
 80044ec:	f7fe f8ec 	bl	80026c8 <__sinit>
 80044f0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80044f2:	07d9      	lsls	r1, r3, #31
 80044f4:	d405      	bmi.n	8004502 <_vfiprintf_r+0x2a>
 80044f6:	89ab      	ldrh	r3, [r5, #12]
 80044f8:	059a      	lsls	r2, r3, #22
 80044fa:	d402      	bmi.n	8004502 <_vfiprintf_r+0x2a>
 80044fc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80044fe:	f7fe fa10 	bl	8002922 <__retarget_lock_acquire_recursive>
 8004502:	89ab      	ldrh	r3, [r5, #12]
 8004504:	071b      	lsls	r3, r3, #28
 8004506:	d501      	bpl.n	800450c <_vfiprintf_r+0x34>
 8004508:	692b      	ldr	r3, [r5, #16]
 800450a:	b99b      	cbnz	r3, 8004534 <_vfiprintf_r+0x5c>
 800450c:	4629      	mov	r1, r5
 800450e:	4630      	mov	r0, r6
 8004510:	f000 f938 	bl	8004784 <__swsetup_r>
 8004514:	b170      	cbz	r0, 8004534 <_vfiprintf_r+0x5c>
 8004516:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8004518:	07dc      	lsls	r4, r3, #31
 800451a:	d504      	bpl.n	8004526 <_vfiprintf_r+0x4e>
 800451c:	f04f 30ff 	mov.w	r0, #4294967295
 8004520:	b01d      	add	sp, #116	@ 0x74
 8004522:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004526:	89ab      	ldrh	r3, [r5, #12]
 8004528:	0598      	lsls	r0, r3, #22
 800452a:	d4f7      	bmi.n	800451c <_vfiprintf_r+0x44>
 800452c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800452e:	f7fe f9f9 	bl	8002924 <__retarget_lock_release_recursive>
 8004532:	e7f3      	b.n	800451c <_vfiprintf_r+0x44>
 8004534:	2300      	movs	r3, #0
 8004536:	9309      	str	r3, [sp, #36]	@ 0x24
 8004538:	2320      	movs	r3, #32
 800453a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800453e:	f8cd 800c 	str.w	r8, [sp, #12]
 8004542:	2330      	movs	r3, #48	@ 0x30
 8004544:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 80046f4 <_vfiprintf_r+0x21c>
 8004548:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800454c:	f04f 0901 	mov.w	r9, #1
 8004550:	4623      	mov	r3, r4
 8004552:	469a      	mov	sl, r3
 8004554:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004558:	b10a      	cbz	r2, 800455e <_vfiprintf_r+0x86>
 800455a:	2a25      	cmp	r2, #37	@ 0x25
 800455c:	d1f9      	bne.n	8004552 <_vfiprintf_r+0x7a>
 800455e:	ebba 0b04 	subs.w	fp, sl, r4
 8004562:	d00b      	beq.n	800457c <_vfiprintf_r+0xa4>
 8004564:	465b      	mov	r3, fp
 8004566:	4622      	mov	r2, r4
 8004568:	4629      	mov	r1, r5
 800456a:	4630      	mov	r0, r6
 800456c:	f7ff ffa2 	bl	80044b4 <__sfputs_r>
 8004570:	3001      	adds	r0, #1
 8004572:	f000 80a7 	beq.w	80046c4 <_vfiprintf_r+0x1ec>
 8004576:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004578:	445a      	add	r2, fp
 800457a:	9209      	str	r2, [sp, #36]	@ 0x24
 800457c:	f89a 3000 	ldrb.w	r3, [sl]
 8004580:	2b00      	cmp	r3, #0
 8004582:	f000 809f 	beq.w	80046c4 <_vfiprintf_r+0x1ec>
 8004586:	2300      	movs	r3, #0
 8004588:	f04f 32ff 	mov.w	r2, #4294967295
 800458c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004590:	f10a 0a01 	add.w	sl, sl, #1
 8004594:	9304      	str	r3, [sp, #16]
 8004596:	9307      	str	r3, [sp, #28]
 8004598:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800459c:	931a      	str	r3, [sp, #104]	@ 0x68
 800459e:	4654      	mov	r4, sl
 80045a0:	2205      	movs	r2, #5
 80045a2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80045a6:	4853      	ldr	r0, [pc, #332]	@ (80046f4 <_vfiprintf_r+0x21c>)
 80045a8:	f7fb fe1a 	bl	80001e0 <memchr>
 80045ac:	9a04      	ldr	r2, [sp, #16]
 80045ae:	b9d8      	cbnz	r0, 80045e8 <_vfiprintf_r+0x110>
 80045b0:	06d1      	lsls	r1, r2, #27
 80045b2:	bf44      	itt	mi
 80045b4:	2320      	movmi	r3, #32
 80045b6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80045ba:	0713      	lsls	r3, r2, #28
 80045bc:	bf44      	itt	mi
 80045be:	232b      	movmi	r3, #43	@ 0x2b
 80045c0:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80045c4:	f89a 3000 	ldrb.w	r3, [sl]
 80045c8:	2b2a      	cmp	r3, #42	@ 0x2a
 80045ca:	d015      	beq.n	80045f8 <_vfiprintf_r+0x120>
 80045cc:	9a07      	ldr	r2, [sp, #28]
 80045ce:	4654      	mov	r4, sl
 80045d0:	2000      	movs	r0, #0
 80045d2:	f04f 0c0a 	mov.w	ip, #10
 80045d6:	4621      	mov	r1, r4
 80045d8:	f811 3b01 	ldrb.w	r3, [r1], #1
 80045dc:	3b30      	subs	r3, #48	@ 0x30
 80045de:	2b09      	cmp	r3, #9
 80045e0:	d94b      	bls.n	800467a <_vfiprintf_r+0x1a2>
 80045e2:	b1b0      	cbz	r0, 8004612 <_vfiprintf_r+0x13a>
 80045e4:	9207      	str	r2, [sp, #28]
 80045e6:	e014      	b.n	8004612 <_vfiprintf_r+0x13a>
 80045e8:	eba0 0308 	sub.w	r3, r0, r8
 80045ec:	fa09 f303 	lsl.w	r3, r9, r3
 80045f0:	4313      	orrs	r3, r2
 80045f2:	9304      	str	r3, [sp, #16]
 80045f4:	46a2      	mov	sl, r4
 80045f6:	e7d2      	b.n	800459e <_vfiprintf_r+0xc6>
 80045f8:	9b03      	ldr	r3, [sp, #12]
 80045fa:	1d19      	adds	r1, r3, #4
 80045fc:	681b      	ldr	r3, [r3, #0]
 80045fe:	9103      	str	r1, [sp, #12]
 8004600:	2b00      	cmp	r3, #0
 8004602:	bfbb      	ittet	lt
 8004604:	425b      	neglt	r3, r3
 8004606:	f042 0202 	orrlt.w	r2, r2, #2
 800460a:	9307      	strge	r3, [sp, #28]
 800460c:	9307      	strlt	r3, [sp, #28]
 800460e:	bfb8      	it	lt
 8004610:	9204      	strlt	r2, [sp, #16]
 8004612:	7823      	ldrb	r3, [r4, #0]
 8004614:	2b2e      	cmp	r3, #46	@ 0x2e
 8004616:	d10a      	bne.n	800462e <_vfiprintf_r+0x156>
 8004618:	7863      	ldrb	r3, [r4, #1]
 800461a:	2b2a      	cmp	r3, #42	@ 0x2a
 800461c:	d132      	bne.n	8004684 <_vfiprintf_r+0x1ac>
 800461e:	9b03      	ldr	r3, [sp, #12]
 8004620:	1d1a      	adds	r2, r3, #4
 8004622:	681b      	ldr	r3, [r3, #0]
 8004624:	9203      	str	r2, [sp, #12]
 8004626:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800462a:	3402      	adds	r4, #2
 800462c:	9305      	str	r3, [sp, #20]
 800462e:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8004704 <_vfiprintf_r+0x22c>
 8004632:	7821      	ldrb	r1, [r4, #0]
 8004634:	2203      	movs	r2, #3
 8004636:	4650      	mov	r0, sl
 8004638:	f7fb fdd2 	bl	80001e0 <memchr>
 800463c:	b138      	cbz	r0, 800464e <_vfiprintf_r+0x176>
 800463e:	9b04      	ldr	r3, [sp, #16]
 8004640:	eba0 000a 	sub.w	r0, r0, sl
 8004644:	2240      	movs	r2, #64	@ 0x40
 8004646:	4082      	lsls	r2, r0
 8004648:	4313      	orrs	r3, r2
 800464a:	3401      	adds	r4, #1
 800464c:	9304      	str	r3, [sp, #16]
 800464e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004652:	4829      	ldr	r0, [pc, #164]	@ (80046f8 <_vfiprintf_r+0x220>)
 8004654:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8004658:	2206      	movs	r2, #6
 800465a:	f7fb fdc1 	bl	80001e0 <memchr>
 800465e:	2800      	cmp	r0, #0
 8004660:	d03f      	beq.n	80046e2 <_vfiprintf_r+0x20a>
 8004662:	4b26      	ldr	r3, [pc, #152]	@ (80046fc <_vfiprintf_r+0x224>)
 8004664:	bb1b      	cbnz	r3, 80046ae <_vfiprintf_r+0x1d6>
 8004666:	9b03      	ldr	r3, [sp, #12]
 8004668:	3307      	adds	r3, #7
 800466a:	f023 0307 	bic.w	r3, r3, #7
 800466e:	3308      	adds	r3, #8
 8004670:	9303      	str	r3, [sp, #12]
 8004672:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004674:	443b      	add	r3, r7
 8004676:	9309      	str	r3, [sp, #36]	@ 0x24
 8004678:	e76a      	b.n	8004550 <_vfiprintf_r+0x78>
 800467a:	fb0c 3202 	mla	r2, ip, r2, r3
 800467e:	460c      	mov	r4, r1
 8004680:	2001      	movs	r0, #1
 8004682:	e7a8      	b.n	80045d6 <_vfiprintf_r+0xfe>
 8004684:	2300      	movs	r3, #0
 8004686:	3401      	adds	r4, #1
 8004688:	9305      	str	r3, [sp, #20]
 800468a:	4619      	mov	r1, r3
 800468c:	f04f 0c0a 	mov.w	ip, #10
 8004690:	4620      	mov	r0, r4
 8004692:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004696:	3a30      	subs	r2, #48	@ 0x30
 8004698:	2a09      	cmp	r2, #9
 800469a:	d903      	bls.n	80046a4 <_vfiprintf_r+0x1cc>
 800469c:	2b00      	cmp	r3, #0
 800469e:	d0c6      	beq.n	800462e <_vfiprintf_r+0x156>
 80046a0:	9105      	str	r1, [sp, #20]
 80046a2:	e7c4      	b.n	800462e <_vfiprintf_r+0x156>
 80046a4:	fb0c 2101 	mla	r1, ip, r1, r2
 80046a8:	4604      	mov	r4, r0
 80046aa:	2301      	movs	r3, #1
 80046ac:	e7f0      	b.n	8004690 <_vfiprintf_r+0x1b8>
 80046ae:	ab03      	add	r3, sp, #12
 80046b0:	9300      	str	r3, [sp, #0]
 80046b2:	462a      	mov	r2, r5
 80046b4:	4b12      	ldr	r3, [pc, #72]	@ (8004700 <_vfiprintf_r+0x228>)
 80046b6:	a904      	add	r1, sp, #16
 80046b8:	4630      	mov	r0, r6
 80046ba:	f7fd fbc3 	bl	8001e44 <_printf_float>
 80046be:	4607      	mov	r7, r0
 80046c0:	1c78      	adds	r0, r7, #1
 80046c2:	d1d6      	bne.n	8004672 <_vfiprintf_r+0x19a>
 80046c4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80046c6:	07d9      	lsls	r1, r3, #31
 80046c8:	d405      	bmi.n	80046d6 <_vfiprintf_r+0x1fe>
 80046ca:	89ab      	ldrh	r3, [r5, #12]
 80046cc:	059a      	lsls	r2, r3, #22
 80046ce:	d402      	bmi.n	80046d6 <_vfiprintf_r+0x1fe>
 80046d0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80046d2:	f7fe f927 	bl	8002924 <__retarget_lock_release_recursive>
 80046d6:	89ab      	ldrh	r3, [r5, #12]
 80046d8:	065b      	lsls	r3, r3, #25
 80046da:	f53f af1f 	bmi.w	800451c <_vfiprintf_r+0x44>
 80046de:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80046e0:	e71e      	b.n	8004520 <_vfiprintf_r+0x48>
 80046e2:	ab03      	add	r3, sp, #12
 80046e4:	9300      	str	r3, [sp, #0]
 80046e6:	462a      	mov	r2, r5
 80046e8:	4b05      	ldr	r3, [pc, #20]	@ (8004700 <_vfiprintf_r+0x228>)
 80046ea:	a904      	add	r1, sp, #16
 80046ec:	4630      	mov	r0, r6
 80046ee:	f7fd fe41 	bl	8002374 <_printf_i>
 80046f2:	e7e4      	b.n	80046be <_vfiprintf_r+0x1e6>
 80046f4:	08004bd9 	.word	0x08004bd9
 80046f8:	08004be3 	.word	0x08004be3
 80046fc:	08001e45 	.word	0x08001e45
 8004700:	080044b5 	.word	0x080044b5
 8004704:	08004bdf 	.word	0x08004bdf

08004708 <__swbuf_r>:
 8004708:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800470a:	460e      	mov	r6, r1
 800470c:	4614      	mov	r4, r2
 800470e:	4605      	mov	r5, r0
 8004710:	b118      	cbz	r0, 800471a <__swbuf_r+0x12>
 8004712:	6a03      	ldr	r3, [r0, #32]
 8004714:	b90b      	cbnz	r3, 800471a <__swbuf_r+0x12>
 8004716:	f7fd ffd7 	bl	80026c8 <__sinit>
 800471a:	69a3      	ldr	r3, [r4, #24]
 800471c:	60a3      	str	r3, [r4, #8]
 800471e:	89a3      	ldrh	r3, [r4, #12]
 8004720:	071a      	lsls	r2, r3, #28
 8004722:	d501      	bpl.n	8004728 <__swbuf_r+0x20>
 8004724:	6923      	ldr	r3, [r4, #16]
 8004726:	b943      	cbnz	r3, 800473a <__swbuf_r+0x32>
 8004728:	4621      	mov	r1, r4
 800472a:	4628      	mov	r0, r5
 800472c:	f000 f82a 	bl	8004784 <__swsetup_r>
 8004730:	b118      	cbz	r0, 800473a <__swbuf_r+0x32>
 8004732:	f04f 37ff 	mov.w	r7, #4294967295
 8004736:	4638      	mov	r0, r7
 8004738:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800473a:	6823      	ldr	r3, [r4, #0]
 800473c:	6922      	ldr	r2, [r4, #16]
 800473e:	1a98      	subs	r0, r3, r2
 8004740:	6963      	ldr	r3, [r4, #20]
 8004742:	b2f6      	uxtb	r6, r6
 8004744:	4283      	cmp	r3, r0
 8004746:	4637      	mov	r7, r6
 8004748:	dc05      	bgt.n	8004756 <__swbuf_r+0x4e>
 800474a:	4621      	mov	r1, r4
 800474c:	4628      	mov	r0, r5
 800474e:	f7ff fd99 	bl	8004284 <_fflush_r>
 8004752:	2800      	cmp	r0, #0
 8004754:	d1ed      	bne.n	8004732 <__swbuf_r+0x2a>
 8004756:	68a3      	ldr	r3, [r4, #8]
 8004758:	3b01      	subs	r3, #1
 800475a:	60a3      	str	r3, [r4, #8]
 800475c:	6823      	ldr	r3, [r4, #0]
 800475e:	1c5a      	adds	r2, r3, #1
 8004760:	6022      	str	r2, [r4, #0]
 8004762:	701e      	strb	r6, [r3, #0]
 8004764:	6962      	ldr	r2, [r4, #20]
 8004766:	1c43      	adds	r3, r0, #1
 8004768:	429a      	cmp	r2, r3
 800476a:	d004      	beq.n	8004776 <__swbuf_r+0x6e>
 800476c:	89a3      	ldrh	r3, [r4, #12]
 800476e:	07db      	lsls	r3, r3, #31
 8004770:	d5e1      	bpl.n	8004736 <__swbuf_r+0x2e>
 8004772:	2e0a      	cmp	r6, #10
 8004774:	d1df      	bne.n	8004736 <__swbuf_r+0x2e>
 8004776:	4621      	mov	r1, r4
 8004778:	4628      	mov	r0, r5
 800477a:	f7ff fd83 	bl	8004284 <_fflush_r>
 800477e:	2800      	cmp	r0, #0
 8004780:	d0d9      	beq.n	8004736 <__swbuf_r+0x2e>
 8004782:	e7d6      	b.n	8004732 <__swbuf_r+0x2a>

08004784 <__swsetup_r>:
 8004784:	b538      	push	{r3, r4, r5, lr}
 8004786:	4b29      	ldr	r3, [pc, #164]	@ (800482c <__swsetup_r+0xa8>)
 8004788:	4605      	mov	r5, r0
 800478a:	6818      	ldr	r0, [r3, #0]
 800478c:	460c      	mov	r4, r1
 800478e:	b118      	cbz	r0, 8004798 <__swsetup_r+0x14>
 8004790:	6a03      	ldr	r3, [r0, #32]
 8004792:	b90b      	cbnz	r3, 8004798 <__swsetup_r+0x14>
 8004794:	f7fd ff98 	bl	80026c8 <__sinit>
 8004798:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800479c:	0719      	lsls	r1, r3, #28
 800479e:	d422      	bmi.n	80047e6 <__swsetup_r+0x62>
 80047a0:	06da      	lsls	r2, r3, #27
 80047a2:	d407      	bmi.n	80047b4 <__swsetup_r+0x30>
 80047a4:	2209      	movs	r2, #9
 80047a6:	602a      	str	r2, [r5, #0]
 80047a8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80047ac:	81a3      	strh	r3, [r4, #12]
 80047ae:	f04f 30ff 	mov.w	r0, #4294967295
 80047b2:	e033      	b.n	800481c <__swsetup_r+0x98>
 80047b4:	0758      	lsls	r0, r3, #29
 80047b6:	d512      	bpl.n	80047de <__swsetup_r+0x5a>
 80047b8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80047ba:	b141      	cbz	r1, 80047ce <__swsetup_r+0x4a>
 80047bc:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80047c0:	4299      	cmp	r1, r3
 80047c2:	d002      	beq.n	80047ca <__swsetup_r+0x46>
 80047c4:	4628      	mov	r0, r5
 80047c6:	f7fe ff07 	bl	80035d8 <_free_r>
 80047ca:	2300      	movs	r3, #0
 80047cc:	6363      	str	r3, [r4, #52]	@ 0x34
 80047ce:	89a3      	ldrh	r3, [r4, #12]
 80047d0:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80047d4:	81a3      	strh	r3, [r4, #12]
 80047d6:	2300      	movs	r3, #0
 80047d8:	6063      	str	r3, [r4, #4]
 80047da:	6923      	ldr	r3, [r4, #16]
 80047dc:	6023      	str	r3, [r4, #0]
 80047de:	89a3      	ldrh	r3, [r4, #12]
 80047e0:	f043 0308 	orr.w	r3, r3, #8
 80047e4:	81a3      	strh	r3, [r4, #12]
 80047e6:	6923      	ldr	r3, [r4, #16]
 80047e8:	b94b      	cbnz	r3, 80047fe <__swsetup_r+0x7a>
 80047ea:	89a3      	ldrh	r3, [r4, #12]
 80047ec:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80047f0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80047f4:	d003      	beq.n	80047fe <__swsetup_r+0x7a>
 80047f6:	4621      	mov	r1, r4
 80047f8:	4628      	mov	r0, r5
 80047fa:	f000 f883 	bl	8004904 <__smakebuf_r>
 80047fe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004802:	f013 0201 	ands.w	r2, r3, #1
 8004806:	d00a      	beq.n	800481e <__swsetup_r+0x9a>
 8004808:	2200      	movs	r2, #0
 800480a:	60a2      	str	r2, [r4, #8]
 800480c:	6962      	ldr	r2, [r4, #20]
 800480e:	4252      	negs	r2, r2
 8004810:	61a2      	str	r2, [r4, #24]
 8004812:	6922      	ldr	r2, [r4, #16]
 8004814:	b942      	cbnz	r2, 8004828 <__swsetup_r+0xa4>
 8004816:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800481a:	d1c5      	bne.n	80047a8 <__swsetup_r+0x24>
 800481c:	bd38      	pop	{r3, r4, r5, pc}
 800481e:	0799      	lsls	r1, r3, #30
 8004820:	bf58      	it	pl
 8004822:	6962      	ldrpl	r2, [r4, #20]
 8004824:	60a2      	str	r2, [r4, #8]
 8004826:	e7f4      	b.n	8004812 <__swsetup_r+0x8e>
 8004828:	2000      	movs	r0, #0
 800482a:	e7f7      	b.n	800481c <__swsetup_r+0x98>
 800482c:	20000010 	.word	0x20000010

08004830 <_raise_r>:
 8004830:	291f      	cmp	r1, #31
 8004832:	b538      	push	{r3, r4, r5, lr}
 8004834:	4605      	mov	r5, r0
 8004836:	460c      	mov	r4, r1
 8004838:	d904      	bls.n	8004844 <_raise_r+0x14>
 800483a:	2316      	movs	r3, #22
 800483c:	6003      	str	r3, [r0, #0]
 800483e:	f04f 30ff 	mov.w	r0, #4294967295
 8004842:	bd38      	pop	{r3, r4, r5, pc}
 8004844:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8004846:	b112      	cbz	r2, 800484e <_raise_r+0x1e>
 8004848:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800484c:	b94b      	cbnz	r3, 8004862 <_raise_r+0x32>
 800484e:	4628      	mov	r0, r5
 8004850:	f000 f830 	bl	80048b4 <_getpid_r>
 8004854:	4622      	mov	r2, r4
 8004856:	4601      	mov	r1, r0
 8004858:	4628      	mov	r0, r5
 800485a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800485e:	f000 b817 	b.w	8004890 <_kill_r>
 8004862:	2b01      	cmp	r3, #1
 8004864:	d00a      	beq.n	800487c <_raise_r+0x4c>
 8004866:	1c59      	adds	r1, r3, #1
 8004868:	d103      	bne.n	8004872 <_raise_r+0x42>
 800486a:	2316      	movs	r3, #22
 800486c:	6003      	str	r3, [r0, #0]
 800486e:	2001      	movs	r0, #1
 8004870:	e7e7      	b.n	8004842 <_raise_r+0x12>
 8004872:	2100      	movs	r1, #0
 8004874:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8004878:	4620      	mov	r0, r4
 800487a:	4798      	blx	r3
 800487c:	2000      	movs	r0, #0
 800487e:	e7e0      	b.n	8004842 <_raise_r+0x12>

08004880 <raise>:
 8004880:	4b02      	ldr	r3, [pc, #8]	@ (800488c <raise+0xc>)
 8004882:	4601      	mov	r1, r0
 8004884:	6818      	ldr	r0, [r3, #0]
 8004886:	f7ff bfd3 	b.w	8004830 <_raise_r>
 800488a:	bf00      	nop
 800488c:	20000010 	.word	0x20000010

08004890 <_kill_r>:
 8004890:	b538      	push	{r3, r4, r5, lr}
 8004892:	4d07      	ldr	r5, [pc, #28]	@ (80048b0 <_kill_r+0x20>)
 8004894:	2300      	movs	r3, #0
 8004896:	4604      	mov	r4, r0
 8004898:	4608      	mov	r0, r1
 800489a:	4611      	mov	r1, r2
 800489c:	602b      	str	r3, [r5, #0]
 800489e:	f7fd f938 	bl	8001b12 <_kill>
 80048a2:	1c43      	adds	r3, r0, #1
 80048a4:	d102      	bne.n	80048ac <_kill_r+0x1c>
 80048a6:	682b      	ldr	r3, [r5, #0]
 80048a8:	b103      	cbz	r3, 80048ac <_kill_r+0x1c>
 80048aa:	6023      	str	r3, [r4, #0]
 80048ac:	bd38      	pop	{r3, r4, r5, pc}
 80048ae:	bf00      	nop
 80048b0:	20000338 	.word	0x20000338

080048b4 <_getpid_r>:
 80048b4:	f7fd b925 	b.w	8001b02 <_getpid>

080048b8 <__swhatbuf_r>:
 80048b8:	b570      	push	{r4, r5, r6, lr}
 80048ba:	460c      	mov	r4, r1
 80048bc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80048c0:	2900      	cmp	r1, #0
 80048c2:	b096      	sub	sp, #88	@ 0x58
 80048c4:	4615      	mov	r5, r2
 80048c6:	461e      	mov	r6, r3
 80048c8:	da0d      	bge.n	80048e6 <__swhatbuf_r+0x2e>
 80048ca:	89a3      	ldrh	r3, [r4, #12]
 80048cc:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80048d0:	f04f 0100 	mov.w	r1, #0
 80048d4:	bf14      	ite	ne
 80048d6:	2340      	movne	r3, #64	@ 0x40
 80048d8:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80048dc:	2000      	movs	r0, #0
 80048de:	6031      	str	r1, [r6, #0]
 80048e0:	602b      	str	r3, [r5, #0]
 80048e2:	b016      	add	sp, #88	@ 0x58
 80048e4:	bd70      	pop	{r4, r5, r6, pc}
 80048e6:	466a      	mov	r2, sp
 80048e8:	f000 f848 	bl	800497c <_fstat_r>
 80048ec:	2800      	cmp	r0, #0
 80048ee:	dbec      	blt.n	80048ca <__swhatbuf_r+0x12>
 80048f0:	9901      	ldr	r1, [sp, #4]
 80048f2:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80048f6:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80048fa:	4259      	negs	r1, r3
 80048fc:	4159      	adcs	r1, r3
 80048fe:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8004902:	e7eb      	b.n	80048dc <__swhatbuf_r+0x24>

08004904 <__smakebuf_r>:
 8004904:	898b      	ldrh	r3, [r1, #12]
 8004906:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004908:	079d      	lsls	r5, r3, #30
 800490a:	4606      	mov	r6, r0
 800490c:	460c      	mov	r4, r1
 800490e:	d507      	bpl.n	8004920 <__smakebuf_r+0x1c>
 8004910:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8004914:	6023      	str	r3, [r4, #0]
 8004916:	6123      	str	r3, [r4, #16]
 8004918:	2301      	movs	r3, #1
 800491a:	6163      	str	r3, [r4, #20]
 800491c:	b003      	add	sp, #12
 800491e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004920:	ab01      	add	r3, sp, #4
 8004922:	466a      	mov	r2, sp
 8004924:	f7ff ffc8 	bl	80048b8 <__swhatbuf_r>
 8004928:	9f00      	ldr	r7, [sp, #0]
 800492a:	4605      	mov	r5, r0
 800492c:	4639      	mov	r1, r7
 800492e:	4630      	mov	r0, r6
 8004930:	f7fe fec6 	bl	80036c0 <_malloc_r>
 8004934:	b948      	cbnz	r0, 800494a <__smakebuf_r+0x46>
 8004936:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800493a:	059a      	lsls	r2, r3, #22
 800493c:	d4ee      	bmi.n	800491c <__smakebuf_r+0x18>
 800493e:	f023 0303 	bic.w	r3, r3, #3
 8004942:	f043 0302 	orr.w	r3, r3, #2
 8004946:	81a3      	strh	r3, [r4, #12]
 8004948:	e7e2      	b.n	8004910 <__smakebuf_r+0xc>
 800494a:	89a3      	ldrh	r3, [r4, #12]
 800494c:	6020      	str	r0, [r4, #0]
 800494e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004952:	81a3      	strh	r3, [r4, #12]
 8004954:	9b01      	ldr	r3, [sp, #4]
 8004956:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800495a:	b15b      	cbz	r3, 8004974 <__smakebuf_r+0x70>
 800495c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004960:	4630      	mov	r0, r6
 8004962:	f000 f81d 	bl	80049a0 <_isatty_r>
 8004966:	b128      	cbz	r0, 8004974 <__smakebuf_r+0x70>
 8004968:	89a3      	ldrh	r3, [r4, #12]
 800496a:	f023 0303 	bic.w	r3, r3, #3
 800496e:	f043 0301 	orr.w	r3, r3, #1
 8004972:	81a3      	strh	r3, [r4, #12]
 8004974:	89a3      	ldrh	r3, [r4, #12]
 8004976:	431d      	orrs	r5, r3
 8004978:	81a5      	strh	r5, [r4, #12]
 800497a:	e7cf      	b.n	800491c <__smakebuf_r+0x18>

0800497c <_fstat_r>:
 800497c:	b538      	push	{r3, r4, r5, lr}
 800497e:	4d07      	ldr	r5, [pc, #28]	@ (800499c <_fstat_r+0x20>)
 8004980:	2300      	movs	r3, #0
 8004982:	4604      	mov	r4, r0
 8004984:	4608      	mov	r0, r1
 8004986:	4611      	mov	r1, r2
 8004988:	602b      	str	r3, [r5, #0]
 800498a:	f7fd f922 	bl	8001bd2 <_fstat>
 800498e:	1c43      	adds	r3, r0, #1
 8004990:	d102      	bne.n	8004998 <_fstat_r+0x1c>
 8004992:	682b      	ldr	r3, [r5, #0]
 8004994:	b103      	cbz	r3, 8004998 <_fstat_r+0x1c>
 8004996:	6023      	str	r3, [r4, #0]
 8004998:	bd38      	pop	{r3, r4, r5, pc}
 800499a:	bf00      	nop
 800499c:	20000338 	.word	0x20000338

080049a0 <_isatty_r>:
 80049a0:	b538      	push	{r3, r4, r5, lr}
 80049a2:	4d06      	ldr	r5, [pc, #24]	@ (80049bc <_isatty_r+0x1c>)
 80049a4:	2300      	movs	r3, #0
 80049a6:	4604      	mov	r4, r0
 80049a8:	4608      	mov	r0, r1
 80049aa:	602b      	str	r3, [r5, #0]
 80049ac:	f7fd f921 	bl	8001bf2 <_isatty>
 80049b0:	1c43      	adds	r3, r0, #1
 80049b2:	d102      	bne.n	80049ba <_isatty_r+0x1a>
 80049b4:	682b      	ldr	r3, [r5, #0]
 80049b6:	b103      	cbz	r3, 80049ba <_isatty_r+0x1a>
 80049b8:	6023      	str	r3, [r4, #0]
 80049ba:	bd38      	pop	{r3, r4, r5, pc}
 80049bc:	20000338 	.word	0x20000338

080049c0 <_init>:
 80049c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80049c2:	bf00      	nop
 80049c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80049c6:	bc08      	pop	{r3}
 80049c8:	469e      	mov	lr, r3
 80049ca:	4770      	bx	lr

080049cc <_fini>:
 80049cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80049ce:	bf00      	nop
 80049d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80049d2:	bc08      	pop	{r3}
 80049d4:	469e      	mov	lr, r3
 80049d6:	4770      	bx	lr
